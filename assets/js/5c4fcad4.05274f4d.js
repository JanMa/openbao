"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4393],{1052:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=n(74848),t=n(28453);const i={layout:"docs",page_title:"Configure Vault ServiceNow Credential Resolver",description:"This section documents the configurables for the Vault ServiceNow Credential Resolver."},l="Configuring the Vault credential resolver",c={id:"platform/servicenow/configuration",title:"Configuring the Vault credential resolver",description:"This section documents the configurables for the Vault ServiceNow Credential Resolver.",source:"@site/content/docs/platform/servicenow/configuration.mdx",sourceDirName:"platform/servicenow",slug:"/platform/servicenow/configuration",permalink:"/openbao/docs/platform/servicenow/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/platform/servicenow/configuration.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"Configure Vault ServiceNow Credential Resolver",description:"This section documents the configurables for the Vault ServiceNow Credential Resolver."},sidebar:"docs",previous:{title:"Installing the Vault credential resolver",permalink:"/openbao/docs/platform/servicenow/installation"},next:{title:"Troubleshooting",permalink:"/openbao/docs/platform/servicenow/troubleshooting"}},o={},d=[{value:"MID server properties",id:"mid-server-properties",level:2},{value:"Configuring discovery credentials",id:"configuring-discovery-credentials",level:2},{value:"Creating a secret in Vault",id:"creating-a-secret-in-vault",level:3},{value:"Configuring the resolver to use a secret",id:"configuring-the-resolver-to-use-a-secret",level:3}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"configuring-the-vault-credential-resolver",children:"Configuring the Vault credential resolver"}),"\n",(0,s.jsx)(r.h2,{id:"mid-server-properties",children:"MID server properties"}),"\n",(0,s.jsxs)(r.p,{children:["The following ",(0,s.jsx)(r.a,{href:"https://docs.servicenow.com/bundle/quebec-servicenow-platform/page/product/mid-server/reference/r_MIDServerProperties.html#t_SetMIDServerProperties",children:"properties"})," are supported by the Vault Credential Resolver:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"mid.external_credentials.vault.address"})," ",(0,s.jsx)(r.code,{children:'(string: "")'})," - Address of Vault Agent as resolveable by the MID server.\nFor example, if Vault Agent is on the same server as the MID server it could be ",(0,s.jsx)(r.code,{children:"https://127.0.0.1:8200"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"mid.external_credentials.vault.ca"})," ",(0,s.jsx)(r.code,{children:'(string: "")'})," - The CA certificate to trust for TLS in PEM format. If unset,\nthe system's trusted CAs will be used."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"mid.external_credentials.vault.tls_skip_verify"})," ",(0,s.jsx)(r.code,{children:'(string: "")'})," - When set to true, skips verification of the Vault server\nTLS certificiate. Setting this to true is not recommended for production."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"configuring-discovery-credentials",children:"Configuring discovery credentials"}),"\n",(0,s.jsx)(r.p,{children:"To consume Vault credentials from your MID server, you will need to:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Create a secret in Vault"}),"\n",(0,s.jsx)(r.li,{children:"Configure the resolver to use that secret"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"creating-a-secret-in-vault",children:"Creating a secret in Vault"}),"\n",(0,s.jsx)(r.p,{children:"The credential resolver supports reading credentials from the following secret engines:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/secrets/ad",children:"Active Directory"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/secrets/aws",children:"AWS"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/secrets/kv/kv-v1",children:"K/V v1"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/docs/secrets/kv/kv-v2",children:"K/V v2"})}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"When creating K/V secrets, you must use the following keys for each component\nto ensure it is correctly mapped to ServiceNow's credential fields:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Key"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Supported aliases"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"username"}),(0,s.jsx)(r.td,{children:"The username"}),(0,s.jsx)(r.td,{children:"access_key"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"password"}),(0,s.jsx)(r.td,{children:"The password"}),(0,s.jsx)(r.td,{children:"secret_key, current_password"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"private_key"}),(0,s.jsx)(r.td,{children:"The private SSH key"}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"passphrase"}),(0,s.jsx)(r.td,{children:"The passphrase for the private SSH key"}),(0,s.jsx)(r.td,{})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Most ServiceNow credential types will expect at least a username and either\na password or a private key. To help surface errors early, the credential\nresolver validates that a username and password are present for:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"aws"}),"\n",(0,s.jsx)(r.li,{children:"basic"}),"\n",(0,s.jsx)(r.li,{children:"jdbc"}),"\n",(0,s.jsx)(r.li,{children:"jms"}),"\n",(0,s.jsx)(r.li,{children:"ssh_password"}),"\n",(0,s.jsx)(r.li,{children:"vmware"}),"\n",(0,s.jsx)(r.li,{children:"windows"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"And the credential resolver expects the following types to specify at least\na username and a private key:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"api_key"}),"\n",(0,s.jsx)(r.li,{children:"cfg_chef_credentials"}),"\n",(0,s.jsx)(r.li,{children:"infoblox"}),"\n",(0,s.jsx)(r.li,{children:"sn_cfg_ansible"}),"\n",(0,s.jsx)(r.li,{children:"sn_disco_certmgmt_certificate_ca"}),"\n",(0,s.jsx)(r.li,{children:"ssh_private_key"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"configuring-the-resolver-to-use-a-secret",children:"Configuring the resolver to use a secret"}),"\n",(0,s.jsx)(r.p,{children:"In the ServiceNow UI:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:['Navigate to "Discovery - Credentials" -> New',"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Select a type from the list"}),"\n",(0,s.jsx)(r.li,{children:'Tick "External credential store"'}),"\n",(0,s.jsx)(r.li,{children:"Fill in a meaningful name"}),"\n",(0,s.jsxs)(r.li,{children:['Set "Credential ID" to the path in Vault where your secret is located, e.g.\nfor a KV v2 secret engine mounted at "secret", you might have a secret stored\nunder "ssh": ',(0,s.jsx)(r.code,{children:"secret/data/ssh"}),". Check the ",(0,s.jsx)(r.a,{href:"/api-docs/secret/",children:"API docs"})," for\nyour secret engine if you are unsure of the path to use"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Optional:"}),' Click "Test credential" and select a MID server and a target\nto test against to test everything is working']}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var s=n(96540);const t={},i=s.createContext(t);function l(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);