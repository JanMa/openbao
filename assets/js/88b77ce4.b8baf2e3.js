"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4123],{59521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=n(74848),s=n(28453);const a={layout:"docs",page_title:"Identity Tokens",description:"Details and best practices for identity tokens."},o="Identity tokens",r={id:"secrets/identity/identity-token",title:"Identity tokens",description:"Details and best practices for identity tokens.",source:"@site/content/docs/secrets/identity/identity-token.mdx",sourceDirName:"secrets/identity",slug:"/secrets/identity/identity-token",permalink:"/openbao/docs/secrets/identity/identity-token",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/secrets/identity/identity-token.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"Identity Tokens",description:"Details and best practices for identity tokens."},sidebar:"tutorialSidebar",previous:{title:"Identity secrets engine",permalink:"/openbao/docs/secrets/identity/"},next:{title:"OIDC identity provider",permalink:"/openbao/docs/secrets/identity/oidc-provider"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Roles and keys",id:"roles-and-keys",level:3},{value:"Token contents and templates",id:"token-contents-and-templates",level:3},{value:"Token generation",id:"token-generation",level:3},{value:"Verifying authenticity of ID tokens generated by OpenBao",id:"verifying-authenticity-of-id-tokens-generated-by-openbao",level:3},{value:"Issuer considerations",id:"issuer-considerations",level:3},{value:"API",id:"api",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"identity-tokens",children:"Identity tokens"}),"\n",(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["Identity information is used throughout OpenBao, but it can also be exported for\nuse by other applications. An authorized user/application can request a token\nthat encapsulates identity information for their associated entity. These\ntokens are signed JWTs following the ",(0,i.jsx)(t.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#IDToken",children:"OIDC ID\ntoken"})," structure.\nThe public keys used to authenticate the tokens are published by OpenBao on an\nunauthenticated endpoint following OIDC discovery and JWKS conventions, which\nshould be directly usable by JWT/OIDC libraries. An introspection endpoint is\nalso provided by OpenBao for token verification."]}),"\n",(0,i.jsx)(t.h3,{id:"roles-and-keys",children:"Roles and keys"}),"\n",(0,i.jsxs)(t.p,{children:['OIDC-compliant ID tokens are generated against a role which allows configuration\nof token claims via a templating system, token ttl, and a way to specify which\n"key" will be used to sign the token. The role template is an optional parameter\nto customize the token contents and is described in the next section. Token TTL\ncontrols the expiration time of the token, after which verification libraries will\nconsider the token invalid. All roles have an associated ',(0,i.jsx)(t.code,{children:"client_id"})," that will be\nadded to the token's ",(0,i.jsx)(t.code,{children:"aud"})," parameter. JWT/OIDC libraries will usually require this\nvalue. The parameter may be set by the operator to a chosen value, or a\nOpenBao-generated value will be used if left unconfigured."]}),"\n",(0,i.jsxs)(t.p,{children:["A role's ",(0,i.jsx)(t.code,{children:"key"})," parameter links a role to an existing named key (multiple roles\nmay refer to the same key). It is not possible to generate an unsigned ID token."]}),"\n",(0,i.jsxs)(t.p,{children:["A named key is a public/private key pair generated by OpenBao. The private key is\nused to sign the identity tokens, and the public key is used by clients to\nverify the signature. Keys are regularly rotated, whereby a new key pair is\ngenerated and the previous ",(0,i.jsx)(t.em,{children:"public"})," key is retained for a limited time for\nverification purposes."]}),"\n",(0,i.jsx)(t.p,{children:"A named key's configuration specifies a rotation period, a verification ttl,\nsigning algorithm and allowed client IDs. Rotation period specifies the\nfrequency at which a new signing key is generated and the private portion of the\nprevious signing key is deleted. Verification ttl is the time a public key is\nretained for verification after being rotated. By default, keys are rotated\nevery 24 hours, and continue to be available for verification for 24 hours after\ntheir rotation."}),"\n",(0,i.jsxs)(t.p,{children:["A key's list of allowed client IDs limits which roles may reference the key. The\nparameter may be set to ",(0,i.jsx)(t.code,{children:"*"})," to allow all roles. The validity evaluation is made\nwhen a token is requested, not during configuration."]}),"\n",(0,i.jsx)(t.h3,{id:"token-contents-and-templates",children:"Token contents and templates"}),"\n",(0,i.jsx)(t.p,{children:"Identity tokens will always contain, at a minimum, the claims required by OIDC:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"iss"})," - Issuer URL"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"sub"})," - Requester's entity ID"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"aud"})," - ",(0,i.jsx)(t.code,{children:"client_id"})," for the role"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"iat"})," - Time of issue"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"exp"})," - Expiration time for the token"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["In addition, the operator may configure per-role templates that allow a variety\nof other entity information to be added to the token. The templates are\nstructured as JSON with replaceable parameters. The parameter syntax is the same\nas that used for ",(0,i.jsx)(t.a,{href:"/docs/concepts/policies",children:"ACL Path Templating"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"For example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:'{\n  "color": {{identity.entity.metadata.color}},\n  "userinfo": {\n     "username": {{identity.entity.aliases.usermap_123.metadata.username}},\n     "groups": {{identity.entity.groups.names}}\n  },\n  "nbf": {{time.now}}\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"When a token is requested, the resulting template might be populated as:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "color": "green",\n  "userinfo": {\n     "username": "bob",\n     "groups": ["web", "engr", "default"]\n  },\n  "nbf": 1561411915\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"which would be merged with the base OIDC claims into the final token:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "iss": "https://10.1.1.45:8200/v1/identity/oidc",\n  "sub": "a2cd63d3-5364-406f-980e-8d71bb0692f5",\n  "aud": "SxSouteCYPBoaTFy94hFghmekos",\n  "iat": 1561411915,\n  "exp": 1561412215,\n  "color": "green",\n  "userinfo": {\n    "username": "bob",\n    "groups": ["web", "engr", "default"]\n  },\n  "nbf": 1561411915\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Note how the template is merged, with top level template keys becoming top level\ntoken keys. For this reason, templates may not contain top level keys that\noverwrite the standard OIDC claims."}),"\n",(0,i.jsx)(t.p,{children:"Template parameters that are not present for an entity, such as a metadata that\nisn't present, or an alias accessor which doesn't exist, are simply empty\nstrings or objects, depending on the data type."}),"\n",(0,i.jsx)(t.p,{children:"Templates are configured on the role and may be optionally encoded as base64."}),"\n",(0,i.jsx)(t.p,{children:"The full list of template parameters is shown below:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.id"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The entity's ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.name"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The entity's name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.groups.ids"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The IDs of the groups the entity is a member of"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.groups.names"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The names of the groups the entity is a member of"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.metadata"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Metadata associated with the entity"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.metadata.<metadata key>"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Metadata associated with the entity for the given key"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.aliases.<mount accessor>.id"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Entity alias ID for the given mount"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.aliases.<mount accessor>.name"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Entity alias name for the given mount"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.aliases.<mount accessor>.metadata"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Metadata associated with the alias for the given mount"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.aliases.<mount accessor>.metadata.<metadata key>"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Metadata associated with the alias for the given mount and metadata key"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.aliases.<mount accessor>.custom_metadata"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Custom metadata associated with the alias for the given mount"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"identity.entity.aliases.<mount accessor>.custom_metadata.<custom_metadata key>"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Custom metadata associated with the alias for the given mount and custom metadata key"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"time.now"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Current time as integral seconds since the Epoch"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"time.now.plus.<duration>"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Current time plus a ",(0,i.jsx)(t.a,{href:"/docs/concepts/duration-format",children:"duration format string"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"time.now.minus.<duration>"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Current time minus a ",(0,i.jsx)(t.a,{href:"/docs/concepts/duration-format",children:"duration format string"})]})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"token-generation",children:"Token generation"}),"\n",(0,i.jsxs)(t.p,{children:["An authenticated client may request a token using the ",(0,i.jsx)(t.a,{href:"/api-docs/secret/identity/tokens#generate-a-signed-id-token",children:"token generation\nendpoint"}),". The token\nwill be generated per the requested role's specifications, for the requester's\nentity. It is not possible to generate tokens for an arbitrary entity."]}),"\n",(0,i.jsx)(t.h3,{id:"verifying-authenticity-of-id-tokens-generated-by-openbao",children:"Verifying authenticity of ID tokens generated by OpenBao"}),"\n",(0,i.jsx)(t.p,{children:"An identity token may be verified by the client party using the public keys\npublished by OpenBao, or via an OpenBao-provided introspection endpoint."}),"\n",(0,i.jsxs)(t.p,{children:['OpenBao will serve standard "',(0,i.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc5785",children:".well-known"}),'"\nendpoints that allow easy integration with OIDC verification libraries.\nConfiguring the libraries will typically involve providing an issuer URL and\nclient ID. The library will then handle key requests and can validate the\nsignature and claims requirements on tokens. This approach has the advantage of\nonly requiring ',(0,i.jsx)(t.em,{children:"access"})," to OpenBao, not ",(0,i.jsx)(t.em,{children:"authorization"}),", as the .well-known\nendpoints are unauthenticated."]}),"\n",(0,i.jsxs)(t.p,{children:["Alternatively, the token may be sent to OpenBao for verification via an\n",(0,i.jsx)(t.a,{href:"/api-docs/secret/identity/tokens#introspect-a-signed-id-token",children:"introspection endpoint"}),'.\nThe response will indicate whether the token is "active" or not, as well as any\nerrors that occurred during validation. Beyond simply allowing the client to\ndelegate verification to OpenBao, using this endpoint incorporates the additional\ncheck of whether the entity is still active or not, which is something that\ncannot be determined from the token alone. Unlike the .well-known endpoint, accessing the\nintrospection endpoint does require a valid OpenBao token and sufficient\nauthorization.']}),"\n",(0,i.jsx)(t.h3,{id:"issuer-considerations",children:"Issuer considerations"}),"\n",(0,i.jsxs)(t.p,{children:["The identity token system has one configurable parameter: issuer. The issuer\n",(0,i.jsx)(t.code,{children:"iss"})," claim is particularly important for proper validation of the token by\nclients.  Consumers of the token will request public keys from OpenBao using the\nissuer URL, so it must be network reachable. Furthermore, the returned set of\nkeys will include an issuer that must match the request."]}),"\n",(0,i.jsxs)(t.p,{children:["By default OpenBao will set the issuer to the OpenBao instance's\n",(0,i.jsx)(t.a,{href:"/docs/configuration#api_addr",children:(0,i.jsx)(t.code,{children:"api_addr"})}),". This means that tokens\nissued in a given cluster should be validated within that same cluster.\nAlternatively, the ",(0,i.jsx)(t.a,{href:"/api-docs/secret/identity/tokens#issuer",children:(0,i.jsx)(t.code,{children:"issuer"})})," parameter\nmay be configured explicitly. This address must point to the identity/oidc path\nfor the OpenBao instance (e.g.\n",(0,i.jsx)(t.code,{children:"https://openbao-1.example.com:8200/v1/identity/oidc"}),") and should be\nreachable by any client trying to validate identity tokens."]}),"\n",(0,i.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(t.p,{children:["The Identity secrets engine has a full HTTP API. Please see the\n",(0,i.jsx)(t.a,{href:"/api-docs/secret/identity",children:"Identity secrets engine API"})," for more\ndetails."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(96540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);