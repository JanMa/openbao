"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3027],{2184:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=i(74848),t=i(28453);const r={layout:"docs",page_title:"pki reissue - Command",description:'The "pki reissue" command issues a new intermediate ("issuer") certificate,\nusing an existing certificate in OpenBao as a template, and using a parent\ncertificate in OpenBao to issue the new certificate.'},a="pki reissue",o={id:"commands/pki/reissue",title:"pki reissue",description:'The "pki reissue" command issues a new intermediate ("issuer") certificate,\nusing an existing certificate in OpenBao as a template, and using a parent\ncertificate in OpenBao to issue the new certificate.',source:"@site/content/docs/commands/pki/reissue.mdx",sourceDirName:"commands/pki",slug:"/commands/pki/reissue",permalink:"/openbao/docs/commands/pki/reissue",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/commands/pki/reissue.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"pki reissue - Command",description:'The "pki reissue" command issues a new intermediate ("issuer") certificate,\nusing an existing certificate in OpenBao as a template, and using a parent\ncertificate in OpenBao to issue the new certificate.'},sidebar:"tutorialSidebar",previous:{title:"pki list-intermediates",permalink:"/openbao/docs/commands/pki/list-intermediates"},next:{title:"pki verify-sign",permalink:"/openbao/docs/commands/pki/verify-sign"}},c={},d=[{value:"Usage",id:"usage",level:2},{value:"Flags",id:"flags",level:3},{value:"Options",id:"options",level:3},{value:"Accessed APIs",id:"accessed-apis",level:3},{value:"Examples",id:"examples",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"pki-reissue",children:"pki reissue"}),"\n",(0,s.jsx)(n.p,{children:"Frequently, a reissued CA certificate is to be very similar to another.\nThis command enables reissuing a CA, using an existing issuer within\nOpenBao as a template, but allowing modifications to the desired attributes."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Usage: ",(0,s.jsx)(n.code,{children:"bao pki reissue [flags] <parent> <template> <child_mount> [options]"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[flags]"})," are optional arguments described below."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<parent>"})," is the fully qualified path of the Certificate Authority in OpenBao\nwhich will issue the new intermediate certificate."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<template>"})," is the fully qualified path of an intermediate certificate in OpenBao\nwhich will be used to populate certificate fields not overridden by ",(0,s.jsx)(n.code,{children:"[options]"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["~> ",(0,s.jsx)(n.strong,{children:"Note"}),": not all possible certificate fields are supported by OpenBao, and\nthis template reader covers only those OpenBao generates as a best effort.  If\nunknown fields are set, such as when an external CA was imported into OpenBao,\nthere may not be a warning that those are missing from the new issuer."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<child_mount>"})," is the path of the mount in OpenBao where the new issuer is saved."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[options]"})," are the superset of the k=v options passed to generate/intermediate\nand sign-intermediate commands.  See ",(0,s.jsx)(n.a,{href:"/docs/commands/pki/reissue#options",children:"below"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The output of this command when it is successful is to read the resulting new\nissuer entry."}),"\n",(0,s.jsx)(n.h3,{id:"flags",children:"Flags"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-type"})," ",(0,s.jsx)(n.code,{children:'(string: "internal")'})," - This determines the type of key use for the\nnewly created certificate.  Valid types are ",(0,s.jsx)(n.code,{children:'"existing"'})," - where we link to\na key already present in the OpenBao-backend to be used - ",(0,s.jsx)(n.code,{children:'"internal"'})," - to\ngenerate a new key for this certificate - or ",(0,s.jsx)(n.code,{children:'"kms"'})," - to link to an external\nkey.  Exported keys are not available through this API."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["~> ",(0,s.jsx)(n.strong,{children:"Note"}),": It is only possible to generate a new certificate with an existing\nkey that exists in the same mount where that key-material exists.  This\ncommand is expected to fail should the template exist on a different mount,\n",(0,s.jsx)(n.code,{children:"existing"})," is the selected type, and no ",(0,s.jsx)(n.code,{children:"key_ref"})," for a key in the new issuer\nmount is provided."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-issuer_name"})," ",(0,s.jsx)(n.code,{children:'(string: "")'})," - If present, the newly created issuer will be\ngiven this name."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(n.p,{children:["Other than ",(0,s.jsx)(n.code,{children:"type"})," (which is passed as a flag, see above), this command accepts\nall options provided to the\n",(0,s.jsx)(n.a,{href:"/api-docs/secret/pki#generate-intermediate-csr",children:"Generate CSR"})," and\n",(0,s.jsx)(n.a,{href:"/api-docs/secret/pki#sign-intermediate",children:"Sign Intermediate"})," endpoints."]}),"\n",(0,s.jsx)(n.h3,{id:"accessed-apis",children:"Accessed APIs"}),"\n",(0,s.jsx)(n.p,{children:"Note that the OpenBao user running this command will need to have access to the\nfollowing API endpoints, each representing a step in the process:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"READ /:parent"})," - used to check validity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"READ /:template"})," - used to generate the options for the new certificate"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"WRITE /:child_mount/intermediate/generate/:type"})," - used to generate the csr"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"WRITE /:parent/sign-intermediate"})," - used to sign the csr"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"WRITE /:child_mount/issuers/import/cert"})," - used to import the new issuer,\nand the issuer chain"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"UPDATE /:child_mount/issuer/:issuer_refs"})," - used to both name the new\nissuer, and also set the name of the parent in the issuer chain"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"READ /:child_mount/issuer/:new_issuer_ref"})," - used to verify completion,\ngenerate the output"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell-session",children:'$ bao pki reissue -issuer_name="SecondDepartment" /pki_root/issuer/default /pki_int/issuer/FirstDepartment /pki_int_2/ common_name="second-department.example.com"\nKey                               Value\n---                               -----\nca_chain                          [-----BEGIN CERTIFICATE-----\nMIID0DCCArigAwIBAgIUdfRe05B5eRXsg3pvsJ/g94eYuWkwDQYJKoZIhvcNAQEL```\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(96540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);