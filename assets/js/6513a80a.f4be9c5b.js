"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9454],{829:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=s(74848),a=s(28453);const r={description:'The "read" command reads data from OpenBao at the given path. This can be used\nto read secrets, generate dynamic credentials, get configuration details, and\nmore.'},o="read",i={id:"commands/read",title:"read",description:'The "read" command reads data from OpenBao at the given path. This can be used\nto read secrets, generate dynamic credentials, get configuration details, and\nmore.',source:"@site/content/docs/commands/read.mdx",sourceDirName:"commands",slug:"/commands/read",permalink:"/openbao/docs/commands/read",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/commands/read.mdx",tags:[],version:"current",frontMatter:{description:'The "read" command reads data from OpenBao at the given path. This can be used\nto read secrets, generate dynamic credentials, get configuration details, and\nmore.'},sidebar:"docs",previous:{title:"proxy",permalink:"/openbao/docs/commands/proxy"},next:{title:"Overview",permalink:"/openbao/docs/commands/secrets/"}},d={},c=[{value:"Examples",id:"examples",level:2},{value:"API versus CLI",id:"api-versus-cli",level:3},{value:"Usage",id:"usage",level:2},{value:"Output options",id:"output-options",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"read",children:"read"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"read"})," command reads data from OpenBao at the given path (wrapper command for\nHTTP GET). You can use the command to read secrets, generate dynamic\ncredentials, get configuration details, and more."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:"Read entity details of a given ID:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao read identity/entity/id/2f09126d-d161-abb8-2241-555886491d97\n"})}),"\n",(0,t.jsx)(n.h3,{id:"api-versus-cli",children:"API versus CLI"}),"\n",(0,t.jsxs)(n.p,{children:["Assuming that you have K/V version 2 (",(0,t.jsx)(n.code,{children:"kv-v2"}),") secrets engine enabled at\n",(0,t.jsx)(n.code,{children:"secret/"}),", the following command reads secrets at the ",(0,t.jsx)(n.code,{children:"secret/data/customers"}),"\nAPI path:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao read secret/data/customers\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is equivalent to:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ curl --request GET --header "X-Vault-Token: $OPENBAO_TOKEN" \\\n    $OPENBAO_ADDR/v1/secret/data/customers\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Since K/V secrets engine is a commonly used feature, OpenBao CLI provides the\n",(0,t.jsx)(n.a,{href:"/docs/commands/kv",children:(0,t.jsx)(n.code,{children:"kv"})})," command. Read secrets from the ",(0,t.jsx)(n.code,{children:"secret/data/customers"}),"\npath using the ",(0,t.jsx)(n.code,{children:"kv"})," CLI command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao kv get -mount=secret customers\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Comparison:"})," All three commands retrieve the same data, but display the\noutput in a different format. By default, ",(0,t.jsx)(n.code,{children:"bao read"})," prints output in\nkey-value format. The ",(0,t.jsx)(n.code,{children:"curl"})," command prints the response in JSON. Since the\n",(0,t.jsx)(n.code,{children:"kv"})," command is designed to handle operations associated with K/V secrets\nengine, it prints the output in more structured format that is easy to read."]})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["The following flags are available in addition to the ",(0,t.jsx)(n.a,{href:"/docs/commands",children:"standard set of\nflags"})," included on all commands."]}),"\n",(0,t.jsx)(n.h3,{id:"output-options",children:"Output options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-field"})," ",(0,t.jsx)(n.code,{children:'(string: "")'})," - Print only the field with the given name. Specifying\nthis option will take precedence over other formatting directives. The result\nwill not have a trailing newline making it ideal for piping to other processes."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-format"})," ",(0,t.jsx)(n.code,{children:'(string: "table")'}),' - Print the output in the given format. Valid\nformats are "table", "json", "yaml", or "raw". This can also be specified\nvia the ',(0,t.jsx)(n.code,{children:"VAULT_FORMAT"})," environment variable."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For a full list of examples and paths, please see the documentation that\ncorresponds to the secrets engine in use."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(96540);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);