"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3383],{4340:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>x,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var s=r(74848),n=r(28453);const i={sidebar_label:"All metrics list",description:"Full list of all telemetry values provided by OpenBao."},l="All OpenBao telemetry metrics",d={id:"internals/telemetry/metrics/all",title:"All OpenBao telemetry metrics",description:"Full list of all telemetry values provided by OpenBao.",source:"@site/content/docs/internals/telemetry/metrics/all.mdx",sourceDirName:"internals/telemetry/metrics",slug:"/internals/telemetry/metrics/all",permalink:"/openbao/docs/internals/telemetry/metrics/all",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/internals/telemetry/metrics/all.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"All metrics list",description:"Full list of all telemetry values provided by OpenBao."},sidebar:"docs",previous:{title:"Storage plugin metrics",permalink:"/openbao/docs/internals/telemetry/metrics/storage"},next:{title:"Token authentication",permalink:"/openbao/docs/internals/token"}},h={},c=[{value:"Full metric list",id:"full-metric-list",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"all-openbao-telemetry-metrics",children:"All OpenBao telemetry metrics"}),"\n",(0,s.jsx)(t.p,{children:"For completeness, we provide a full list of available metrics below in\nalphabetic order by name."}),"\n",(0,s.jsx)(t.h2,{id:"full-metric-list",children:"Full metric list"}),"\n",(0,s.jsx)(t.h3,{children:"database.Close ((#database-close))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to close a database secret engine (across all database secrets engines)"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.Close.error ((#database-close-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered across all database secrets engines while closing database connections"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.CreateUser ((#database-createuser))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to create a user across all database secrets engines"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.CreateUser.error ((#database-createuser-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered across all database secrets engines while creating users"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.Initialize ((#database-initialize))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to initialize a database secret engine (across all database secrets engines)"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.Initialize.error ((#database-initialize-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered across all database secrets engines while initializing the database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.Close ((#database-name-close))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to close the database secrets engine {NAME}"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.Close.error ((#database-name-close-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered for the named database secrets engines while closing database connections"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.CreateUser ((#database-name-createuser))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to create a user for the named database secrets engine"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.CreateUser.error ((#database-name-createuser-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered for the named database secrets engines while creating users"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.Initialize ((#database-name-initialize))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to initialize a database secret engine for the named database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.Initialize.error ((#database-name-initialize-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered for the named database secrets engines while initializing the database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.RenewUser ((#database-name-renewuser))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to renew a user for the named database secrets engine"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.RenewUser.error ((#database-name-renewuser-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered for the named database secrets engines while renewing users"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.RevokeUser ((#database-name-revokeuser))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to revoke a user for the named database secrets engine"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.{NAME}.RevokeUser.error ((#database-name-revokeuser-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered for the named database secrets engines while revoking users"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.RenewUser ((#database-renewuser))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to renew a user across all database secrets engines"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.RenewUser.error ((#database-renewuser-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered across all database secrets engines while renewing users"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.RevokeUser ((#database-revokeuser))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to revoke a user across all database secrets engines"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"database.RevokeUser.error ((#database-revokeuser-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of errors encountered across all database secrets engines while revoking users"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.cert_store_current_entry ((#secrets-pki-tidy-cert_store_current_entry))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Index of the certificate store entry currently being verified by the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.cert_store_deleted_count ((#secrets-pki-tidy-cert_store_deleted_count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of entries deleted from the certificate store"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.cert_store_total_entries_remaining ((#secrets-pki-tidy-cert_store_total_entries_remaining))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of entries in the certificate store checked, but not removed, during the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.cert_store_total_entries ((#secrets-pki-tidy-cert_store_total_entries))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of entries in the certificate store to verify during the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.duration ((#secrets-pki-tidy-duration))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete the PKI tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.failure ((#secrets-pki-tidy-failure))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times the PKI tidy operation failed to finish due to errors"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.revoked_cert_current_entry ((#secrets-pki-tidy-revoked_cert_current_entry))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Index of the revoked certificate store entry currently being verified by the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.revoked_cert_deleted_count ((#secrets-pki-tidy-revoked_cert_deleted_count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of entries deleted from the certificate store for revoked certificates"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.revoked_cert_total_entries_fixed_issuers ((#secrets-pki-tidy-revoked_cert_total_entries_fixed_issuers))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of entries in the certificate store found to have incorrect issuer information that were fixed during the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.revoked_cert_total_entries_incorrect_issuers ((#secrets-pki-tidy-revoked_cert_total_entries_incorrect_issuers))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of entries in the certificate store found to have incorrect issuer information"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.revoked_cert_total_entries_remaining ((#secrets-pki-tidy-revoked_cert_total_entries_remaining))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of revoked certificates in the certificate store checked, but not removed, during the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.revoked_cert_total_entries ((#secrets-pki-tidy-revoked_cert_total_entries))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of revoked certificate entries in the certificate store to be verified during the tidy operation"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.start_time_epoch ((#secrets-pki-tidy-start_time_epoch))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"seconds"}),(0,s.jsx)(t.td,{children:"Epoch time (seconds since 1970-01-01) when the PKI tidy operation began"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The start time metric reports a value of ",(0,s.jsx)(t.code,{children:"0"})," if the PKI tidy operation is not\ncurrently active."]}),"\n",(0,s.jsx)(t.h3,{children:"secrets.pki.tidy.success ((#secrets-pki-tidy-success))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times the PKI tidy operation completed successfully"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.{DEVICE}.log_request_failure ((#vault-audit-device-log_request_failure))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of audit log request failures"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.{DEVICE}.log_request ((#vault-audit-device-log_request))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete all audit log requests across the device"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.{DEVICE}.log_response_failure ((#vault-audit-device-log_response_failure))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of audit log request failures"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.{DEVICE}.log_response ((#vault-audit-device-log_response))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete all audit log responses across the device"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.log_request_failure ((#vault-audit-log_request_failure))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of audit log request failures across all devices"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The number of request failures is a ",(0,s.jsx)(t.strong,{children:"crucial metric"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["A non-zero value for ",(0,s.jsx)(t.code,{children:"vault.audit.log_request_failure"})," indicates that all your\nconfigured audit devices failed to log a request (or response). If OpenBao cannot\nproperly audit a request, or the response to a request, the original request\nwill fail."]}),"\n",(0,s.jsx)(t.p,{children:"Refer to the OpenBao logs and any device-specific metrics to troubleshoot the\nfailing audit log device."}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.log_request ((#vault-audit-log_request))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete all audit log requests across all audit log devices"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.log_response_failure ((#vault-audit-log_response_failure))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of audit log request failures across all devices"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The number of request failures is a ",(0,s.jsx)(t.strong,{children:"crucial metric"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["A non-zero value for ",(0,s.jsx)(t.code,{children:"vault.audit.log_response_failure"})," indicates that one of\nthe configured audit log devices failed to respond to OpenBao. If OpenBao cannot\nproperly audit a request, or the response to a request, the original request\nwill fail."]}),"\n",(0,s.jsx)(t.p,{children:"Refer to the device-specific metrics and logs to troubleshoot the failing audit\nlog device."}),"\n",(0,s.jsx)(t.h3,{children:"vault.audit.log_response ((#vault-audit-log_response))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete audit log responses across all audit log devices"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.autopilot.failure_tolerance ((#vault-autopilot-failure_tolerance))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"nodes"}),(0,s.jsx)(t.td,{children:"The number of healthy nodes in excess of quorum"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The failure tolerance indicates how many currently healthy nodes can fail without losing quorum. "}),"\n",(0,s.jsx)(t.h3,{children:"vault.autopilot.healthy ((#vault-autopilot-healthy))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Indicates whether all nodes are healthy"})]})})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"1"})," on the gauge means that Autopilot deems all nodes healthy."]}),"\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"0"})," on the gauge means that Autopilot deems at least 1 node\nunhealthy."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{children:"vault.autopilot.node.healthy ((#vault-autopilot-node-healthy))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Indicates whether the active node is healthy"})]})})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"1"})," on the gauge means that Autopilot deems the node indicated by\n",(0,s.jsx)(t.code,{children:"node_id"})," is healthy."]}),"\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"0"})," on the gauge means that Autopilot cannot communicate with the\nnode indicated by ",(0,s.jsx)(t.code,{children:"node_id"}),", or deems the node unhealthy."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{children:"vault.barrier.delete ((#vault-barrier-delete))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to complete a ",(0,s.jsx)(t.code,{children:"DELETE"})," operation at the barrier"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.barrier.get ((#vault-barrier-get))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to complete a ",(0,s.jsx)(t.code,{children:"GET"})," operation at the barrier"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.barrier.list ((#vault-barrier-list))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to complete a ",(0,s.jsx)(t.code,{children:"LIST"})," operation at the barrier"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.barrier.put ((#vault-barrier-put))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to complete a ",(0,s.jsx)(t.code,{children:"PUT"})," operation at the barrier"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.cache.delete ((#vault-cache-delete))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of deletes from the LRU cache"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.cache.hit ((#vault-cache-hit))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of hits against the LRU cache that avoided a read from configured storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.cache.miss ((#vault-cache-miss))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of misses against the LRU cache that required a read from configured storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.cache.write ((#vault-cache-write))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of writes to the LRU cache"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.active ((#vault-core-active))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Indicates whether the OpenBao node is active"})]})})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"1"})," indicates that the node is active."]}),"\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"0"})," indicates that the node is in standby."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.activity.fragment_size ((#vault-core-activity-fragment_size))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsxs)(t.td,{children:["Number of ",(0,s.jsx)(t.code,{children:"type"})," objects observed by the local node"]})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The fragment size metric includes labels to indicate if the objects counted were\nentities or tokens."}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.activity.segment_write ((#vault-core-activity-segment_write))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to write activity log segments to storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.check_token ((#vault-core-check_token))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete a token check"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.fetch_acl_and_token ((#vault-core-fetch_acl_and_token))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to fetch ACL and token entries"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.handle_login_request ((#vault-core-handle_login_request))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete a login request"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.handle_request ((#vault-core-handle_request))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete a non-login request"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.in_flight_requests ((#vault-core-in_flight_requests))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"requests"}),(0,s.jsx)(t.td,{children:"Number of requests currently in progress"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.leadership_lost ((#vault-core-leadership_lost))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Total time that a high-availability cluster node last maintained leadership"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["Leadership time updates occur whenever leadership changes. Frequent updates to\n",(0,s.jsx)(t.code,{children:"vault.core.leadership_lost"})," with low leadership times indicates flapping as\nleader status rotates between nodes."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.leadership_setup_failed ((#vault-core-leadership_setup_failed))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken by the most recent leadership setup failure"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["Setup failure time is an important health metric for your high-availability\nOpenBao installation. We strongly recommend that you closely monitor\n",(0,s.jsx)(t.code,{children:"vault.core.leadership_setup_failed"})," and set alerts that keep you informed of\nthe overall cluster leadership status."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.license.expiration_time_epoch ((#vault-core-license-expiration_time_epoch))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"timestamp"}),(0,s.jsx)(t.td,{children:"Epoch time (seconds since 1970-01-01) at which the license will expire"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.locked_users ((#vault-core-locked_users))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"users"}),(0,s.jsx)(t.td,{children:"The number of users currently locked out of OpenBao"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The number of locked users refreshes every 15 minutes."}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.mount_table.num_entries ((#vault-core-mount_table-num_entries))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"objects"}),(0,s.jsx)(t.td,{children:"Number of mounts in the given mount table"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Mountpoint count metrics include labels to indicate whether the relevant table\nis an authentication table or a logical table and whether the table is\nreplicated or local."}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.mount_table.size ((#vault-core-mount_table-size))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"The current size of the relevant mount table."})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Table size metrics include labels to indicate whether the relevant table is an\nauthentication table or a logical table and whether the table is replicated or\nlocal."}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.post_unseal ((#vault-core-post_unseal))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete post-unseal operations"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.pre_seal ((#vault-core-pre_seal))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete pre-seal operations"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.seal-internal ((#vault-core-seal_internal))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete internal OpenBao seal operations"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.seal-with-request ((#vault-core-seal_with_request))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete seal operations that were triggered by explicit request"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.step_down ((#vault-core-step_down))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to step down cluster leadership"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.unseal ((#vault-core-unseal))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to complete unseal operations"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.core.unsealed ((#vault-core-unsealed))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Indicates whether OpenBao is currently unsealed"})]})})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"1"})," indicates OpenBao is currently ",(0,s.jsx)(t.strong,{children:"unsealed"})," and clients ",(0,s.jsx)(t.strong,{children:"can"}),"\nread secrets."]}),"\n",(0,s.jsxs)(t.li,{children:["A value of ",(0,s.jsx)(t.code,{children:"0"})," indicates OpenBao is currently ",(0,s.jsx)(t.strong,{children:"sealed"})," and clients ",(0,s.jsx)(t.strong,{children:"cannot"}),"\nread secrets."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.fetch-lease-times-by-token ((#vault-expire-fetch_lease_times_by_token))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to retrieve lease times by token"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.fetch-lease-times ((#vault-expire-fetch_lease_times))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to retrieve lease times"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.job_manager.queue_length ((#vault-expire-job_manager-queue_length))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"leases"}),(0,s.jsxs)(t.td,{children:["The total number of pending revocation jobs by ",(0,s.jsx)(t.code,{children:"queue_id"})]})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The queue ID in the ",(0,s.jsx)(t.code,{children:"queue_id"})," label indicates the mount accessor associated\nwith the expiring lease. For example, the secrets engine or authentication method."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.job_manager.total_jobs ((#vault-expire-job_manager-total_jobs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"leases"}),(0,s.jsx)(t.td,{children:"The total number of pending revocation jobs"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.lease_expiration ((#vault-expire-lease_expiration))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The number of lease expirations to date"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.lease_expiration.error ((#vault-expire-lease_expiration-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The total number of lease expiration errors"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.lease_expiration.time_in_queue ((#vault-expire-lease_expiration-time_in_queue))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken for a lease to get to the front of the revoke queue"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.leases.by_expiration ((#vault-expire-leases-by_expiration))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"leases"}),(0,s.jsx)(t.td,{children:"The number of leases set to expire, grouped by the configured interval"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The relevant time intervals are defined in the telemetry stanza for your\nOpenBao server configuration with the following parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"lease_metrics_epsilon"}),": 1 hour (default)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"num_lease_metrics_buckets"}),":  168 hours (default)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"add_lease_metrics_namespace_labels"}),": false (default)"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["OpenBao reports the number of leases due to expire every ",(0,s.jsx)(t.code,{children:"lease_metrics_epsilon"}),"\ninterval in the time period ",(0,s.jsx)(t.code,{children:"current_time + num_lease_metrics_buckets"}),"."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.num_irrevocable_leases ((#vault-expire-num_irrevocable_leases))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"leases"}),(0,s.jsx)(t.td,{children:"The number of leases that cannot be automatically revoked"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.num_leases ((#vault-expire-num_leases))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"leases"}),(0,s.jsx)(t.td,{children:"The total number of leases eligible for eventual expiry"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.register-auth ((#vault-expire-register_auth))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to register leases associated with new service tokens"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.register ((#vault-expire-register))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken for register operations"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.renew-token ((#vault-expire-renew_token))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to renew a token"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.renew ((#vault-expire-renew))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to renew a lease"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.revoke-by-token ((#vault-expire-revoke_by_token))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to revoke all secrets issued with a given token"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.revoke-force ((#vault-expire-revoke_force))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to forcibly revoke a token"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.revoke-prefix ((#vault-expire-revoke_prefix))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to revoke all tokens on a prefix"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.expire.revoke ((#vault-expire-revoke))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to revoke a token"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.ha.rpc.client.echo ((#vault-ha-rpc-client-echo))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to send an echo request from a standby to the active node (also emitted by perf standbys)"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.ha.rpc.client.echo.errors ((#vault-ha-rpc-client-echo-errors))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of standby echo request failures (also emitted by perf standbys)"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.ha.rpc.client.forward ((#vault-ha-rpc-client-forward))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time taken to forward a request from a standby to the active node"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.ha.rpc.client.forward.errors ((#vault-ha-rpc-client-forward-errors))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of standby request forwarding failures"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.entity.active.monthly ((#vault-identity-entity-active-monthly))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"entities"}),(0,s.jsx)(t.td,{children:"The number of distinct entities (per namespace) that created a token during the past month"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["OpenBao reports ",(0,s.jsx)(t.code,{children:"vault.identity.entity.active.monthly"})," at the start of each month\nwhen client counting is enabled."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.entity.active.partial_month ((#vault-identity-entity-active-partial_month))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"entities"}),(0,s.jsx)(t.td,{children:"The number of distinct entities (per namespace) that created a token during the current month"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["OpenBao reports ",(0,s.jsx)(t.code,{children:"vault.identity.entity.active.partial_month"})," periodically during\nthe month when client counting is enabled."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.entity.active.reporting_period ((#vault-identity-entity-active-reporting_period))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"entities"}),(0,s.jsx)(t.td,{children:"The number of distinct entities (per namespace) that created a token during the configured reporting period"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["OpenBao reports ",(0,s.jsx)(t.code,{children:"vault.identity.entity.active.reporting_period"})," at the start of\neach month when client counting is enabled."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.entity.alias.count ((#vault-identity-entity-alias-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"aliases"}),(0,s.jsx)(t.td,{children:"The number of identity entities aliases (per authN mount) currently stored in OpenBao"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["OpenBao updates the alias count every ",(0,s.jsx)(t.code,{children:"usage_guage_period"})," interval."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.entity.count ((#vault-identity-entity-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"entities"}),(0,s.jsx)(t.td,{children:"The number of identity entity aliases (per namespace) currently stored in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.entity.creation ((#vault-identity-entity-creation))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The number of identity entities created per namespace"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.num_entities ((#vault-identity-num_entities))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"entities"}),(0,s.jsx)(t.td,{children:"The total number of identity entities currently stored in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.upsert_entity_txn ((#vault-identity-upsert_entity_txn))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to upsert an entity to the in-memory database and, on the active node, persist the data to storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.identity.upsert_group_txn ((#vault-identity-upsert_group_txn))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to upsert group membership to the in-memory database and, on the active node, persist the data to storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.buffer.length ((#vault-logshipper-buffer-length))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"buffer entries"}),(0,s.jsx)(t.td,{children:"Current length of the log shipper buffer"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.buffer.max_length ((#vault-logshipper-buffer-max_length))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"buffer entries"}),(0,s.jsx)(t.td,{children:"Maximum length of the log shipper buffer seen to date"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.buffer.max_size ((#vault-logshipper-buffer-max_size))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"Maximum allowable size of the log shipper buffer"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.buffer.size ((#vault-logshipper-buffer-size))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"Current size of the log shipper buffer"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.streamWALs.guard_found ((#vault-logshipper-streamwals-guard_found))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times OpenBao began streaming WAL entires and found a starting index in the merkle tree"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.streamWALs.missing_guard ((#vault-logshipper-streamwals-missing_guard))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times OpenBao began streaming WAL entires without finding a starting index in the Merkle tree"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.logshipper.streamWALs.scanned_entries ((#vault-logshipper-streamwals-scanned_entries))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"entries"}),(0,s.jsx)(t.td,{children:"Number of entries scanned in the buffer before OpenBao found the correct entry"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.merkle.flushDirty ((#vault-merkle-flushdirty))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"The average time required to flush dirty pages to storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.merkle.flushDirty.num_pages ((#vault-merkle-flushdirty-num_pages))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"pages"}),(0,s.jsx)(t.td,{children:"Number of pages flushed"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.merkle.flushDirty.outstanding_pages ((#vault-merkle-flushdirty-outstanding_pages))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"pages"}),(0,s.jsx)(t.td,{children:"Number of dirty pages waiting to be flushed"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.merkle.saveCheckpoint ((#vault-merkle-savecheckpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"The average time required to save a checkpoint"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.merkle.saveCheckpoint.num_dirty ((#vault-merkle-savecheckpoint-num_dirty))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"pages"}),(0,s.jsx)(t.td,{children:"Number of dirty pages at checkpoint"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.metrics.collection ((#vault-metrics-collection))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"The average time required (per gauge type) to collect usage data"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.metrics.collection.error ((#vault-metrics-collection-error))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The total number of errors (per gauge type) that OpenBao encountered while collecting usage data"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.metrics.collection.interval ((#vault-metrics-collection-interval))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Units"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"time duration"}),(0,s.jsxs)(t.td,{children:["The current value of ",(0,s.jsx)(t.code,{children:"usage_gauge_period"})]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.policy.delete_policy ((#vault-policy-delete_policy))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to delete a policy"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.policy.get_policy ((#vault-policy-get_policy))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to read a policy"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.policy.list_policies ((#vault-policy-list_policies))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to list all policies"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.policy.set_policy ((#vault-policy-set_policy))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to set a policy"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.quota.lease_count.counter ((#vault-quota-lease_count-counter))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"lease"}),(0,s.jsx)(t.td,{children:"Total number of leases associated with the named quota rule"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The number of leases reported is specific to the quota rule listed in the ",(0,s.jsx)(t.code,{children:"name"}),"\nlabel, not the number of leases in general. For example, if the named rule\nallows for 50 leases max and there are currently 40 leases in the scope of that\nquota rule, the value of ",(0,s.jsx)(t.code,{children:"vault.quota.lease_count.counter"})," is 40 even if there\nare 1000 other leases that are unscoped or in the scope of other quota rules."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.quota.lease_count.max ((#vault-quota-lease_count-max))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"lease"}),(0,s.jsx)(t.td,{children:"Maximum number of leases allowed by the named quota rule"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.quota.lease_count.violation ((#vault-quota-lease_count-violation))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of requests rejected due to exceeding the named lease count quota"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.quota.rate_limit.violation ((#vault-quota-rate_limit-violation))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of requests rejected due to exceeding the named rate limit quota rule"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.cursor.count ((#vault-raft_storage-bolt-cursor-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of cursors created in the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.freelist.allocated_bytes ((#vault-raft_storage-bolt-freelist-allocated_bytes))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"Total space allocated for the freelist for the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.freelist.free_pages ((#vault-raft_storage-bolt-freelist-free_pages))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of free pages in the freelist for the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.freelist.pending_pages ((#vault-raft_storage-bolt-freelist-pending_pages))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of pending pages in the freelist for the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.freelist.used_bytes ((#vault-raft_storage-bolt-freelist-used_bytes))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"Total space used by the freelist for the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.node.count ((#vault-raft_storage-bolt-node-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of node allocations for the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.node.dereferences ((#vault-raft_storage-bolt-node-dereferences))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of node dereferences by the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.page.bytes_allocated ((#vault-raft_storage-bolt-page-bytes_allocated))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"Total space allocated to the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.page.count ((#vault-raft_storage-bolt-page-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of page allocations in the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.rebalance.count ((#vault-raft_storage-bolt-rebalance-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of node rebalances performed by the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.rebalance.time ((#vault-raft_storage-bolt-rebalance-time))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required by the Bolt database to rebalance nodes"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.spill.count ((#vault-raft_storage-bolt-spill-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of nodes spilled by the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.spill.time ((#vault-raft_storage-bolt-spill-time))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Total time spent spilling by the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.split.count ((#vault-raft_storage-bolt-split-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of nodes split by the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.transaction.currently_open_read_transactions ((#vault-raft_storage-bolt-transaction-currently_open_read_transactions))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of in-process read transactions for the Bolt DB"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.transaction.started_read_transactions ((#vault-raft_storage-bolt-transaction-started_read_transactions))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of read transactions started by the Bolt DB"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.write.count ((#vault-raft_storage-bolt-write-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of writes performed by the Bolt database"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.bolt.write.time ((#vault-raft_storage-bolt-write-time))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Total cumulative time the Bolt database has spent writing to disk."})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.follower.applied_index_delta ((#vault-raft_storage-follower-applied_index_delta))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The difference between the index applied by the leader and the index applied by the follower as reported by echoes"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.follower.last_heartbeat_ms ((#vault-raft_storage-follower-last_heartbeat_ms))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time since the follower last received a heartbeat request"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.stats.applied_index ((#vault-raft_storage-stats-applied_index))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsxs)(t.td,{children:["Highest index of raft log last applied to the finite state machine or added to ",(0,s.jsx)(t.code,{children:"fsm_pending queue"})]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.stats.commit_index ((#vault-raft_storage-stats-commit_index))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Index of the last raft log committed to disk on the node"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft_storage.stats.fsm_pending ((#vault-raft_storage-stats-fsm_pending))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of raft logs queued by the node for the finite state machine to apply"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft-storage.delete ((#vault-raft_storage-delete))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to insert log entry to delete path"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft-storage.entry_size ((#vault-raft_storage-entry_size))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"The total size of a raft entry during log application"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft-storage.get ((#vault-raft_storage-get))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to retrieve a value for the given path from the finite state machine"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft-storage.list ((#vault-raft_storage-list))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to list all entries under the prefix from the finite state machine"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft-storage.put ((#vault-raft_storage-put))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to insert a log entry to the persist path"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft-storage.transaction ((#vault-raft_storage-transaction))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to insert operations into a single log"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.apply ((#vault-raft-apply))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of transactions in the configured interval"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"vault.raft.apply"})," metric is generally a good indicator of the write load\non your raft internal storage."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.barrier ((#vault-raft-barrier))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times the node started the barrier"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"A node starts the barrier by issuing a blocking call when it wants to ensure\nthat all pending operations that need to be applied to the finite state machine\nare properly queued."}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.candidate.electSelf ((#vault-raft-candidate-electself))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required for a node to send a vote request to a peer"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.commitNumLogs ((#vault-raft-commitnumlogs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of logs processed for application to the finite state machine in a single batch"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.commitTime ((#vault-raft-committime))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to commit a new entry to the raft log on the leader node"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.compactLogs ((#vault-raft-compactlogs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to trim unnecessary logs"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.apply ((#vault-raft-fsm-apply))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of logs committed by the finite state machine since the last interval"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.applyBatch ((#vault-raft-fsm-applybatch))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required by the finite state machine to apply the most recent batch of logs"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.applyBatchNum ((#vault-raft-fsm-applybatchnum))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of logs applied in the most recent batch"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.enqueue ((#vault-raft-fsm-enqueue))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to queue up a batch of logs for the finite state machine to apply"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.restore ((#vault-raft-fsm-restore))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required by the finite state machine to complete a restore operation from a snapshot"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.snapshot ((#vault-raft-fsm-snapshot))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required by the finite state machine to record state information for the current snapshot"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.fsm.store_config ((#vault-raft-fsm-store_config))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to store the most recent raft configuration"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.get ((#vault-raft-get))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to retrieve an entry from underlying storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.leader.dispatchLog ((#vault-raft-leader-dispatchlog))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required for the leader node to write a log entry to disk"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.leader.dispatchNumLogs ((#vault-raft-leader-dispatchnumlogs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of logs committed to disk in the most recent batch"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.leader.lastContact ((#vault-raft-leader-lastcontact))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time since the leader was last able to contact the follower nodes when checking its leader lease"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.list ((#vault-raft-list))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to retrieve a list of keys from underlying storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.peers ((#vault-raft-peers))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"guage"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The number of peers in the raft cluster configuration"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.replication.appendEntries.log ((#vault-raft-replication-appendentries-log))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of logs replicated to a node to establish parity with leader logs"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.replication.appendEntries.rpc ((#vault-raft-replication-appendentries-rpc))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to replicate leader node log entries to all follower nodes with ",(0,s.jsx)(t.code,{children:"appendEntries"})]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.replication.heartbeat ((#vault-raft-replication-heartbeat))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to invoke ",(0,s.jsx)(t.code,{children:"appendEntries"})," on a peer so the peer does not time out"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.replication.installSnapshot ((#vault-raft-replication-installsnapshot))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to process an ",(0,s.jsx)(t.code,{children:"installSnapshot"})," RPC call"]})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["Only nodes currently in the ",(0,s.jsx)(t.code,{children:"follower"})," state report\n",(0,s.jsx)(t.code,{children:"vault.raft.replication.installSnapshot"})," metrics."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.restore ((#vault-raft-restore))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times that the node performed a restore operation"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"In the context of raft storage, a restore operation refers to the process where\nraft consumes an external snapshot to restore its state."}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.restoreUserSnapshot ((#vault-raft-restoreusersnapshot))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to restore the finite state machine from a user snapshot"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.rpc.appendEntries ((#vault-raft-rpc-appendentries))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to process a remote ",(0,s.jsx)(t.code,{children:"appendEntries"})," call from a node"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.rpc.appendEntries.processLogs ((#vault-raft-rpc-appendentries-processlogs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to completely process the outstanding logs for the given node"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.rpc.appendEntries.storeLogs ((#vault-raft-rpc-appendentries-storelogs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to record any outstanding logs since the last request to append entries for the given node"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.rpc.installSnapshot ((#vault-raft-rpc-installsnapshot))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to process an ",(0,s.jsx)(t.code,{children:"installSnapshot"})," RPC call"]})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["Only nodes currently in the ",(0,s.jsx)(t.code,{children:"follower"})," state report\n",(0,s.jsx)(t.code,{children:"vault.raft.rpc.installSnapshot"})," metrics."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.rpc.processHeartbeat ((#vault-raft-rpc-processheartbeat))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to process a heartbeat request"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.rpc.requestVote ((#vault-raft-rpc-requestvote))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsxs)(t.td,{children:["Time required to complete a ",(0,s.jsx)(t.code,{children:"requestVote"})," call"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.snapshot.create ((#vault-raft-snapshot-create))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to capture a new snapshot"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.snapshot.persist ((#vault-raft-snapshot-persist))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to record snapshot meta information to disk while taking snapshots"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.snapshot.takeSnapshot ((#vault-raft-snapshot-takesnapshot))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"timer"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Total time required to create and persist the current snapshot"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["In most cases, ",(0,s.jsx)(t.code,{children:"vault.raft.snapshot.takeSnapshot"})," is approximately equal to\n",(0,s.jsx)(t.code,{children:"vault.raft.snapshot.create +  vault.raft.snapshot.persist"}),"."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.state.candidate ((#vault-raft-state-candidate))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times the raft server initiated an election"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.state.follower ((#vault-raft-state-follower))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times in the configured interval that the raft server became a follower"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["Nodes transition to ",(0,s.jsx)(t.code,{children:"follower"})," state under the following conditions:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"when the node joins the cluster"}),"\n",(0,s.jsx)(t.li,{children:"when a leader is elected, but the node was not elected leader"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.state.leader ((#vault-raft-state-leader))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times the raft server became a leader"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.transition.heartbeat_timeout ((#vault-raft-transition-heartbeat_timeout))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsxs)(t.td,{children:["Number of times that the node transitioned to ",(0,s.jsx)(t.code,{children:"candidate"})," state after not receiving a heartbeat message from the last known leader"]})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.transition.leader_lease_timeout ((#vault-raft-transition-leader_lease_timeout))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The number of times the leader could not contact a quorum of nodes and therefore stepped down"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.raft.verify_leader ((#vault-raft-verify_leader))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of times in the configured interval that the node confirmed it is still the leader"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.rollback.attempt.{MOUNTPOINT} ((#vault-rollback-attempt-mountpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to perform a rollback operation on the given mount point"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.rollback.inflight ((#vault-rollback-inflight))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of rollback operations inflight"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.rollback.queued ((#vault-rollback-queued))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"guage"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The number of rollback operations waiting to be started"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.rollback.waiting ((#vault-rollback-waiting))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time between queueing a rollback operation and the operation starting"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.route.create.{MOUNTPOINT} ((#vault-route-create-mountpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to send a create request to the backend and for the backend to complete the operation for the given mount point"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.route.delete.{MOUNTPOINT} ((#vault-route-delete-mountpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to send a delete request to the backend and for the backend to complete the operation for the given mount point"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.route.list.{MOUNTPOINT} ((#vault-route-list-mountpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to send a list request to the backend and for the backend to complete the operation for the given mount point"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.route.read.{MOUNTPOINT} ((#vault-route-read-mountpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to send a read request to the backend and for the backend to complete the operation for the given mount point"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.route.rollback.{MOUNTPOINT} ((#vault-route-rollback-mountpoint))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to send a rollback request to the backend and for the backend to complete the operation for the given mount point"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao automatically schedules and performs mount point rollback operations to\nclean up partial errors."}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.alloc_bytes ((#vault-runtime-alloc_bytes))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"bytes"}),(0,s.jsx)(t.td,{children:"Space currently allocated to OpenBao processes"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The number of allocated bytes may peak from time to time, but should\nalways return to a steady state value in a health OpenBao installation."}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.free_count ((#vault-runtime-free_count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of freed objects"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.gc_pause_ns ((#vault-runtime-gc_pause_ns))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ns"}),(0,s.jsx)(t.td,{children:"Time required to complete the last garbage collection run"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.heap_objects ((#vault-runtime-heap_objects))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of objects on the heap in memory"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"vault.runtime.heap_objects"})," metric is a good memory pressure indicator. We\nrecommend monitoring ",(0,s.jsx)(t.code,{children:"vault.runtime.heap_objects"})," to establish an accurate\nbaseline and thresholds for alerting on the health of your OpenBao installation."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.malloc_count ((#vault-runtime-malloc_count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of allocated heap objects in memory"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.num_goroutines ((#vault-runtime-num_goroutines))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of Go routines running in memory"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"vault.runtime.num_goroutines"})," metric is a good system load indicator. We\nrecommend monitoring ",(0,s.jsx)(t.code,{children:"vault.runtime.num_goroutines"})," to establish an accurate\nbaseline and thresholds for alerting on the health of your OpenBao installation."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.sys_bytes ((#vault-runtime-sys_bytes))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of bytes allocated to OpenBao"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The total number of allocated system bytes includes space currently used by the\nheap plus space that has been reclaimed by, but not returned to, the operating\nsystem."}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.total_gc_pause_ns ((#vault-runtime-total_gc_pause_ns))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"ns"}),(0,s.jsx)(t.td,{children:"The total garbage collector pause time since OpenBao was last started"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.runtime.total_gc_runs ((#vault-runtime-total_gc_runs))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"The total number of garbage collection runs since OpenBao was last started"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.secret.kv.count ((#vault-secret-kv-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of entries in each key-value secrets engines"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao organizes the key-value pair count by cluster, namespace, and mount point."}),"\n",(0,s.jsx)(t.h3,{children:"vault.secret.lease.creation ((#vault-secret-lease-creation))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of leases created by secrets engines"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao organizes the lease count by cluster, namespace, secret engine, mount\npoint, and time to live (TTL)."}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.count ((#vault-token-count))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of un-expired and un-revoked tokens available for use in the token store"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao updates the token count every 10 minutes organizes the result by cluster\nand namespace."}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.count.by_auth ((#vault-token-count-by_auth))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of service tokens created by a particular auth method"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao organizes the token count by cluster, namespace, and authentication\nmethod."}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.count.by_policy ((#vault-token-count-by_policy))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of service tokens with a particular policy attached"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao organizes the token count by cluster, namespace, and policy. Tokens with\nmore than one policy attached appear in the gauge for each associated policy."}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.count.by_ttl ((#vault-token-count-by_ttl))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of service tokens assigned a particular time to live (TTL)"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao organizes the token count by cluster, namespace, and the TTL\nrange assigned at creation."}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.create_root ((#vault-token-create_root))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of root tokens created"})]})})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"vault.token.create_root"})," counts the total number of root tokens created\nover time, not the number of root tokens currently in use. As a result, the\nvalue of ",(0,s.jsx)(t.code,{children:"vault.token.create_root"})," does not decrease when a root token is\nrevoked."]}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.create ((#vault-token-create))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to create a token in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.createAccessor ((#vault-token-createaccessor))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to create a token accessor in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.creation ((#vault-token-creation))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"counter"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of service or batch tokens created"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"OpenBao organizes the creation count by cluster, namespace, authentication method,\nmount point, time to live (TTL), and token type."}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.lookup ((#vault-token-lookup))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to look up a token in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.revoke-tree ((#vault-token-revoke_tree))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to fully revoke a token tree in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.revoke ((#vault-token-revoke))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to revoke a token in OpenBao"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.token.store ((#vault-token-store))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to store an updated token entry without writing to the secondary index"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.deleteWALs ((#vault-wal-deletewals))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to fully delete a write-ahead log"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.flushReady ((#vault-wal-flushready))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to fully flush a write-ahead log that is ready for storage"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.flushReady.queue_len ((#vault-wal-flushready-queue_len))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Current size of the write queue in the WAL system"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.gc.deleted ((#vault-wal-gc-deleted))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Number of write-ahead logs deleted during garbage collection"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.gc.total ((#vault-wal-gc-total))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gauge"}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"Total number of write-ahead logs currently on disk"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.loadWAL ((#vault-wal-loadwal))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to load a write-ahead log"})]})})]}),"\n",(0,s.jsx)(t.h3,{children:"vault.wal.persistWALs ((#vault-wal-persistwals))"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric type"}),(0,s.jsx)(t.th,{children:"Value"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"summary"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"Time required to persist a write-ahead log"})]})})]})]})}function x(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>d});var s=r(96540);const n={},i=s.createContext(n);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);