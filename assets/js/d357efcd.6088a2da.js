"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4708],{98771:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var i=s(74848),o=s(28453);const a={sidebar_label:"AWS KMS",description:"The AWS KMS seal configures OpenBao to use AWS KMS as the seal wrapping\nmechanism."},r="awskms seal",t={id:"configuration/seal/awskms",title:"awskms seal",description:"The AWS KMS seal configures OpenBao to use AWS KMS as the seal wrapping\nmechanism.",source:"@site/content/docs/configuration/seal/awskms.mdx",sourceDirName:"configuration/seal",slug:"/configuration/seal/awskms",permalink:"/openbao/docs/configuration/seal/awskms",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/configuration/seal/awskms.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"AWS KMS",description:"The AWS KMS seal configures OpenBao to use AWS KMS as the seal wrapping\nmechanism."},sidebar:"docs",previous:{title:"AliCloud KMS",permalink:"/openbao/docs/configuration/seal/alicloudkms"},next:{title:"Azure Key Vault",permalink:"/openbao/docs/configuration/seal/azurekeyvault"}},l={},c=[{value:"<code>awskms</code> example",id:"awskms-example",level:2},{value:"<code>awskms</code> parameters",id:"awskms-parameters",level:2},{value:"Authentication",id:"authentication",level:2},{value:"<code>awskms</code> environment variables",id:"awskms-environment-variables",level:2},{value:"Key rotation",id:"key-rotation",level:2},{value:"Tutorial",id:"tutorial",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"awskms-seal",children:[(0,i.jsx)(n.code,{children:"awskms"})," seal"]}),"\n",(0,i.jsx)(n.p,{children:"The AWS KMS seal configures OpenBao to use AWS KMS as the seal wrapping mechanism.\nThe AWS KMS seal is activated by one of the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The presence of a ",(0,i.jsx)(n.code,{children:'seal "awskms"'})," block in OpenBao's configuration file"]}),"\n",(0,i.jsxs)(n.li,{children:["The presence of the environment variable ",(0,i.jsx)(n.code,{children:"VAULT_SEAL_TYPE"})," set to ",(0,i.jsx)(n.code,{children:"awskms"}),". If\nenabling via environment variable, all other required values specific to AWS\nKMS (i.e. ",(0,i.jsx)(n.code,{children:"VAULT_AWSKMS_SEAL_KEY_ID"}),") must be also supplied, as well as all\nother AWS-related environment variables that lends to successful\nauthentication (i.e. ",(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"}),", etc.)."]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"awskms-example",children:[(0,i.jsx)(n.code,{children:"awskms"})," example"]}),"\n",(0,i.jsx)(n.p,{children:"This example shows configuring AWS KMS seal through the OpenBao configuration file\nby providing all the required values:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'seal "awskms" {\n  region     = "us-east-1"\n  access_key = "AKIAIOSFODNN7EXAMPLE"\n  secret_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"\n  kms_key_id = "19ec80b0-dfdd-4d97-8164-c6examplekey"\n  endpoint   = "https://vpce-0e1bb1852241f8cc6-pzi0do8n.kms.us-east-1.vpce.amazonaws.com"\n}\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"awskms-parameters",children:[(0,i.jsx)(n.code,{children:"awskms"})," parameters"]}),"\n",(0,i.jsxs)(n.p,{children:["These parameters apply to the ",(0,i.jsx)(n.code,{children:"seal"})," stanza in the OpenBao configuration file:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"region"})," ",(0,i.jsx)(n.code,{children:'(string: "us-east-1")'}),": The AWS region where the encryption key\nlives. If not provided, may be populated from the ",(0,i.jsx)(n.code,{children:"AWS_REGION"})," or\n",(0,i.jsx)(n.code,{children:"AWS_DEFAULT_REGION"})," environment variables, from your ",(0,i.jsx)(n.code,{children:"~/.aws/config"})," file,\nor from instance metadata."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"access_key"})," ",(0,i.jsx)(n.code,{children:"(string: <required>)"}),": The AWS access key ID to use. May also be\nspecified by the ",(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"})," environment variable or as part of the\nAWS profile from the AWS CLI or instance profile."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"session_token"})," ",(0,i.jsx)(n.code,{children:'(string: "")'}),": Specifies the AWS session token. This can\nalso be provided via the environment variable ",(0,i.jsx)(n.code,{children:"AWS_SESSION_TOKEN"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"secret_key"})," ",(0,i.jsx)(n.code,{children:"(string: <required>)"}),": The AWS secret access key to use. May\nalso be specified by the ",(0,i.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"})," environment variable or as\npart of the AWS profile from the AWS CLI or instance profile."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"kms_key_id"})," ",(0,i.jsx)(n.code,{children:"(string: <required>)"}),": The AWS KMS key ID or ARN to use for encryption\nand decryption. May also be specified by the ",(0,i.jsx)(n.code,{children:"VAULT_AWSKMS_SEAL_KEY_ID"}),"\nenvironment variable.  An alias in the format ",(0,i.jsx)(n.code,{children:"alias/key-alias-name"})," may also be used here."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"disabled"})," ",(0,i.jsx)(n.code,{children:'(string: "")'}),": Set this to ",(0,i.jsx)(n.code,{children:"true"})," if OpenBao is migrating from an auto seal configuration. Otherwise, set to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"endpoint"})," ",(0,i.jsx)(n.code,{children:'(string: "")'}),": The KMS API endpoint to be used to make AWS KMS\nrequests. May also be specified by the ",(0,i.jsx)(n.code,{children:"AWS_KMS_ENDPOINT"})," environment\nvariable. This is useful, for example, when connecting to KMS over a ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/kms/latest/developerguide/kms-vpc-endpoint.html",children:"VPC\nEndpoint"}),".\nIf not set, OpenBao will use the default API endpoint for your region."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Refer to the ",(0,i.jsx)(n.a,{href:"/docs/concepts/seal#seal-migration",children:"Seal Migration"})," documentation for more information about the seal migration process."]}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"Authentication-related values must be provided, either as environment\nvariables or as configuration parameters."}),"\n",(0,i.jsxs)(n.p,{children:["~> ",(0,i.jsx)(n.strong,{children:"Note:"})," Although the configuration file allows you to pass in\n",(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"})," and ",(0,i.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"})," as part of the seal's parameters, it\nis ",(0,i.jsx)(n.em,{children:"strongly"})," recommended to set these values via environment variables."]}),"\n",(0,i.jsx)(n.p,{children:"AWS authentication values:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AWS_REGION"})," or ",(0,i.jsx)(n.code,{children:"AWS_DEFAULT_REGION"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Note: The client uses the official AWS SDK and will use the specified\ncredentials, environment credentials, shared file credentials, or IAM role/ECS\ntask credentials in that order, if the above AWS specific values are not\nprovided."}),"\n",(0,i.jsx)(n.p,{children:"OpenBao needs the following permissions on the KMS key:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kms:Encrypt"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kms:Decrypt"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"kms:DescribeKey"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These can be granted via IAM permissions on the principal that OpenBao uses, on\nthe KMS key policy for the KMS key, or via KMS Grants on the key."}),"\n",(0,i.jsxs)(n.h2,{id:"awskms-environment-variables",children:[(0,i.jsx)(n.code,{children:"awskms"})," environment variables"]}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, the AWS KMS seal can be activated by providing the following\nenvironment variables."}),"\n",(0,i.jsx)(n.p,{children:"OpenBao Seal specific values:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"VAULT_SEAL_TYPE"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"VAULT_AWSKMS_SEAL_KEY_ID"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-rotation",children:"Key rotation"}),"\n",(0,i.jsxs)(n.p,{children:["This seal supports rotating the root keys defined in AWS KMS\n",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html",children:"doc"}),". Both automatic\nrotation and manual rotation is supported for KMS since the key information is stored with the\nencrypted data. Old keys must not be disabled or deleted and are used to decrypt older data.\nAny new or updated data will be encrypted with the current key defined in the seal configuration\nor set to current under a key alias."]}),"\n",(0,i.jsx)(n.h2,{id:"tutorial",children:"Tutorial"}),"\n",(0,i.jsxs)(n.p,{children:["Refer to the ",(0,i.jsx)(n.a,{href:"/tutorials/auto-unseal/autounseal-aws-kms",children:"Auto-unseal using AWS KMS"}),"\ntutorial to learn how to auto-unseal OpenBao using AWS KMS."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(96540);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);