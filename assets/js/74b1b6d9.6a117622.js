"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1428],{84855:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>r});var i=t(74848),s=t(28453);const o={sidebar_label:"create",description:'The "token create" command creates a new token that can be used for\nauthentication. This token will be created as a child of the currently\nauthenticated token. The generated token will inherit all policies and\npermissions of the currently authenticated token unless you explicitly define\na subset list policies to assign to the token.'},a="token create",c={id:"commands/token/create",title:"token create",description:'The "token create" command creates a new token that can be used for\nauthentication. This token will be created as a child of the currently\nauthenticated token. The generated token will inherit all policies and\npermissions of the currently authenticated token unless you explicitly define\na subset list policies to assign to the token.',source:"@site/content/docs/commands/token/create.mdx",sourceDirName:"commands/token",slug:"/commands/token/create",permalink:"/openbao/docs/commands/token/create",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/commands/token/create.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"create",description:'The "token create" command creates a new token that can be used for\nauthentication. This token will be created as a child of the currently\nauthenticated token. The generated token will inherit all policies and\npermissions of the currently authenticated token unless you explicitly define\na subset list policies to assign to the token.'},sidebar:"docs",previous:{title:"capabilities",permalink:"/openbao/docs/commands/token/capabilities"},next:{title:"lookup",permalink:"/openbao/docs/commands/token/lookup"}},l={},r=[{value:"Examples",id:"examples",level:2},{value:"Usage",id:"usage",level:2},{value:"Output options",id:"output-options",level:3},{value:"Command options",id:"command-options",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"token-create",children:"token create"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"token create"})," command creates a new token that can be used for\nauthentication. This token will be created as a child of the currently\nauthenticated token. The generated token will inherit all policies and\npermissions of the currently authenticated token unless you explicitly define a\nsubset list policies to assign to the token."]}),"\n",(0,i.jsx)(n.p,{children:"A ttl can also be associated with the token. If a ttl is not associated with the\ntoken, then it cannot be renewed. If a ttl is associated with the token, it will\nexpire after that amount of time unless it is renewed."}),"\n",(0,i.jsxs)(n.p,{children:["Metadata associated with the token (specified with ",(0,i.jsx)(n.code,{children:"-metadata"}),") is written to\nthe audit log when the token is used."]}),"\n",(0,i.jsx)(n.p,{children:"If a role is specified, the role may override parameters specified here."}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.p,{children:"Create a token attached to specific policies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell-session",children:"$ bao token create -policy=my-policy -policy=other-policy\nKey                Value\n---                -----\ntoken              95eba8ed-f6fc-958a-f490-c7fd0eda5e9e\ntoken_accessor     882d4a40-3796-d06e-c4f0-604e8503750b\ntoken_duration     768h\ntoken_renewable    true\ntoken_policies     [default my-policy other-policy]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Create a periodic token:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell-session",children:"$ bao token create -period=30m\nKey                Value\n---                -----\ntoken              fdb90d58-af87-024f-fdcd-9f95039e353a\ntoken_accessor     4cd9177c-034b-a004-c62d-54bc56c0e9bd\ntoken_duration     30m\ntoken_renewable    true\ntoken_policies     [my-policy]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["The following flags are available in addition to the ",(0,i.jsx)(n.a,{href:"/docs/commands",children:"standard set of\nflags"})," included on all commands."]}),"\n",(0,i.jsx)(n.h3,{id:"output-options",children:"Output options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-field"})," ",(0,i.jsx)(n.code,{children:'(string: "")'})," - Print only the field with the given name. Specifying\nthis option will take precedence over other formatting directives. The result\nwill not have a trailing newline making it ideal for piping to other processes."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-format"})," ",(0,i.jsx)(n.code,{children:'(string: "table")'}),' - Print the output in the given format. Valid\nformats are "table", "json", or "yaml". This can also be specified via the\n',(0,i.jsx)(n.code,{children:"BAO_FORMAT"})," environment variable."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"command-options",children:"Command options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-display-name"})," ",(0,i.jsx)(n.code,{children:'(string: "")'})," - Name to associate with this token. This is a\nnon-sensitive value that can be used to help identify created secrets (e.g.\nprefixes)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-entity-alias"}),"  ",(0,i.jsx)(n.code,{children:'(string: "")'})," - Name of the entity alias to associate with\nduring token creation. Only works in combination with -role argument and used\nentity alias must be listed in allowed_entity_aliases. If this has been\nspecified, the entity will not be inherited from the parent."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-explicit-max-ttl"})," ",(0,i.jsx)(n.code,{children:'(duration: "")'})," - Explicit maximum lifetime for the\ntoken. Unlike normal TTLs, the maximum TTL is a hard limit and cannot be\nexceeded. Uses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-id"})," ",(0,i.jsx)(n.code,{children:'(string: "")'})," - Value for the token. By default, this is an\nauto-generated value. Specifying this value requires sudo permissions."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-metadata"})," ",(0,i.jsx)(n.code,{children:'(k=v: "")'})," - Arbitrary key=value metadata to associate with the\ntoken. This metadata will show in the audit log when the token is used. This\ncan be specified multiple times to add multiple pieces of metadata."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-no-default-policy"})," ",(0,i.jsx)(n.code,{children:"(bool: false)"}),' - Detach the "default" policy from the\npolicy set for this token.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-orphan"})," ",(0,i.jsx)(n.code,{children:"(bool: false)"})," - Create the token with no parent. This prevents the\ntoken from being revoked when the token which created it expires. Setting this\nvalue requires sudo permissions."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-period"})," ",(0,i.jsx)(n.code,{children:'(duration: "")'})," - If specified, every renewal will use the given\nperiod. Periodic tokens do not expire as long as they are actively being\nrenewed (unless ",(0,i.jsx)(n.code,{children:"-explicit-max-ttl"})," is also provided). Setting this value\nrequires sudo permissions. Uses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-policy"})," ",(0,i.jsx)(n.code,{children:'(string: "")'})," - Name of a policy to associate with this token. This\ncan be specified multiple times to attach multiple policies."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-renewable"})," ",(0,i.jsx)(n.code,{children:"(bool: true)"})," - Allow the token to be renewed up to it's maximum\nTTL."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-role"})," ",(0,i.jsx)(n.code,{children:'(string: "")'})," - Name of the role to create the token against.\nSpecifying -role may override other arguments. The locally authenticated OpenBao\ntoken must have permission for ",(0,i.jsx)(n.code,{children:"auth/token/create/<role>"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-ttl"})," ",(0,i.jsx)(n.code,{children:'(duration: "")'})," - Initial TTL to associate with the token. Token\nrenewals may be able to extend beyond this value, depending on the configured\nmaximumTTLs. Uses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-type"})," ",(0,i.jsx)(n.code,{children:'(string: "service")'}),' - The type of token to create. Can be "service" or "batch".']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-use-limit"})," ",(0,i.jsx)(n.code,{children:"(int: 0)"})," - Number of times this token can be used. After the\nlast use, the token is automatically revoked. By default, tokens can be used\nan unlimited number of times until their expiration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-wrap-ttl"})," ",(0,i.jsx)(n.code,{children:'(duration: "")'}),' -  Wraps the response in a cubbyhole token with the\nrequested TTL. The response is available via the "bao unwrap" command. The TTL\nis specified as a numeric string with suffix like "30s" or "5m". This can also be\nspecified via the ',(0,i.jsx)(n.code,{children:"VAULT_WRAP_TTL"})," environment variable."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);