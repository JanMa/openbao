"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8351],{48463:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=t(74848),s=t(28453);const i={layout:"docs",page_title:"High Availability",description:"OpenBao can be highly available, allowing you to run multiple OpenBaos to protect against outages."},o="High availability mode (HA)",r={id:"concepts/ha",title:"High availability mode (HA)",description:"OpenBao can be highly available, allowing you to run multiple OpenBaos to protect against outages.",source:"@site/content/docs/concepts/ha.mdx",sourceDirName:"concepts",slug:"/concepts/ha",permalink:"/openbao/docs/concepts/ha",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/concepts/ha.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"High Availability",description:"OpenBao can be highly available, allowing you to run multiple OpenBaos to protect against outages."},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/openbao/docs/concepts/events"},next:{title:"Identity",permalink:"/openbao/docs/concepts/identity"}},d={},c=[{value:"Server-to-Server communication",id:"server-to-server-communication",level:2},{value:"Request forwarding",id:"request-forwarding",level:2},{value:"Client redirection",id:"client-redirection",level:2},{value:"Direct access",id:"direct-access",level:3},{value:"Behind load balancers",id:"behind-load-balancers",level:3},{value:"Per-Node cluster listener addresses",id:"per-node-cluster-listener-addresses",level:3},{value:"Per-Node cluster address",id:"per-node-cluster-address",level:3},{value:"Storage support",id:"storage-support",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"high-availability-mode-ha",children:"High availability mode (HA)"}),"\n",(0,a.jsx)(n.p,{children:"OpenBao supports a multi-server mode for high availability. This mode protects\nagainst outages by running multiple OpenBao servers. High availability mode\nis automatically enabled when using a data store that supports it."}),"\n",(0,a.jsxs)(n.p,{children:['You can tell if a data store supports high availability mode ("HA") by starting\nthe server and seeing if "(HA available)" is output next to the data store\ninformation. If it is, then OpenBao will automatically use HA mode. This\ninformation is also available on the\n',(0,a.jsx)(n.a,{href:"/docs/configuration",children:"Configuration"})," page."]}),"\n",(0,a.jsxs)(n.p,{children:["To be highly available, one of the OpenBao server nodes grabs a lock within the\ndata store. The successful server node then becomes the active node; all other\nnodes become standby nodes. At this point, if the standby nodes receive a\nrequest, they will either ",(0,a.jsx)(n.a,{href:"#request-forwarding",children:"forward the request"})," or\n",(0,a.jsx)(n.a,{href:"#client-redirection",children:"redirect the client"})," depending on the current\nconfiguration and state of the cluster -- see the sections below for details.\nDue to this architecture, HA does not enable increased scalability. In general,\nthe bottleneck of OpenBao is the data store itself, not OpenBao core."]}),"\n",(0,a.jsxs)(n.p,{children:["Certain storage backends can support high availability mode, which enable them\nto store both OpenBao's information in addition to the HA lock. However, OpenBao\nalso supports split data/HA mode, whereby the lock value and the rest of the\ndata live separately. This can be done by specifying both the\n",(0,a.jsx)(n.a,{href:"/docs/configuration#storage",children:(0,a.jsx)(n.code,{children:"storage"})})," and\n",(0,a.jsx)(n.a,{href:"/docs/configuration#ha_storage",children:(0,a.jsx)(n.code,{children:"ha_storage"})})," stanzas in the configuration file\nwith different backends. For instance, an OpenBao cluster can be set up to use\nConsul as the ",(0,a.jsx)(n.a,{href:"/docs/configuration#ha_storage",children:(0,a.jsx)(n.code,{children:"ha_storage"})})," to manage the lock,\nand use Amazon S3 as the ",(0,a.jsx)(n.a,{href:"/docs/configuration#storage",children:(0,a.jsx)(n.code,{children:"storage"})})," for all other\npersisted data."]}),"\n",(0,a.jsx)(n.p,{children:"The sections below explain the server communication patterns and each type of\nrequest handling in more detail. At a minimum, the requirements for redirection\nmode must be met for an HA cluster to work successfully."}),"\n",(0,a.jsx)(n.h2,{id:"server-to-server-communication",children:"Server-to-Server communication"}),"\n",(0,a.jsx)(n.p,{children:"Both methods of request handling rely on the active node advertising\ninformation about itself to the other nodes. Rather than over the network, this\ncommunication takes place within OpenBao's encrypted storage; the active node\nwrites this information and unsealed standby OpenBao nodes can read it."}),"\n",(0,a.jsx)(n.p,{children:"For the client redirection method, this is the extent of server-to-server\ncommunication -- no direct communication with only encrypted entries in the\ndata store used to transfer state."}),"\n",(0,a.jsx)(n.p,{children:"For the request forwarding method, the servers need direct communication with\neach other. In order to perform this securely, the active node also advertises,\nvia the encrypted data store entry, a newly-generated private key (ECDSA-P521)\nand a newly-generated self-signed certificate designated for client and server\nauthentication. Each standby uses the private key and certificate to open a\nmutually-authenticated TLS 1.2 connection to the active node via the advertised\ncluster address. When client requests come in, the requests are serialized,\nsent over this TLS-protected communication channel, and acted upon by the\nactive node. The active node then returns a response to the standby, which\nsends the response back to the requesting client."}),"\n",(0,a.jsx)(n.h2,{id:"request-forwarding",children:"Request forwarding"}),"\n",(0,a.jsxs)(n.p,{children:["If request forwarding is enabled (turned on by default in 0.6.2), clients can\nstill force the older/fallback redirection behavior (see below) if desired by\nsetting the ",(0,a.jsx)(n.code,{children:"X-Vault-No-Request-Forwarding"})," header to any non-empty value."]}),"\n",(0,a.jsx)(n.p,{children:"Successful cluster setup requires a few configuration parameters, although some\ncan be automatically determined."}),"\n",(0,a.jsx)(n.h2,{id:"client-redirection",children:"Client redirection"}),"\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"X-Vault-No-Request-Forwarding"})," header in the request is set to a non-empty\nvalue, the standby nodes will redirect the client using a ",(0,a.jsx)(n.code,{children:"307"})," status code to\nthe ",(0,a.jsx)(n.em,{children:"active node's"})," redirect address."]}),"\n",(0,a.jsx)(n.p,{children:"This is also the fallback method used when request forwarding is turned off or\nthere is an error performing the forwarding. As such, a redirect address is\nalways required for all HA setups."}),"\n",(0,a.jsxs)(n.p,{children:["Some HA data store drivers can autodetect the redirect address, but it is often\nnecessary to configure it manually via a top-level value in the configuration\nfile. The key for this value is ",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," and\nthe value can also be specified by the ",(0,a.jsx)(n.code,{children:"VAULT_API_ADDR"})," environment variable,\nwhich takes precedence."]}),"\n",(0,a.jsxs)(n.p,{children:["What the ",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," value should be set to\ndepends on how OpenBao is set up. There are two common scenarios: OpenBao servers\naccessed directly by clients, and OpenBao servers accessed via a load balancer."]}),"\n",(0,a.jsxs)(n.p,{children:["In both cases, the ",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," should be a full\nURL including scheme (",(0,a.jsx)(n.code,{children:"http"}),"/",(0,a.jsx)(n.code,{children:"https"}),"), not simply an IP address and port."]}),"\n",(0,a.jsx)(n.h3,{id:"direct-access",children:"Direct access"}),"\n",(0,a.jsxs)(n.p,{children:["When clients are able to access OpenBao directly, the\n",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," for each node should be that node's\naddress. For instance, if there are two OpenBao nodes:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"A"}),", accessed via ",(0,a.jsx)(n.code,{children:"https://a.openbao.mycompany.com:8200"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"B"}),", accessed via ",(0,a.jsx)(n.code,{children:"https://b.openbao.mycompany.com:8200"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Then node ",(0,a.jsx)(n.code,{children:"A"})," would set its\n",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," to\n",(0,a.jsx)(n.code,{children:"https://a.openbao.mycompany.com:8200"})," and node ",(0,a.jsx)(n.code,{children:"B"})," would set its\n",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," to\n",(0,a.jsx)(n.code,{children:"https://b.openbao.mycompany.com:8200"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["This way, when ",(0,a.jsx)(n.code,{children:"A"})," is the active node, any requests received by node ",(0,a.jsx)(n.code,{children:"B"})," will\ncause it to redirect the client to node ",(0,a.jsx)(n.code,{children:"A"}),"'s\n",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," at ",(0,a.jsx)(n.code,{children:"https://a.openbao.mycompany.com"}),",\nand vice-versa."]}),"\n",(0,a.jsx)(n.h3,{id:"behind-load-balancers",children:"Behind load balancers"}),"\n",(0,a.jsx)(n.p,{children:"Sometimes clients use load balancers as an initial method to access one of the\nOpenBao servers, but actually have direct access to each OpenBao node. In this\ncase, the OpenBao servers should actually be set up as described in the above\nsection, since for redirection purposes the clients have direct access."}),"\n",(0,a.jsxs)(n.p,{children:["However, if the only access to the OpenBao servers is via the load balancer, the\n",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})})," on each node should be the same: the\naddress of the load balancer. Clients that reach a standby node will be\nredirected back to the load balancer; at that point hopefully the load\nbalancer's configuration will have been updated to know the address of the\ncurrent leader. This can cause a redirect loop and as such is not a recommended\nsetup when it can be avoided."]}),"\n",(0,a.jsx)(n.h3,{id:"per-node-cluster-listener-addresses",children:"Per-Node cluster listener addresses"}),"\n",(0,a.jsxs)(n.p,{children:["Each ",(0,a.jsx)(n.a,{href:"/docs/configuration/listener",children:(0,a.jsx)(n.code,{children:"listener"})})," block in OpenBao's configuration\nfile contains an ",(0,a.jsx)(n.a,{href:"/docs/configuration/listener/tcp#address",children:(0,a.jsx)(n.code,{children:"address"})})," value on\nwhich OpenBao listens for requests. Similarly, each\n",(0,a.jsx)(n.a,{href:"/docs/configuration/listener",children:(0,a.jsx)(n.code,{children:"listener"})})," block can contain a\n",(0,a.jsx)(n.a,{href:"/docs/configuration/listener/tcp#cluster_address",children:(0,a.jsx)(n.code,{children:"cluster_address"})})," on which\nOpenBao listens for server-to-server cluster requests. If this value is not set,\nits IP address will be automatically set to same as the\n",(0,a.jsx)(n.a,{href:"/docs/configuration/listener/tcp#address",children:(0,a.jsx)(n.code,{children:"address"})})," value, and its port will\nbe automatically set to the same as the\n",(0,a.jsx)(n.a,{href:"/docs/configuration/listener/tcp#address",children:(0,a.jsx)(n.code,{children:"address"})})," value plus one (so by\ndefault, port ",(0,a.jsx)(n.code,{children:"8201"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["Note that ",(0,a.jsx)(n.em,{children:"only"})," active nodes have active listeners. When a node becomes active\nit will start cluster listeners, and when it becomes standby it will stop them."]}),"\n",(0,a.jsx)(n.h3,{id:"per-node-cluster-address",children:"Per-Node cluster address"}),"\n",(0,a.jsxs)(n.p,{children:["Similar to the ",(0,a.jsx)(n.a,{href:"/docs/configuration#api_addr",children:(0,a.jsx)(n.code,{children:"api_addr"})}),",\n",(0,a.jsx)(n.a,{href:"/docs/configuration#cluster_addr",children:(0,a.jsx)(n.code,{children:"cluster_addr"})})," is the value that each node,\nif active, should advertise to the standbys to use for server-to-server\ncommunications, and lives as a top-level value in the configuration file. On\neach node, this should be set to a host name or IP address that a standby can\nuse to reach one of that node's\n",(0,a.jsx)(n.a,{href:"/docs/configuration#cluster_address",children:(0,a.jsx)(n.code,{children:"cluster_address"})})," values set in the\n",(0,a.jsx)(n.a,{href:"/docs/configuration/listener",children:(0,a.jsx)(n.code,{children:"listener"})})," blocks, including port. (Note that\nthis will always be forced to ",(0,a.jsx)(n.code,{children:"https"})," since only TLS connections are used\nbetween servers.)"]}),"\n",(0,a.jsxs)(n.p,{children:["This value can also be specified by the ",(0,a.jsx)(n.code,{children:"VAULT_CLUSTER_ADDR"})," environment\nvariable, which takes precedence."]}),"\n",(0,a.jsx)(n.h2,{id:"storage-support",children:"Storage support"}),"\n",(0,a.jsxs)(n.p,{children:["Currently the only officially supported storage backend that supports high\navailability is the  ",(0,a.jsx)(n.a,{href:"/docs/configuration/storage/raft",children:"Integrated\nStorage"})," backend. In addition to that,\nsome community suppThese may change over time, and the ",(0,a.jsx)(n.a,{href:"/docs/configuration",children:"configuration\npage"})," should be referenced.  orted storage backends\nimplement hight availability as well."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"/docs/configuration/storage/raft",children:"OpenBao Integrated Storage"})," is\nrecommended as the default HA backend for new deployments of OpenBao. See the\n",(0,a.jsx)(n.a,{href:"/docs/configuration/storage#integrated-storage-vs-external-storage",children:"comparison\nchart"}),"\nfor help deciding which option is best for you."]}),"\n",(0,a.jsxs)(n.p,{children:["If you're interested in implementing another backend or adding HA support to\nanother backend, we'd love your contributions. Adding HA support requires\nimplementing the\n",(0,a.jsx)(n.a,{href:"https://pkg.go.dev/github.com/openbao/openbao/sdk/physical#HABackend",children:(0,a.jsx)(n.code,{children:"physical.HABackend"})}),"\ninterface for the storage backend."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(96540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);