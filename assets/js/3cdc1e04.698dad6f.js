"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1208],{9154:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=i(74848),t=i(28453);const o={layout:"docs",page_title:"Unix - Listeners - Configuration",description:"The Unix listener configures OpenBao to listen on the specified Unix domain socket."},r="unix listener",l={id:"configuration/listener/unix",title:"unix listener",description:"The Unix listener configures OpenBao to listen on the specified Unix domain socket.",source:"@site/content/docs/configuration/listener/unix.mdx",sourceDirName:"configuration/listener",slug:"/configuration/listener/unix",permalink:"/openbao/docs/configuration/listener/unix",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/configuration/listener/unix.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"Unix - Listeners - Configuration",description:"The Unix listener configures OpenBao to listen on the specified Unix domain socket."},sidebar:"docs",previous:{title:"listener stanza",permalink:"/openbao/docs/configuration/listener/"},next:{title:"tcp listener",permalink:"/openbao/docs/configuration/listener/tcp"}},c={},a=[{value:"<code>unix</code> listener parameters",id:"unix-listener-parameters",level:2},{value:"<code>unix</code> listener examples",id:"unix-listener-examples",level:2},{value:"Listening on multiple sockets",id:"listening-on-multiple-sockets",level:3},{value:"Listening on multiple interfaces",id:"listening-on-multiple-interfaces",level:3},{value:"Configuring permissions",id:"configuring-permissions",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"unix-listener",children:[(0,s.jsx)(n.code,{children:"unix"})," listener"]}),"\n",(0,s.jsx)(n.p,{children:"The Unix listener configures OpenBao to listen on the specified Unix domain socket."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'listener "unix" {\n  address = "/run/openbao.sock"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"listener"})," stanza may be specified more than once to make OpenBao listen on\nmultiple sockets."]}),"\n",(0,s.jsxs)(n.h2,{id:"unix-listener-parameters",children:[(0,s.jsx)(n.code,{children:"unix"})," listener parameters"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"address"})," ",(0,s.jsx)(n.code,{children:'(string: "/run/openbao.sock", <required>)'})," \u2013 Specifies the address to bind the Unix socket."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"socket_mode"})," ",(0,s.jsx)(n.code,{children:'(string: "", <optional>)'})," \u2013 Changes the access\npermissions and the special mode flags of the Unix socket."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"socket_user"})," ",(0,s.jsx)(n.code,{children:'(string: "", <optional>)'})," \u2013 Changes the user owner of the Unix socket."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"socket_group"})," ",(0,s.jsx)(n.code,{children:'(string: "", <optional>)'})," \u2013 Changes the group owner of the Unix socket."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"unix-listener-examples",children:[(0,s.jsx)(n.code,{children:"unix"})," listener examples"]}),"\n",(0,s.jsx)(n.h3,{id:"listening-on-multiple-sockets",children:"Listening on multiple sockets"}),"\n",(0,s.jsx)(n.p,{children:"This example shows OpenBao listening on a specified socket, as well as the default."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'listener "unix" {}\n\nlistener "unix" {\n  address = "/var/run/openbao.sock"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"listening-on-multiple-interfaces",children:"Listening on multiple interfaces"}),"\n",(0,s.jsx)(n.p,{children:"This example shows OpenBao listening on TCP localhost, as well as Unix socket."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'listener "unix" {\n  address = "/var/run/openbao.sock"\n}\n\nlistener "tcp" {\n  address = "127.0.0.1:8200"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-permissions",children:"Configuring permissions"}),"\n",(0,s.jsx)(n.p,{children:"This example shows changing access permissions and ownership of the Unix socket."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'listener "unix" {\n  address = "/var/run/openbao.sock"\n  socket_mode = "644"\n  socket_user = "1000"\n  socket_group = "1000"\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(96540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);