"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7952],{27039:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=o(74848),t=o(28453);const r={layout:"docs",page_title:"OpenBao Deprecation Policy",sidebar_title:"Deprecation Policy",description:"The OpenBao policy around deprecating and removing features."},a="Deprecation policy",s={id:"policies/deprecation",title:"Deprecation policy",description:"The OpenBao policy around deprecating and removing features.",source:"@site/content/docs/policies/deprecation.mdx",sourceDirName:"policies",slug:"/policies/deprecation",permalink:"/openbao/docs/policies/deprecation",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/policies/deprecation.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"OpenBao Deprecation Policy",sidebar_title:"Deprecation Policy",description:"The OpenBao policy around deprecating and removing features."},sidebar:"tutorialSidebar",previous:{title:"Policies",permalink:"/openbao/docs/policies/"},next:{title:"Plugin support policy",permalink:"/openbao/docs/policies/plugins"}},l={},c=[{value:"Prior to initial release",id:"prior-to-initial-release",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"deprecation-policy",children:"Deprecation policy"}),"\n",(0,i.jsxs)(n.p,{children:["This policy was original ",(0,i.jsx)(n.a,{href:"https://github.com/orgs/openbao/discussions/53",children:"discussed on\nGitHub"})," and ratified on\nthe ",(0,i.jsx)(n.a,{href:"https://wiki.lfedge.org/display/OH/OpenBao+Meetings",children:"February 1st, 2024 meeting"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"For lack of a more formal description of upstream's policy, let's describe it\nas follows, adopted for OpenBao's community workflow:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Vote and document a deprecations at any time. These denote the release in\nwhich a feature/... is marked deprecated going forward (inclusive; if this\noccurs after version x.y.z was released but before x.y+1.z, we'll denote\nthis deprecation as happening in x.y+1.0 and forward)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Vote and document a deprecation period for this feature in releases. E.g.,\n4 minor releases or one major release -- this depends on cadence of the\nproject and importance of this feature. After this date, the feature will\nbe entirely unsupported in this community. Downstreams users are encouraged\nto remove any dependence on this feature."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Vote and document a removal window. Sometimes this is right after the\ndeprecation, sometimes this could be several releases later. In the\nspecified release (and blocking said release), this functionality will\nbe removed. If removal cannot occur in time, a vote can be made to extend\nremoval window."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Documentation would be on the website, in similar format as existing upstream\ndeprecations, and announced on the mailing list."}),"\n",(0,i.jsx)(n.p,{children:"Usually removals do not happen in patch releases, only major/minor releases."}),"\n",(0,i.jsx)(n.p,{children:"In the event of security or third-party dependency related deprecations, this\ntimeline can be accelerated so that e.g., deprecation and removal happen\nwithin the next (major, minor, or patch) release. For example, if a cloud\nplugin relies on APIs no longer supported by the cloud vendor, portions or\nall of that plugin may be removed sooner. Or, if a critical vulnerability\nis found in a plugin that prevents operations with the same API architecture,\na removal could be done in the next point release to prevent unsafe usage."}),"\n",(0,i.jsx)(n.p,{children:"Vote in this context, prior to forming a TSC, would be a simple majority\nminus abstentions on a community call. After forming a TSC, they can\ndecide to either continue having community calls be deprecation vote process\nor decide upon a different voting mechanism."}),"\n",(0,i.jsx)(n.h2,{id:"prior-to-initial-release",children:"Prior to initial release"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"No policy prior to first release candidate; free to vote to remove plugins,\nfeatures without following the deprecation policy. Any alpha, betas prior\nto release candidate would not need to follow the below process. A simple\nmajority vote minus abstentions on a community call would be sufficient to\nenact deprecation and removal."}),"\n",(0,i.jsx)(n.li,{children:"Follow approach similar to upstream after first release candidate\n(described above)."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>s});var i=o(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);