"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4309],{63003:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var i=n(74848),s=n(28453);const a={layout:"docs",page_title:"Identity - Secrets Engines",description:"The Identity secrets engine for OpenBao manages client identities."},o="Identity secrets engine",r={id:"secrets/identity/index",title:"Identity secrets engine",description:"The Identity secrets engine for OpenBao manages client identities.",source:"@site/content/docs/secrets/identity/index.mdx",sourceDirName:"secrets/identity",slug:"/secrets/identity/",permalink:"/openbao/docs/secrets/identity/",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/secrets/identity/index.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"Identity - Secrets Engines",description:"The Identity secrets engine for OpenBao manages client identities."},sidebar:"docs",previous:{title:"Redis database secrets engine",permalink:"/openbao/docs/secrets/databases/redis"},next:{title:"Identity tokens",permalink:"/openbao/docs/secrets/identity/identity-token"}},d={},c=[{value:"API",id:"api",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"identity-secrets-engine",children:"Identity secrets engine"}),"\n",(0,i.jsxs)(t.p,{children:["Name: ",(0,i.jsx)(t.code,{children:"identity"})]}),"\n",(0,i.jsxs)(t.p,{children:["The Identity secrets engine is the identity management solution for OpenBao. It\ninternally maintains the clients who are recognized by OpenBao. Each client is\ninternally termed as an ",(0,i.jsx)(t.code,{children:"Entity"}),". An entity can have multiple ",(0,i.jsx)(t.code,{children:"Aliases"}),". For\nexample, a single user who has accounts in both GitHub and LDAP, can be mapped\nto a single entity in OpenBao that has 2 aliases, one of type GitHub and one of\ntype LDAP. When a client authenticates via any of the credential backends\n(except the Token backend), OpenBao creates a new entity and attaches a new\nalias to it, if a corresponding entity doesn't already exist. The entity identifier will\nbe tied to the authenticated token. When such tokens are put to use, their\nentity identifiers are audit logged, marking a trail of actions performed by\nspecific users."]}),"\n",(0,i.jsxs)(t.p,{children:["Identity store allows operators to ",(0,i.jsx)(t.strong,{children:"manage"})," the entities in OpenBao. Entities\ncan be created and aliases can be tied to entities, via the ACL'd API. There\ncan be policies set on the entities which adds capabilities to the tokens that\nare tied to entity identifiers. The capabilities granted to tokens via the\nentities are ",(0,i.jsx)(t.strong,{children:"an addition"})," to the existing capabilities of the token and\n",(0,i.jsx)(t.strong,{children:"not"})," a replacement. The capabilities of the token that get inherited from\nentities are computed dynamically at request time. This provides flexibility in\ncontrolling the access of tokens that are already issued."]}),"\n",(0,i.jsxs)(t.p,{children:["~> ",(0,i.jsx)(t.strong,{children:"NOTE:"})," This secrets engine will be mounted by default. This secrets engine\ncannot be disabled or moved. For more conceptual overview on identity, refer to\nthe ",(0,i.jsx)(t.a,{href:"/docs/concepts/identity",children:"Identity"})," documentation."]}),"\n",(0,i.jsx)(t.p,{children:"The OpenBao Identity secrets engine supports several different features. Each\none is individually documented on its own page."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/secrets/identity/identity-token",children:"Identity tokens"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/secrets/identity/oidc-provider",children:"OIDC Identity Provider"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(t.p,{children:["The Identity secrets engine has a full HTTP API. Please see the\n",(0,i.jsx)(t.a,{href:"/api-docs/secret/identity",children:"Identity secrets engine API"})," for more\ndetails."]}),"\n",(0,i.jsxs)(t.p,{children:["Additionally, OpenBao can be configured as an OIDC identity provider. Please see\nthe ",(0,i.jsx)(t.a,{href:"/api-docs/secret/identity/oidc-provider",children:"OIDC identity provider API"})," for\nmore details."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(96540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);