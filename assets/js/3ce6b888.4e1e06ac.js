"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8034],{49233:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=t(74848),a=t(28453);const i={layout:"docs",page_title:"Use Cases",description:"This page lists some concrete use cases for OpenBao, but the possible use cases are much broader than what we cover."},r="Use cases",o={id:"use-cases",title:"Use cases",description:"This page lists some concrete use cases for OpenBao, but the possible use cases are much broader than what we cover.",source:"@site/content/docs/use-cases.mdx",sourceDirName:".",slug:"/use-cases",permalink:"/openbao/docs/use-cases",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/use-cases.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"Use Cases",description:"This page lists some concrete use cases for OpenBao, but the possible use cases are much broader than what we cover."},sidebar:"docs",previous:{title:"What is OpenBao?",permalink:"/openbao/docs/what-is-openbao"},next:{title:"Developer quick start",permalink:"/openbao/docs/get-started/developer-qs"}},c={},d=[{value:"General secret storage",id:"general-secret-storage",level:2},{value:"Static secrets",id:"static-secrets",level:3},{value:"Dynamic secrets",id:"dynamic-secrets",level:3},{value:"Data encryption",id:"data-encryption",level:2},{value:"Resources",id:"resources",level:3},{value:"Identity-Based access",id:"identity-based-access",level:2},{value:"Resources",id:"resources-1",level:3}];function l(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"use-cases",children:"Use cases"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"/docs/what-is-openbao",children:"OpenBao"})," is an identity-based secrets and encryption management system. OpenBao validates and authorizes clients (users, machines, apps) before providing them access to secrets or stored sensitive data."]}),"\n",(0,n.jsx)(s.p,{children:"This page describes common OpenBao use cases and provides related resources that can be used to create OpenBao configurations and workflows. Please note that not all use cases may be listed."}),"\n",(0,n.jsx)(s.h2,{id:"general-secret-storage",children:"General secret storage"}),"\n",(0,n.jsx)(s.p,{children:"As workloads become more and more ephemeral and short-lived, having long-lived static credentials pose a big security threat vector. What if credentials are accidentally leaked, or an employee leaves with their post it notes that contain the AWS access key, or someone checks their S3 access token to a public GH repo?\nWith OpenBao, you can generate short-lived, just-in-time credentials that are automatically revoked when their time expires. This means users and security teams do not have to worry about manually revoking or changing these credentials."}),"\n",(0,n.jsx)(s.h3,{id:"static-secrets",children:"Static secrets"}),"\n",(0,n.jsx)(s.p,{children:"Credentials can be long-lived and static, where they don't change or are changed infrequently. OpenBao can store these secrets bedhind its cryptographic barrier, and clients can request them to use in their applications."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Refer to the ",(0,n.jsx)(s.a,{href:"/tutorials/secrets-management/versioned-kv",children:"Versioned Key/Value Secrets Engine"})," tutorial and learn how a versioned key-value secrets engine protects your static secrets."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"dynamic-secrets",children:"Dynamic secrets"}),"\n",(0,n.jsx)(s.p,{children:"The key value with secrets storage is the ability to dynamically generate credentials. These credentials are created when clients need them. OpenBao can also manage the lifecycle of these credentials, including but not limited to, deleting them after a defined period of time."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Refer to the ",(0,n.jsx)(s.a,{href:"/tutorials/db-credentials/database-secrets",children:"Dynamic Secrets: Database Secrets Engine"})," tutorial and learn how OpenBao can dynamically manage your database credentials."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["In addition to database credential management, OpenBao can manage your Active Directory accounts, SSH keys, PKI certificates and more. Visit the ",(0,n.jsx)(s.a,{href:"/tutorials/secrets-management",children:"Secrets Management"})," tutorial series to learn more about secrets management using OpenBao."]}),"\n",(0,n.jsx)(s.h2,{id:"data-encryption",children:"Data encryption"}),"\n",(0,n.jsxs)(s.p,{children:["Many organizations seek solutions to encrypt/decrypt application data within a cloud or multi-datacenter environment; deploying cryptography and maintaining a complex key management infrastructure can be expensive and challenging to develop. OpenBao provides ",(0,n.jsx)(s.a,{href:"/docs/secrets/transit",children:"encryption as a service"})," with centralized key management to simplify encrypting data in transit and stored across clouds and datacenters. OpenBao can encrypt/decrypt data stored elsewhere, essentially allowing applications to encrypt their data while storing it in the primary data store. OpenBao's security team manages and maintains the responsibility of the data encryption within the OpenBao environment, allowing developers to focus solely on encrypting/decrypting data as needed."]}),"\n",(0,n.jsx)(s.h3,{id:"resources",children:"Resources"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Try our ",(0,n.jsx)(s.a,{href:"/tutorials/encryption-as-a-service",children:"Encryption as a Service: Transit Secrets Engine"})," to learn the essential workings of the Transit secrets engine handles cryptographic functions on data in-transit."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["For more advanced data protection, refer to the ",(0,n.jsx)(s.a,{href:"/tutorials/adp",children:"Advanced Data Protection"})," tutorial series. OpenBao's Transform secrets engine handles secure data transformation and tokenization against provided input value."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"identity-based-access",children:"Identity-Based access"}),"\n",(0,n.jsxs)(s.p,{children:["Organizations need a way to manage identity sprawl with the proliferation of different clouds, services, and systems- all with their identity providers. The risk of compromising an organization's security infrastructure increases as organizations are forced to manage multiple identity management systems as they try to implement solutions to unify a single logical identity across numerous cloud platforms. Different platforms support different methods and constructs for identity, making it difficult to recognize a user or identity across multiple forms of credentials. OpenBao solves this challenge by using a unified ACL system to broker access to systems and secrets and merges identities across providers. With ",(0,n.jsx)(s.a,{href:"/docs/secrets/identity",children:"identity-based access"}),", organizations can leverage any trusted resource identity to regulate and manage system and application access, and authentication across various clouds, systems, and endpoints."]}),"\n",(0,n.jsx)(s.h3,{id:"resources-1",children:"Resources"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Try our ",(0,n.jsx)(s.a,{href:"/tutorials/auth-methods/identity",children:"Identity: Entities and Groups"})," tutorial to learn how OpenBao's unified identity system works."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Follow the ",(0,n.jsx)(s.a,{href:"/tutorials/policies",children:"Policies"})," tutorial series to learn how OpenBao enforces role-based access control (RBAC) across multiple cloud environments."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(96540);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);