"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9474],{82621:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var t=n(74848),i=n(28453);const l={description:"The `/sys/health` endpoint is used to check the health status of OpenBao."},d="/sys/health",a={id:"system/health",title:"/sys/health",description:"The `/sys/health` endpoint is used to check the health status of OpenBao.",source:"@site/content/api-docs/system/health.mdx",sourceDirName:"system",slug:"/system/health",permalink:"/api-docs/system/health",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/api-docs/system/health.mdx",tags:[],version:"current",frontMatter:{description:"The `/sys/health` endpoint is used to check the health status of OpenBao."},sidebar:"api",previous:{title:"/sys/generate-root",permalink:"/api-docs/system/generate-root"},next:{title:"/sys/host-info",permalink:"/api-docs/system/host-info"}},r={},c=[{value:"Read health information",id:"read-health-information",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Sample request",id:"sample-request",level:3},{value:"Sample response",id:"sample-response",level:3},{value:"Sample request to customize the status code being returned",id:"sample-request-to-customize-the-status-code-being-returned",level:3},{value:"Sample response",id:"sample-response-1",level:3}];function o(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"syshealth",children:(0,t.jsx)(s.code,{children:"/sys/health"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"/sys/health"})," endpoint is used to check the health status of OpenBao."]}),"\n",(0,t.jsx)(s.h2,{id:"read-health-information",children:"Read health information"}),"\n",(0,t.jsx)(s.p,{children:"This endpoint returns the health status of OpenBao. This matches the semantics of\na Consul HTTP health check and provides a simple way to monitor the health of a\nOpenBao instance."}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Method"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"HEAD"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"/sys/health"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"GET"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"/sys/health"})})]})]})]}),"\n",(0,t.jsx)(s.p,{children:"The default status codes are:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"200"})," if initialized, unsealed, and active"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"429"})," if unsealed and standby"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"501"})," if not initialized"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"503"})," if sealed"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"standbyok"})," ",(0,t.jsx)(s.code,{children:"(bool: false)"})," \u2013 Specifies if being a standby should still return\nthe active status code instead of the standby status code. This is useful when\nOpenBao is behind a non-configurable load balancer that just wants a 200-level\nresponse."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"activecode"})," ",(0,t.jsx)(s.code,{children:"(int: 200)"})," \u2013\xa0Specifies the status code that should be returned\nfor an active node."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"standbycode"})," ",(0,t.jsx)(s.code,{children:"(int: 429)"})," \u2013 Specifies the status code that should be returned\nfor a standby node."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"sealedcode"})," ",(0,t.jsx)(s.code,{children:"(int: 503)"})," \u2013 Specifies the status code that should be returned\nfor a sealed node."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"uninitcode"})," ",(0,t.jsx)(s.code,{children:"(int: 501)"})," \u2013 Specifies the status code that should be returned\nfor a uninitialized node."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"sample-request",children:"Sample request"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell-session",children:"$ curl \\\n    http://127.0.0.1:8200/v1/sys/health\n"})}),"\n",(0,t.jsx)(s.h3,{id:"sample-response",children:"Sample response"}),"\n",(0,t.jsxs)(s.p,{children:["This response is only returned for a ",(0,t.jsx)(s.code,{children:"GET"})," request."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "initialized": true,\n  "sealed": false,\n  "standby": false,\n  "performance_standby": false,\n  "replication_performance_mode": "disabled",\n  "replication_dr_mode": "disabled",\n  "server_time_utc": 1516639589,\n  "version": "0.9.2",\n  "cluster_name": "openbao-cluster-3bd69ca2",\n  "cluster_id": "00af5aa8-c87d-b5fc-e82e-97cd8dfaf731"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"sample-request-to-customize-the-status-code-being-returned",children:"Sample request to customize the status code being returned"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell-session",children:"$ curl -i https://127.0.0.1:8200/v1/sys/health\\?standbycode\\=200\n\nHTTP/2 200\ncache-control: no-store\ncontent-type: application/json\nstrict-transport-security: max-age=31536000; includeSubDomains\ncontent-length: 364\ndate: Wed, 26 Jan 2022 09:21:13 GMT\n"})}),"\n",(0,t.jsx)(s.h3,{id:"sample-response-1",children:"Sample response"}),"\n",(0,t.jsxs)(s.p,{children:["This response is only returned for a ",(0,t.jsx)(s.code,{children:"GET"})," request."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "initialized": true,\n  "sealed": false,\n  "standby": false,\n  "performance_standby": false,\n  "replication_performance_mode": "disabled",\n  "replication_dr_mode": "disabled",\n  "server_time_utc": 1706217694,\n  "version": "1.14.8",\n  "cluster_name": "openbao-cluster-6fc973c2",\n  "cluster_id": "8190fce1-679e-3a57-7d1f-f63d4851633b"\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>a});var t=n(96540);const i={},l=t.createContext(i);function d(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);