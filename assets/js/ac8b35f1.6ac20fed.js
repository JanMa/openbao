"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8054],{74695:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=s(74848),a=s(28453);const r={layout:"api",page_title:"/sys/storage/raft/autopilot - HTTP API",description:"\nThe `/sys/storage/raft/autopilot` endpoints are used to manage raft clusters using autopilot with OpenBao's Integrated Storage backend."},l="/sys/storage/raft/autopilot",o={id:"system/storage/raftautopilot",title:"/sys/storage/raft/autopilot",description:"\nThe `/sys/storage/raft/autopilot` endpoints are used to manage raft clusters using autopilot with OpenBao's Integrated Storage backend.",source:"@site/content/api-docs/system/storage/raftautopilot.mdx",sourceDirName:"system/storage",slug:"/system/storage/raftautopilot",permalink:"/openbao/api-docs/system/storage/raftautopilot",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/api-docs/system/storage/raftautopilot.mdx",tags:[],version:"current",frontMatter:{layout:"api",page_title:"/sys/storage/raft/autopilot - HTTP API",description:"\nThe `/sys/storage/raft/autopilot` endpoints are used to manage raft clusters using autopilot with OpenBao's Integrated Storage backend."},sidebar:"apiSidebar",previous:{title:"/sys/storage/raft",permalink:"/openbao/api-docs/system/storage/raft"},next:{title:"/sys/tools",permalink:"/openbao/api-docs/system/tools"}},i={},d=[{value:"Get cluster state",id:"get-cluster-state",level:2},{value:"Sample request",id:"sample-request",level:3},{value:"Sample response",id:"sample-response",level:3},{value:"Get configuration",id:"get-configuration",level:2},{value:"Sample request",id:"sample-request-1",level:3},{value:"Sample response",id:"sample-response-1",level:3},{value:"Set configuration",id:"set-configuration",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Sample request",id:"sample-request-2",level:3},{value:"Sample payload",id:"sample-payload",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"sysstorageraftautopilot",children:(0,n.jsx)(t.code,{children:"/sys/storage/raft/autopilot"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"/sys/storage/raft/autopilot"})," endpoints are used to manage raft clusters using autopilot\nwith OpenBao's ",(0,n.jsx)(t.a,{href:"/docs/internals/integrated-storage",children:"Integrated Storage backend"}),".\nRefer to the ",(0,n.jsx)(t.a,{href:"/tutorials/raft/raft-autopilot",children:"Integrated Storage Autopilot"})," tutorial to learn how to manage raft clusters using autopilot."]}),"\n",(0,n.jsx)(t.h2,{id:"get-cluster-state",children:"Get cluster state"}),"\n",(0,n.jsxs)(t.p,{children:["This endpoint is used to retrieve the raft cluster state. See the ",(0,n.jsx)(t.a,{href:"/docs/commands/operator/raft#autopilot-state",children:"docs page"})," for a description of the output."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"GET"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"/sys/storage/raft/autopilot/state"})})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"sample-request",children:"Sample request"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    http://127.0.0.1:8200/v1/sys/storage/raft/autopilot/state\n'})}),"\n",(0,n.jsx)(t.h3,{id:"sample-response",children:"Sample response"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "healthy": true,\n  "failure_tolerance": 1,\n  "servers": {\n    "raft1": {\n      "id": "raft1",\n      "name": "raft1",\n      "address": "127.0.0.1:8201",\n      "node_status": "alive",\n      "last_contact": "0s",\n      "last_term": 3,\n      "last_index": 459,\n      "healthy": true,\n      "stable_since": "2021-03-19T20:14:11.831678-04:00",\n      "status": "leader",\n      "meta": null\n    },\n    "raft2": {\n      "id": "raft2",\n      "name": "raft2",\n      "address": "127.0.0.2:8201",\n      "node_status": "alive",\n      "last_contact": "516.49595ms",\n      "last_term": 3,\n      "last_index": 459,\n      "healthy": true,\n      "stable_since": "2021-03-19T20:14:19.831931-04:00",\n      "status": "voter",\n      "meta": null\n    },\n    "raft3": {\n      "id": "raft3",\n      "name": "raft3",\n      "address": "127.0.0.3:8201",\n      "node_status": "alive",\n      "last_contact": "196.706591ms",\n      "last_term": 3,\n      "last_index": 459,\n      "healthy": true,\n      "stable_since": "2021-03-19T20:14:25.83565-04:00",\n      "status": "voter",\n      "meta": null\n    }\n  },\n  "leader": "raft1",\n  "voters": ["raft1", "raft2", "raft3"],\n  "non_voters": null\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"get-configuration",children:"Get configuration"}),"\n",(0,n.jsx)(t.p,{children:"This endpoint is used to get the configuration of the autopilot subsystem of Integrated Storage."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"GET"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"/sys/storage/raft/autopilot/configuration"})})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"sample-request-1",children:"Sample request"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    http://127.0.0.1:8200/v1/sys/storage/raft/autopilot/configuration\n'})}),"\n",(0,n.jsx)(t.h3,{id:"sample-response-1",children:"Sample response"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "cleanup_dead_servers": false,\n  "dead_server_last_contact_threshold": "24h0m0s",\n  "last_contact_threshold": "10s",\n  "max_trailing_logs": 1000,\n  "min_quorum": 0,\n  "server_stabilization_time": "10s"\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"set-configuration",children:"Set configuration"}),"\n",(0,n.jsx)(t.p,{children:"This endpoint is used to modify the configuration of the autopilot subsystem of Integrated Storage."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"POST"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"/sys/storage/raft/autopilot/configuration"})})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"cleanup_dead_servers"})," ",(0,n.jsx)(t.code,{children:"(bool: false)"})," - Controls whether to remove dead servers from\nthe Raft peer list periodically or when a new server joins. This requires that\n",(0,n.jsx)(t.code,{children:"min_quorum"})," is also set."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"last_contact_threshold"})," ",(0,n.jsx)(t.code,{children:'(string: "10s")'})," - Limit on the amount of time a server can\ngo without leader contact before being considered unhealthy."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"dead_server_last_contact_threshold"})," ",(0,n.jsx)(t.code,{children:'(string: "24h")'})," - Limit on the amount of time\na server can go without leader contact before being considered failed. This\ntakes effect only when ",(0,n.jsx)(t.code,{children:"cleanup_dead_servers"})," is ",(0,n.jsx)(t.code,{children:"true"}),". This can not be set to a value\nsmaller than 1m."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"max_trailing_logs"})," ",(0,n.jsx)(t.code,{children:"(int: 1000)"})," - Amount of entries in the Raft Log that a server\ncan be behind before being considered unhealthy."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"min_quorum"})," ",(0,n.jsx)(t.code,{children:"(int: 3)"})," - Minimum number of servers allowed in a cluster before\nautopilot can prune dead servers. This should at least be 3. Applicable only for\nvoting nodes."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"server_stabilization_time"})," ",(0,n.jsx)(t.code,{children:'(string: "10s")'})," - Minimum amount of time a server must\nbe in a stable, healthy state before it can be added to the cluster."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"sample-request-2",children:"Sample request"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/sys/storage/raft/autopilot/configuration\n'})}),"\n",(0,n.jsx)(t.h3,{id:"sample-payload",children:"Sample payload"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "cleanup_dead_servers": true,\n  "last_contact_threshold": "10s",\n  "dead_server_last_contact_threshold": "24h",\n  "max_trailing_logs": "1000",\n  "min_quorum": "3",\n  "server_stabilization_time": "10s"\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>o});var n=s(96540);const a={},r=n.createContext(a);function l(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);