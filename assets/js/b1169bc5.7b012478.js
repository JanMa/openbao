"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5248],{39465:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=s(74848),n=s(28453);const i={sidebar_label:"Overview",description:"The Vault CSI Provider allows pods to consume Vault secrets using CSI volumes."},a="Vault CSI provider",l={id:"platform/k8s/csi/index",title:"Vault CSI provider",description:"The Vault CSI Provider allows pods to consume Vault secrets using CSI volumes.",source:"@site/content/docs/platform/k8s/csi/index.mdx",sourceDirName:"platform/k8s/csi",slug:"/platform/k8s/csi/",permalink:"/docs/platform/k8s/csi/",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/platform/k8s/csi/index.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Overview",description:"The Vault CSI Provider allows pods to consume Vault secrets using CSI volumes."},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/platform/k8s/injector/examples"},next:{title:"Installation",permalink:"/docs/platform/k8s/csi/installation"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:3},{value:"Authenticating with Vault",id:"authenticating-with-vault",level:2},{value:"Secret provider class example",id:"secret-provider-class-example",level:2},{value:"Using secret provider classes",id:"using-secret-provider-classes",level:2},{value:"Tutorial",id:"tutorial",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"vault-csi-provider",children:"Vault CSI provider"}),"\n",(0,r.jsxs)(t.p,{children:["The Vault CSI Provider allows pods to consume Vault secrets using\n",(0,r.jsx)(t.a,{href:"https://github.com/kubernetes-sigs/secrets-store-csi-driver",children:"CSI Secrets Store"})," volumes."]}),"\n",(0,r.jsxs)(t.p,{children:["~> The Vault CSI Provider requires the ",(0,r.jsx)(t.a,{href:"https://github.com/kubernetes-sigs/secrets-store-csi-driver",children:"CSI Secret Store"}),"\nDriver to be installed."]}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(t.p,{children:["At a high level, the CSI Secrets Store driver allows users to create ",(0,r.jsx)(t.code,{children:"SecretProviderClass"})," objects.\nThis object defines which secret provider to use and what secrets to retrieve. When pods requesting CSI volumes\nare created, the CSI Secrets Store driver will send the request to the Vault CSI Provider if the provider\nis ",(0,r.jsx)(t.code,{children:"vault"}),". The Vault CSI Provider will then use Secret Provider Class specified and the pod's service account to retrieve\nthe secrets from Vault, and mount them into the pod's CSI volume."]}),"\n",(0,r.jsxs)(t.p,{children:["The secret is retrieved from Vault and populated to the CSI secrets store volume during the ",(0,r.jsx)(t.code,{children:"ContainerCreation"})," phase.\nThis means that pods will be blocked from starting until the secrets have been read from Vault and written to the volume."]}),"\n",(0,r.jsx)(t.h3,{id:"features",children:"Features"}),"\n",(0,r.jsx)(t.p,{children:"The following features are supported by the Vault CSI Provider:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"All Vault secret engines supported."}),"\n",(0,r.jsx)(t.li,{children:"Authentication using the requesting pod's service account."}),"\n",(0,r.jsx)(t.li,{children:"TLS/mTLS communications with Vault."}),"\n",(0,r.jsx)(t.li,{children:"Rendering Vault secrets to files."}),"\n",(0,r.jsx)(t.li,{children:"Dynamic lease caching and renewal performed by Agent."}),"\n",(0,r.jsx)(t.li,{children:"Syncing secrets to Kubernetes secrets to be used as environment variables."}),"\n",(0,r.jsxs)(t.li,{children:["Installation via ",(0,r.jsx)(t.a,{href:"/docs/platform/k8s/helm",children:"Vault Helm"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{children:"Supported kubernetes versions"}),"\n",(0,r.jsxs)(t.p,{children:["The following ",(0,r.jsx)(t.a,{href:"https://kubernetes.io/releases/",children:"Kubernetes minor releases"})," are currently supported.\nThe latest version is tested against each Kubernetes version. It may work with\nother versions of Kubernetes, but those are not supported."]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"1.27"}),"\n",(0,r.jsx)(t.li,{children:"1.26"}),"\n",(0,r.jsx)(t.li,{children:"1.25"}),"\n",(0,r.jsx)(t.li,{children:"1.24"}),"\n",(0,r.jsx)(t.li,{children:"1.23"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"authenticating-with-vault",children:"Authenticating with Vault"}),"\n",(0,r.jsxs)(t.p,{children:["The Vault CSI Provider will authenticate with Vault as the service account of the\npod that mounts the CSI volume. ",(0,r.jsx)(t.a,{href:"/docs/auth/kubernetes",children:"Kubernetes"})," and\n",(0,r.jsx)(t.a,{href:"/docs/auth/jwt",children:"JWT"})," auth methods are supported. The pod's service account\nmust be bound to a Vault role and a policy granting access to the secrets desired."]}),"\n",(0,r.jsx)(t.p,{children:"It is highly recommended to run pods with dedicated Kubernetes service accounts to\nensure applications cannot access more secrets than they require."}),"\n",(0,r.jsx)(t.h2,{id:"secret-provider-class-example",children:"Secret provider class example"}),"\n",(0,r.jsxs)(t.p,{children:["The following is an example of a Secret Provider Class using the ",(0,r.jsx)(t.code,{children:"vault"})," provider:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:'---\napiVersion: secrets-store.csi.x-k8s.io/v1alpha1\nkind: SecretProviderClass\nmetadata:\n  name: vault-db-creds\nspec:\n  # Vault CSI Provider\n  provider: vault\n  parameters:\n    # Vault role name to use during login\n    roleName: \'app\'\n    # Vault address and TLS connection config is normally best configured by the\n    # helm chart, but can be overridden per SecretProviderClass:\n    # Vault\'s hostname\n    #vaultAddress: \'https://vault:8200\'\n    # TLS CA certification for validation\n    #vaultCACertPath: \'/vault/tls/ca.crt\'\n    objects: |\n      - objectName: "dbUsername"\n        secretPath: "database/creds/db-app"\n        secretKey: "username"\n      - objectName: "dbPassword"\n        secretPath: "database/creds/db-app"\n        secretKey: "password"\n    # "objectName" is an alias used within the SecretProviderClass to reference\n    # that specific secret. This will also be the filename containing the secret.\n    # "secretPath" is the path in Vault where the secret should be retrieved.\n    # "secretKey" is the key within the Vault secret response to extract a value from.\n'})}),"\n",(0,r.jsx)(t.p,{children:"~> Secret Provider Class is a namespaced object in Kubernetes."}),"\n",(0,r.jsx)(t.h2,{id:"using-secret-provider-classes",children:"Using secret provider classes"}),"\n",(0,r.jsx)(t.p,{children:"An application pod uses the example Secret Provider Class above by mounting it as a CSI volume:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app\n  labels:\n    app: demo\nspec:\n  selector:\n    matchLabels:\n      app: demo\n  replicas: 1\n  template:\n    spec:\n      serviceAccountName: app\n      containers:\n        - name: app\n          image: my-app:1.0.0\n          volumeMounts:\n            - name: 'vault-db-creds'\n              mountPath: '/mnt/secrets-store'\n              readOnly: true\n      volumes:\n        - name: vault-db-creds\n          csi:\n            driver: 'secrets-store.csi.k8s.io'\n            readOnly: true\n            volumeAttributes:\n              secretProviderClass: 'vault-db-creds'\n"})}),"\n",(0,r.jsxs)(t.p,{children:["In this example ",(0,r.jsx)(t.code,{children:"volumes.csi"})," is created on the application deployment and references\nthe Secret Provider Class named ",(0,r.jsx)(t.code,{children:"vault-db-creds"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"tutorial",children:"Tutorial"}),"\n",(0,r.jsxs)(t.p,{children:["Refer to the ",(0,r.jsx)(t.a,{href:"/tutorials/kubernetes/kubernetes-secret-store-driver",children:"Vault CSI Provider"}),"\ntutorial to learn how to set up Vault and its dependencies with a Helm chart."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var r=s(96540);const n={},i=r.createContext(n);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);