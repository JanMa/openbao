"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2782],{31701:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=n(74848),i=n(28453);const r={layout:"docs",page_title:"Key Rotation",description:"Learn about the details of key rotation within OpenBao."},a="Key rotation",s={id:"internals/rotation",title:"Key rotation",description:"Learn about the details of key rotation within OpenBao.",source:"@site/content/docs/internals/rotation.mdx",sourceDirName:"internals",slug:"/internals/rotation",permalink:"/openbao/docs/internals/rotation",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/internals/rotation.mdx",tags:[],version:"current",frontMatter:{layout:"docs",page_title:"Key Rotation",description:"Learn about the details of key rotation within OpenBao."},sidebar:"docs",previous:{title:"Token authentication",permalink:"/openbao/docs/internals/token"},next:{title:"OpenBao limits and maximums",permalink:"/openbao/docs/internals/limits"}},c={},d=[{value:"NIST rotation guidance",id:"nist-rotation-guidance",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"key-rotation",children:"Key rotation"}),"\n",(0,o.jsxs)(t.p,{children:["OpenBao has multiple encryption keys that are used for various purposes. These keys support\nrotation so that they can be periodically changed or in response to a potential leak or\ncompromise. It is useful to first understand the\n",(0,o.jsx)(t.a,{href:"/docs/internals/architecture",children:"high-level architecture"})," before learning about key rotation."]}),"\n",(0,o.jsxs)(t.p,{children:["As a review, OpenBao starts in a ",(0,o.jsx)(t.em,{children:"sealed"})," state. OpenBao is unsealed by providing the unseal keys.\nBy default, OpenBao uses a technique known as ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Shamir's_Secret_Sharing",children:"Shamir's secret sharing algorithm"}),"\nto split the root key into 5 shares, any 3 of which are required to reconstruct the master\nkey. The root key is used to protect the encryption key, which is ultimately used to protect\ndata written to the storage backend."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Key Rotate",src:n(9739).A+"",width:"637",height:"311"})}),"\n",(0,o.jsxs)(t.p,{children:["To support key rotation, we need to support changing the unseal keys, root key, and the\nbackend encryption key. We split this into two separate operations, ",(0,o.jsx)(t.code,{children:"rekey"})," and ",(0,o.jsx)(t.code,{children:"rotate"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"rekey"})," operation is used to generate a new root key. When this is being done,\nit is possible to change the parameters of the key splitting, so that the number of shares\nand the threshold required to unseal can be changed. To perform a rekey a threshold of the\ncurrent unseal keys must be provided. This is to prevent a single malicious operator from\nperforming a rekey and invalidating the existing root key."]}),"\n",(0,o.jsx)(t.p,{children:"Performing a rekey is fairly straightforward. The rekey operation must be initialized with\nthe new parameters for the split and threshold. Once initialized, the current unseal keys\nmust be provided until the threshold is met. Once met, OpenBao will generate the new master\nkey, perform the splitting, and re-encrypt the encryption key with the new root key.\nThe new unseal keys are then provided to the operator, and the old unseal keys are no\nlonger usable."}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"rotate"})," operation is used to change the encryption key used to protect data written\nto the storage backend. This key is never provided or visible to operators, who only\nhave unseal keys. This simplifies the rotation, as it does not require the current key\nholders unlike the ",(0,o.jsx)(t.code,{children:"rekey"})," operation. When ",(0,o.jsx)(t.code,{children:"rotate"})," is triggered, a new encryption key\nis generated and added to a keyring. All new values written to the storage backend are\nencrypted with the new key. Old values written with previous encryption keys can still\nbe decrypted since older keys are saved in the keyring. This allows key rotation to be\ndone online, without an expensive re-encryption process."]}),"\n",(0,o.jsxs)(t.p,{children:["Both the ",(0,o.jsx)(t.code,{children:"rekey"})," and ",(0,o.jsx)(t.code,{children:"rotate"})," operations can be done online and in a highly available\nconfiguration. Only the active OpenBao instance can perform either of the operations\nbut standby instances can still assume an active role after either operation. This is\ndone by providing an online upgrade path for standby instances. If the current encryption\nkey is ",(0,o.jsx)(t.code,{children:"N"})," and a rotation installs ",(0,o.jsx)(t.code,{children:"N+1"}),', OpenBao creates a special "upgrade" key, which\nprovides the ',(0,o.jsx)(t.code,{children:"N+1"})," encryption key protected by the ",(0,o.jsx)(t.code,{children:"N"})," key. This upgrade key is only available\nfor a few minutes enabling standby instances to do a periodic check for upgrades.\nThis allows standby instances to update their keys and stay in-sync with the active OpenBao\nwithout requiring operators to perform another unseal."]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"rotate/config"})," endpoint is used to configure the number of operations or time interval\nbetween automatic rotations of the backend encryption key."]}),"\n",(0,o.jsx)(t.h2,{id:"nist-rotation-guidance",children:"NIST rotation guidance"}),"\n",(0,o.jsxs)(t.p,{children:["Periodic rotation of the encryption keys is recommended, even in the absence of\ncompromise. Due to the nature of the AES-256-GCM encryption used, keys should be\nrotated before approximately 2",(0,o.jsx)("sup",{children:"32"})," encryptions have been performed, following\nthe guidelines of NIST publication 800-38D."]}),"\n",(0,o.jsxs)(t.p,{children:["OpenBao will automatically rotate the backend encryption key\nprior to reaching 2",(0,o.jsx)("sup",{children:"32"})," encryption operations by default."]}),"\n",(0,o.jsx)(t.p,{children:"Operators can estimate the number of encryptions by summing the following:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["The ",(0,o.jsx)(t.code,{children:"vault.barrier.put"})," telemetry metric."]}),"\n",(0,o.jsxs)(t.li,{children:["The ",(0,o.jsx)(t.code,{children:"vault.token.creation"})," metric where the ",(0,o.jsx)(t.code,{children:"token_type"})," label is ",(0,o.jsx)(t.code,{children:"batch"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:["The ",(0,o.jsx)(t.code,{children:"merkle.flushDirty.num_pages"})," metric."]}),"\n",(0,o.jsx)(t.li,{children:"The WAL index."}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},9739:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/vault-key-rotate-4885738dd8e9a5be1d2b53e168582e70.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var o=n(96540);const i={},r=o.createContext(i);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);