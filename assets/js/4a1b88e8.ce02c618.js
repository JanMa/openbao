"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5936],{36667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var s=t(74848),i=t(28453);const a={sidebar_label:"list",description:'The "kv list" command lists data from OpenBao\'s K/V secrets engine at the given\npath.'},o="kv list",l={id:"commands/kv/list",title:"kv list",description:'The "kv list" command lists data from OpenBao\'s K/V secrets engine at the given\npath.',source:"@site/content/docs/commands/kv/list.mdx",sourceDirName:"commands/kv",slug:"/commands/kv/list",permalink:"/docs/commands/kv/list",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/commands/kv/list.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"list",description:'The "kv list" command lists data from OpenBao\'s K/V secrets engine at the given\npath.'},sidebar:"docs",previous:{title:"get",permalink:"/docs/commands/kv/get"},next:{title:"metadata",permalink:"/docs/commands/kv/metadata"}},r={},c=[{value:"Examples",id:"examples",level:2},{value:"Usage",id:"usage",level:2},{value:"Output options",id:"output-options",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"kv-list",children:"kv list"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"kv list"})," command returns a list of key names at the specified location.\nFolders are suffixed with /. The input must be a folder; list on a file will not\nreturn a value. Note that no policy-based filtering is performed on keys; do not\nencode sensitive information in key names. The values themselves are not\naccessible via this command."]}),"\n",(0,s.jsx)(n.p,{children:"Use this command to list all existing key names at a specific path."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:'List values under the key "my-app":'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell-session",children:"$ bao kv list -mount=secret my-app/\nKeys\n----\nadmin_creds\ndomain\neng_creds\nqa_creds\nrelease\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["There are no flags beyond the ",(0,s.jsx)(n.a,{href:"/docs/commands",children:"standard set of flags"}),"\nincluded on all commands."]}),"\n",(0,s.jsx)(n.h3,{id:"output-options",children:"Output options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-mount"})," ",(0,s.jsx)(n.code,{children:'(string: "")'})," - Specifies the path where the KV backend is mounted.\nIf specified, the next argument will be interpreted as the secret path. If\nthis flag is not specified, the next argument will be interpreted as the\ncombined mount path and secret path, with /data/ automatically inserted for\nKV v2 secrets."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"-format"})," ",(0,s.jsx)(n.code,{children:'(string: "table")'}),' - Print the output in the given format. Valid\nformats are "table", "json", or "yaml". This can also be specified via the\n',(0,s.jsx)(n.code,{children:"VAULT_FORMAT"})," environment variable."]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);