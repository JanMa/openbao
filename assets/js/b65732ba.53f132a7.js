"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[619],{99771:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(74848),a=t(28453);const s={description:"Learn about the high availability design of OpenBao."},r="High availability",o={id:"internals/high-availability",title:"High availability",description:"Learn about the high availability design of OpenBao.",source:"@site/content/docs/internals/high-availability.mdx",sourceDirName:"internals",slug:"/internals/high-availability",permalink:"/openbao/docs/internals/high-availability",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/internals/high-availability.mdx",tags:[],version:"current",frontMatter:{description:"Learn about the high availability design of OpenBao."},sidebar:"docs",previous:{title:"Architecture",permalink:"/openbao/docs/internals/architecture"},next:{title:"Integrated storage",permalink:"/openbao/docs/internals/integrated-storage"}},l={},c=[];function h(e){const n={em:"em",h1:"h1",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"high-availability",children:"High availability"}),"\n",(0,i.jsx)(n.p,{children:"OpenBao can run in a high availability (HA) mode to protect against outages by running multiple OpenBao servers."}),"\n",(0,i.jsx)(n.h1,{id:"design-overview",children:"Design overview"}),"\n",(0,i.jsx)(n.p,{children:"The primary design goal for making OpenBao Highly Available (HA) is to\nminimize downtime without affecting horizontal scalability. OpenBao is\nbound by the IO limits of the storage backend rather than the compute\nrequirements. Being bound by the IO limits simplifies the HA approach and avoids complex\ncoordination."}),"\n",(0,i.jsx)(n.p,{children:"Storage backends, such as Integrated Storage, provide additional coordinative\nfunctions enabling OpenBao to run in an HA configuration. Supported\nby the backend, OpenBao will automatically run in HA mode without further\nconfiguration."}),"\n",(0,i.jsxs)(n.p,{children:["When running in HA mode, OpenBao servers have two states they\ncan be: ",(0,i.jsx)(n.strong,{children:"standby"})," and ",(0,i.jsx)(n.strong,{children:"active"}),". For multiple OpenBao servers sharing a storage\nbackend, only a single instance is active at any time. All standby instances are placed in hot standbys."]}),"\n",(0,i.jsx)(n.p,{children:"Only the active server processes all requests; the standby server redirects all requests to an active OpenBao server."}),"\n",(0,i.jsx)(n.p,{children:"Meanwhile, if the active server is sealed, fails, or loses network connectivity,\nthen one of the standby OpenBao server becomes the active instance."}),"\n",(0,i.jsxs)(n.p,{children:["Please note that only ",(0,i.jsx)(n.em,{children:"unsealed"})," OpenBao servers may act as a standby.\nIf a server is in a sealed state, it cannot act as a standby. Servers in a sealed state cannot\nserve any requests if the active server fails."]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);