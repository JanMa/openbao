"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8815],{89504:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=s(74848),a=s(28453);const r={sidebar_label:"Kubernetes",description:"The Kubernetes secrets engine for OpenBao generates Kubernetes service account tokens, service accounts, role bindings, and roles dynamically."},i="Kubernetes secrets engine",c={id:"secrets/kubernetes",title:"Kubernetes secrets engine",description:"The Kubernetes secrets engine for OpenBao generates Kubernetes service account tokens, service accounts, role bindings, and roles dynamically.",source:"@site/content/docs/secrets/kubernetes.mdx",sourceDirName:"secrets",slug:"/secrets/kubernetes",permalink:"/openbao/docs/secrets/kubernetes",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/secrets/kubernetes.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Kubernetes",description:"The Kubernetes secrets engine for OpenBao generates Kubernetes service account tokens, service accounts, role bindings, and roles dynamically."},sidebar:"docs",previous:{title:"K/V Version 2",permalink:"/openbao/docs/secrets/kv/kv-v2"},next:{title:"LDAP",permalink:"/openbao/docs/secrets/ldap"}},o={},l=[{value:"Setup",id:"setup",level:2},{value:"Generating credentials",id:"generating-credentials",level:2},{value:"TTL",id:"ttl",level:2},{value:"Audiences",id:"audiences",level:2},{value:"Automatically managing roles and service accounts",id:"automatically-managing-roles-and-service-accounts",level:2},{value:"API",id:"api",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"kubernetes-secrets-engine",children:"Kubernetes secrets engine"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": This engine can use external X.509 certificates as part of TLS or signature validation.\nVerifying signatures against X.509 certificates that use SHA-1 is deprecated and is no longer\nusable without a workaround. See the\n",(0,t.jsx)(n.a,{href:"/docs/deprecation/faq#q-what-is-the-impact-of-removing-support-for-x-509-certificates-with-signatures-that-use-sha-1",children:"deprecation FAQ"}),"\nfor more information."]})}),"\n",(0,t.jsx)(n.p,{children:"The Kubernetes Secrets Engine for OpenBao generates Kubernetes service account tokens, and\noptionally service accounts, role bindings, and roles. The created service account tokens have\na configurable TTL and any objects created are automatically deleted when the OpenBao lease expires."}),"\n",(0,t.jsx)(n.p,{children:"For each lease, OpenBao will create a service account token attached to the\ndefined service account. The service account token is returned to the caller."}),"\n",(0,t.jsxs)(n.p,{children:["To learn more about service accounts in Kubernetes, visit the\n",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",children:"Kubernetes service account"}),"\nand ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/",children:"Kubernetes RBAC"}),"\ndocumentation."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," We do not recommend using tokens created by the Kubernetes Secrets Engine to\nauthenticate with the ",(0,t.jsx)(n.a,{href:"/docs/auth/kubernetes",children:"OpenBao Kubernetes Auth Method"}),". This will\ngenerate many unique identities in OpenBao that will be hard to manage."]})}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsx)(n.p,{children:"The Kubernetes Secrets Engine must be configured in advance before it\ncan perform its functions. These steps are usually completed by an operator or configuration\nmanagement tool."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["By default, OpenBao will connect to Kubernetes using its own service account.\nIf using the ",(0,t.jsx)(n.a,{href:"https://github.com/hashicorp/vault-helm",children:"standard Helm chart"}),", this service account\nis created automatically by default and named after the Helm release (often ",(0,t.jsx)(n.code,{children:"openbao"}),", but this can be\nconfigured via the Helm value ",(0,t.jsx)(n.code,{children:"server.serviceAccount.name"}),")."]}),"\n",(0,t.jsx)(n.p,{children:"It's necessary to ensure that the service account OpenBao uses will have permissions to manage\nservice account tokens, and optionally manage service accounts, roles, and role bindings. These\npermissions can be managed using a Kubernetes role or cluster role. The role is attached to the\nOpenBao service account with a role binding or cluster role binding."}),"\n",(0,t.jsx)(n.p,{children:"For example, a minimal cluster role to create service account tokens is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: k8s-minimal-secrets-abilities\nrules:\n- apiGroups: [""]\n  resources: ["serviceaccounts/token"]\n  verbs: ["create"]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Similarly, you can create a more permissive cluster role with full permissions to manage tokens,\nservice accounts, bindings, and roles."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: k8s-full-secrets-abilities\nrules:\n- apiGroups: [""]\n  resources: ["serviceaccounts", "serviceaccounts/token"]\n  verbs: ["create", "update", "delete"]\n- apiGroups: ["rbac.authorization.k8s.io"]\n  resources: ["rolebindings", "clusterrolebindings"]\n  verbs: ["create", "update", "delete"]\n- apiGroups: ["rbac.authorization.k8s.io"]\n  resources: ["roles", "clusterroles"]\n  verbs: ["bind", "escalate", "create", "update", "delete"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Create this role in Kubernetes (e.g., with ",(0,t.jsx)(n.code,{children:"kubectl apply -f"}),")."]}),"\n",(0,t.jsx)(n.p,{children:"Moreover, if you want to use label selection to configure the namespaces on which a role can act,\nyou will need to grant OpenBao permissions to read namespaces."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: k8s-full-secrets-abilities-with-labels\nrules:\n- apiGroups: [""]\n  resources: ["namespaces"]\n  verbs: ["get"]\n- apiGroups: [""]\n  resources: ["serviceaccounts", "serviceaccounts/token"]\n  verbs: ["create", "update", "delete"]\n- apiGroups: ["rbac.authorization.k8s.io"]\n  resources: ["rolebindings", "clusterrolebindings"]\n  verbs: ["create", "update", "delete"]\n- apiGroups: ["rbac.authorization.k8s.io"]\n  resources: ["roles", "clusterroles"]\n  verbs: ["bind", "escalate", "create", "update", "delete"]\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Getting the right permissions for OpenBao will require some trial and error most\nlikely since Kubernetes has strict protections against privilege escalation. You can read more\nin the\n",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",children:"Kubernetes RBAC documentation"}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Protect the OpenBao service account, especially if you use broader permissions for it,\nas it is essentially a cluster administrator account."]})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a role binding to bind the role to OpenBao's service account and grant OpenBao permission\nto manage tokens."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: openbao-token-creator-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: k8s-minimal-secrets-abilities\nsubjects:\n- kind: ServiceAccount\n  name: openbao\n  namespace: openbao\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more information on Kubernetes roles, service accounts, bindings, and tokens, visit the\n",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/",children:"Kubernetes RBAC documentation"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If OpenBao will not be automatically managing roles or service accounts (see\n",(0,t.jsx)(n.a,{href:"#automatically-managing-roles-and-service-accounts",children:"Automatically Managing Roles and Service Accounts"}),"),\nthen you will need to set up a service account that OpenBao will issue tokens for."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": It is highly recommended that the service account that OpenBao issues tokens for\nis ",(0,t.jsx)(n.strong,{children:"NOT"})," the same service account that OpenBao itself uses."]})}),"\n",(0,t.jsxs)(n.p,{children:["The examples we will use will under the namespace ",(0,t.jsx)(n.code,{children:"test"}),", which you can create if it does not\nalready exist."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ kubectl create namespace test\nnamespace/test created\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Here is a simple set up of a service account, role, and role binding in the Kubernetes ",(0,t.jsx)(n.code,{children:"test"}),"\nnamespace with basic permissions we will use for this document:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: test-service-account-with-generated-token\n  namespace: test\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: test-role-list-pods\n  namespace: test\nrules:\n- apiGroups: [""]\n  resources: ["pods"]\n  verbs: ["list"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: test-role-abilities\n  namespace: test\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: test-role-list-pods\nsubjects:\n- kind: ServiceAccount\n  name: test-service-account-with-generated-token\n  namespace: test\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can create these objects with ",(0,t.jsx)(n.code,{children:"kubectl apply -f"}),"."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Enable the Kubernetes Secrets Engine:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao secrets enable kubernetes\nSuccess! Enabled the kubernetes Secrets Engine at: kubernetes/\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, the secrets engine will mount at the same name as the engine, i.e.,\n",(0,t.jsx)(n.code,{children:"kubernetes/"})," here. This can be changed by passing the ",(0,t.jsx)(n.code,{children:"-path"})," argument when enabling."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Configure the mount point. An empty config is allowed."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao write -f kubernetes/config\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Configuration options are available as specified in the\n",(0,t.jsx)(n.a,{href:"/api-docs/secret/kubernetes",children:"API docs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["You can now configure Kubernetes Secrets Engine to create an OpenBao role (",(0,t.jsx)(n.strong,{children:"not"})," the same as a\nKubernetes role) that can generate service account tokens for the given service account:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ bao write kubernetes/roles/my-role \\\n    allowed_kubernetes_namespaces="*" \\\n    service_account_name="test-service-account-with-generated-token" \\\n    token_default_ttl="10m"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"generating-credentials",children:"Generating credentials"}),"\n",(0,t.jsxs)(n.p,{children:["After a user has authenticated to OpenBao and has sufficient permissions, a write to the\n",(0,t.jsx)(n.code,{children:"creds"})," endpoint for the OpenBao role will generate and return a new service account token."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao write kubernetes/creds/my-role \\\n    kubernetes_namespace=test\n\nKey                        Value\n\u2013--                        -----\nlease_id                   kubernetes/creds/my-role/31d771a6-...\nlease_duration             10m0s\nlease_renwable             false\nservice_account_name       test-service-account-with-generated-token\nservice_account_namespace  test\nservice_account_token      eyJHbGci0iJSUzI1NiIsImtpZCI6ImlrUEE...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can use the service account token above (",(0,t.jsx)(n.code,{children:"eyJHbG..."}),") with any Kubernetes API request that\nits service account is authorized for (through role bindings)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ curl -sk $(kubectl config view --minify -o \'jsonpath={.clusters[].cluster.server}\')/api/v1/namespaces/test/pods \\\n    --header "Authorization: Bearer eyJHbGci0iJSUzI1Ni..."\n{\n  "kind": "PodList",\n  "apiVersion": "v1",\n  "metadata": {\n    "resourceVersion": "1624"\n  },\n  "items": []\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"When the lease expires, you can verify that the token has been revoked."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ curl -sk $(kubectl config view --minify -o \'jsonpath={.clusters[].cluster.server}\')/api/v1/namespaces/test/pods \\\n    --header "Authorization: Bearer eyJHbGci0iJSUzI1Ni..."\n{\n  "kind": "Status",\n  "apiVersion": "v1",\n  "metadata": {},\n  "status": "Failure",\n  "message": "Unauthorized",\n  "reason": "Unauthorized",\n  "code": 401\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"ttl",children:"TTL"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes service account tokens have a time-to-live (TTL). When a token expires it is\nautomatically revoked."}),"\n",(0,t.jsxs)(n.p,{children:["You can set a default (",(0,t.jsx)(n.code,{children:"token_default_ttl"}),") and a maximum TTL (",(0,t.jsx)(n.code,{children:"token_max_ttl"}),") when\ncreating or tuning the OpenBao role."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ bao write kubernetes/roles/my-role \\\n    allowed_kubernetes_namespaces="*" \\\n    service_account_name="new-service-account-with-generated-token" \\\n    token_default_ttl="10m" \\\n    token_max_ttl="2h"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can also set a TTL (",(0,t.jsx)(n.code,{children:"ttl"}),") when you generate the token from the credentials endpoint.\nThe TTL of the token will be given the default if not specified (and cannot exceed the\nmaximum TTL of the role, if present)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao write kubernetes/creds/my-role \\\n    kubernetes_namespace=test \\\n    ttl=20m\n\nKey                        Value\n\u2013--                        -----\nlease_id                   kubernetes/creds/my-role/31d771a6-...\nlease_duration             20m0s\nlease_renwable             false\nservice_account_name       new-service-account-with-generated-token\nservice_account_namespace  test\nservice_account_token      eyJHbGci0iJSUzI1NiIsImtpZCI6ImlrUEE...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can verify the token's TTL by decoding the JWT token and extracting the ",(0,t.jsx)(n.code,{children:"iat"}),"\n(issued at) and ",(0,t.jsx)(n.code,{children:"exp"})," (expiration time) claims."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ echo 'eyJhbGc...' | cut -d'.' -f2 | base64 -d  | jq -r '.iat,.exp|todate'\n2022-05-20T17:14:50Z\n2022-05-20T17:34:50Z\n"})}),"\n",(0,t.jsx)(n.h2,{id:"audiences",children:"Audiences"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes service account tokens have audiences."}),"\n",(0,t.jsxs)(n.p,{children:["You can set default audiences (",(0,t.jsx)(n.code,{children:"token_default_audiences"}),") when creating or tuning the OpenBao role.\nThe Kubernetes cluster default audiences for service account tokens will be used if not specified."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ bao write kubernetes/roles/my-role \\\n    allowed_kubernetes_namespaces="*" \\\n    service_account_name="new-service-account-with-generated-token" \\\n    token_default_audiences="custom-audience"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can also set audiences (",(0,t.jsx)(n.code,{children:"audiences"}),") when you generate the token from the credentials endpoint.\nThe audiences of the token will be given the default audiences if not specified."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ bao write kubernetes/creds/my-role \\\n    kubernetes_namespace=test \\\n    audiences="another-custom-audience"\n\nKey                        Value\n\u2013--                        -----\nlease_id                   kubernetes/creds/my-role/SriWQf0bPZ...\nlease_duration             768h\nlease_renwable             false\nservice_account_name       new-service-account-with-generated-token\nservice_account_namespace  test\nservice_account_token      eyJHbGci0iJSUzI1NiIsImtpZCI6ImlrUEE...\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can verify the token's audiences by decoding the JWT."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ echo 'eyJhbGc...' | cut -d'.' -f2 | base64 -d\n{\"aud\":[\"another-custom-audience\"]...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"automatically-managing-roles-and-service-accounts",children:"Automatically managing roles and service accounts"}),"\n",(0,t.jsx)(n.p,{children:"When configuring the OpenBao role, you can pass in parameters to specify that you want to\nautomatically generate the Kubernetes service account and role binding,\nand optionally generate the Kubernetes role itself."}),"\n",(0,t.jsxs)(n.p,{children:["If you want to configure the OpenBao role to use a pre-existing Kubernetes role, but generate\nthe service account and role binding automatically, you can set the ",(0,t.jsx)(n.code,{children:"kubernetes_role_name"}),"\nparameter."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ bao write kubernetes/roles/auto-managed-sa-role \\\n    allowed_kubernetes_namespaces="test" \\\n    kubernetes_role_name="test-role-list-pods"\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": OpenBao's service account will also need access to the resources it is granting\naccess to. This can be done for the examples above with ",(0,t.jsx)(n.code,{children:"kubectl -n test create rolebinding --role test-role-list-pods --serviceaccount=openbao:openbao openbao-test-role-abilities"}),".\nThis is how Kubernetes prevents privilege escalation.\nYou can read more in the\n",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",children:"Kubernetes RBAC documentation"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"You can then get credentials with the automatically generated service account."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao write kubernetes/creds/auto-managed-sa-role \\\n    kubernetes_namespace=test\nKey                          Value\n---                          -----\nlease_id                     kubernetes/creds/auto-managed-sa-role/cujRLYjKZUMQk6dkHBGGWm67\nlease_duration               768h\nlease_renewable              false\nservice_account_name         v-token-auto-man-1653001548-5z6hrgsxnmzncxejztml4arz\nservice_account_namespace    test\nservice_account_token        eyJHbGci0iJSUzI1Ni...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Furthermore, OpenBao can also automatically create the role in addition to the service account and\nrole binding by specifying the ",(0,t.jsx)(n.code,{children:"generated_role_rules"})," parameter, which accepts a set of JSON or YAML\nrules for the generated role."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:'$ bao write kubernetes/roles/auto-managed-sa-and-role \\\n    allowed_kubernetes_namespaces="test" \\\n    generated_role_rules=\'{"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["list"]}]}\'\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can then get credentials in the same way as before."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"$ bao write kubernetes/creds/auto-managed-sa-and-role \\\n    kubernetes_namespace=test\nKey                          Value\n---                          -----\nlease_id                     kubernetes/creds/auto-managed-sa-and-role/pehLtegoTP8vCkcaQozUqOHf\nlease_duration               768h\nlease_renewable              false\nservice_account_name         v-token-auto-man-1653002096-4imxf3ytjh5hbyro9s1oqdo3\nservice_account_namespace    test\nservice_account_token        eyJHbGci0iJSUzI1Ni...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,t.jsxs)(n.p,{children:["The Kubernetes Secrets Engine has a full HTTP API. Please see the\n",(0,t.jsx)(n.a,{href:"/api-docs/secret/kubernetes",children:"Kubernetes Secrets Engine API docs"})," for more details."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(96540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);