"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9234],{82889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(74848),r=n(28453);const a={description:"The Vault Secrets Operator allows Pods to consume Vault secrets natively from Kubernetes Secrets."},c="Vault Secrets Operator",o={id:"platform/k8s/vso/sources/vault",title:"Vault Secrets Operator",description:"The Vault Secrets Operator allows Pods to consume Vault secrets natively from Kubernetes Secrets.",source:"@site/content/docs/platform/k8s/vso/sources/vault.mdx",sourceDirName:"platform/k8s/vso/sources",slug:"/platform/k8s/vso/sources/vault",permalink:"/docs/platform/k8s/vso/sources/vault",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/platform/k8s/vso/sources/vault.mdx",tags:[],version:"current",frontMatter:{description:"The Vault Secrets Operator allows Pods to consume Vault secrets natively from Kubernetes Secrets."},sidebar:"docs",previous:{title:"Vault Secrets Operator",permalink:"/docs/platform/k8s/vso/sources/"},next:{title:"HCP Vault Secrets source",permalink:"/docs/platform/k8s/vso/sources/hvs"}},i={},l=[{value:"Supported Vault platform and version",id:"supported-vault-platform-and-version",level:2},{value:"Features",id:"features",level:2},{value:"Supported Vault authentication methods",id:"supported-vault-authentication-methods",level:3},{value:"Vault access and custom resource definitions",id:"vault-access-and-custom-resource-definitions",level:2},{value:"VaultConnection custom resource",id:"vaultconnection-custom-resource",level:3},{value:"VaultAuth custom resource",id:"vaultauth-custom-resource",level:3},{value:"Vault secret custom resource definitions",id:"vault-secret-custom-resource-definitions",level:2},{value:"VaultStaticSecret custom resource",id:"vaultstaticsecret-custom-resource",level:3},{value:"KV version 1 secret example",id:"kv-version-1-secret-example",level:5},{value:"KV version 2 secret example",id:"kv-version-2-secret-example",level:5},{value:"VaultPKISecret custom resource",id:"vaultpkisecret-custom-resource",level:3},{value:"VaultDynamicSecret custom resource",id:"vaultdynamicsecret-custom-resource",level:3},{value:"Database secret example",id:"database-secret-example",level:5},{value:"AWS secret example",id:"aws-secret-example",level:5},{value:"HCP Vault Secrets Example",id:"hcp-vault-secrets-example",level:5},{value:"Tutorial",id:"tutorial",level:2}];function u(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h5:"h5",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"vault-secrets-operator",children:"Vault Secrets Operator"}),"\n",(0,s.jsx)(t.p,{children:"The Vault Secrets Operator (VSO) supports Vault as a secret source, which\nlets you seamlessly integrate VSO with a Vault instance running on any\nplatform."}),"\n",(0,s.jsx)(t.h2,{id:"supported-vault-platform-and-version",children:"Supported Vault platform and version"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Platform"}),(0,s.jsx)(t.th,{children:"Version"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs",children:"Vault"})}),(0,s.jsx)(t.td,{children:"1.11+"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(t.p,{children:"Vault Secrets Operator supports the following Vault features:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Sync from multiple instances of Vault."}),"\n",(0,s.jsxs)(t.li,{children:["All Vault ",(0,s.jsx)(t.a,{href:"/docs/secrets",children:"secret engines"})," supported."]}),"\n",(0,s.jsx)(t.li,{children:"TLS/mTLS communications with Vault."}),"\n",(0,s.jsx)(t.li,{children:"Support for all VSO features, including performing a rollout-restart upon secret rotation or\nduring drift remediation."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"supported-vault-authentication-methods",children:"Supported Vault authentication methods"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Backend"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/auth/kubernetes",children:"Kubernetes"})}),(0,s.jsx)(t.td,{children:"Relies on short-lived Kubernetes ServiceAccount tokens for Vault authentication"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/auth/jwt",children:"JWT"})}),(0,s.jsx)(t.td,{children:"Relies on either static JWT tokens or short-lived Kubernetes ServiceAccount tokens for Vault authentication"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/auth/approle",children:"AppRole"})}),(0,s.jsx)(t.td,{children:"Relies on static AppRole credentials for Vault authentication"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/auth/aws",children:"AWS"})}),(0,s.jsx)(t.td,{children:"Relies on AWS credentials for Vault authentication"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"vault-access-and-custom-resource-definitions",children:"Vault access and custom resource definitions"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"VaultConnection"})," and ",(0,s.jsx)(t.code,{children:"VaultAuth"})," CRDs provide Vault connection and authentication configuration\ninformation for the operator. Consider ",(0,s.jsx)(t.code,{children:"VaultConnection"})," and ",(0,s.jsx)(t.code,{children:"VaultAuth"})," as foundational resources\nused by all secret replication type resources."]}),"\n",(0,s.jsx)(t.h3,{id:"vaultconnection-custom-resource",children:"VaultConnection custom resource"}),"\n",(0,s.jsx)(t.p,{children:"Provides the required configuration details for connecting to a single Vault server instance."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultConnection\nmetadata:\n  namespace: vso-example\n  name: vault-connection\nspec:\n  # required configuration\n  # address to the Vault server.\n  address: http://vault.vault.svc.cluster.local:8200\n\n  # optional configuration\n  # HTTP headers to be included in all Vault requests.\n  # headers: []\n  # TLS server name to use as the SNI host for TLS connections.\n  # tlsServerName: ""\n  # skip TLS verification for TLS connections to Vault.\n  # skipTLSVerify: false\n  # the trusted PEM encoded CA certificate chain stored in a Kubernetes Secret\n  # caCertSecretRef: ""\n'})}),"\n",(0,s.jsx)(t.h3,{id:"vaultauth-custom-resource",children:"VaultAuth custom resource"}),"\n",(0,s.jsxs)(t.p,{children:["Provide the configuration necessary for the Operator to authenticate to a single Vault server instance as\nspecified in a ",(0,s.jsx)(t.code,{children:"VaultConnection"})," custom resource."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultAuth\nmetadata:\n  namespace: vso-example\n  name: vault-auth\nspec:\n  # required configuration\n  # VaultConnectionRef of the corresponding VaultConnection CustomResource.\n  # If no value is specified the Operator will default to the `default` VaultConnection,\n  # configured in its own Kubernetes namespace.\n  vaultConnectionRef: vault-connection\n  # Method to use when authenticating to Vault.\n  method: kubernetes\n  # Mount to use when authenticating to auth method.\n  mount: kubernetes\n  # Kubernetes specific auth configuration, requires that the Method be set to kubernetes.\n  kubernetes:\n    # role to use when authenticating to Vault\n    role: example\n    # ServiceAccount to use when authenticating to Vault\n    # it is recommended to always provide a unique serviceAccount per Pod/application\n    serviceAccount: default\n\n  # optional configuration\n  # Params to use when authenticating to Vault\n  # params: []\n  # HTTP headers to be included in all Vault authentication requests.\n  # headers: []\n"})}),"\n",(0,s.jsx)(t.h2,{id:"vault-secret-custom-resource-definitions",children:"Vault secret custom resource definitions"}),"\n",(0,s.jsxs)(t.p,{children:["Provide the configuration necessary for the Operator to replicate a single Vault Secret to a single Kubernetes Secret.\nEach supported CRD is specialized to a ",(0,s.jsx)(t.em,{children:"class"})," of Vault secret, documented below."]}),"\n",(0,s.jsx)(t.h3,{id:"vaultstaticsecret-custom-resource",children:"VaultStaticSecret custom resource"}),"\n",(0,s.jsxs)(t.p,{children:["Provides the configuration necessary for the Operator to synchronize a single Vault ",(0,s.jsx)(t.em,{children:"static"})," Secret to a single Kubernetes Secret.",(0,s.jsx)("br",{}),"\nSupported secrets engines: ",(0,s.jsx)(t.a,{href:"/docs/secrets/kv/kv-v2",children:"kv-v2"}),", ",(0,s.jsx)(t.a,{href:"/docs/secrets/kv/kv-v1",children:"kv-v1"})]}),"\n",(0,s.jsx)(t.h5,{id:"kv-version-1-secret-example",children:"KV version 1 secret example"}),"\n",(0,s.jsxs)(t.p,{children:["The KV secrets engine's ",(0,s.jsx)(t.code,{children:"kvv1"})," mount path is specified under ",(0,s.jsx)(t.code,{children:"spec.mount"})," of ",(0,s.jsx)(t.code,{children:"VaultStaticSecret"})," custom resource. Please consult ",(0,s.jsx)(t.a,{href:"/docs/secrets/kv/kv-v1#setup",children:"KV Secrets Engine - Version 1 - Setup"})," for configuring KV secrets engine version 1. The following results in a request to ",(0,s.jsx)(t.code,{children:"http://127.0.0.1:8200/v1/kvv1/eng/apikey/google"})," to retrieve the secret."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultStaticSecret\nmetadata:\n  namespace: vso-example\n  name: vault-static-secret-v1\nspec:\n  vaultAuthRef: vault-auth\n  mount: kvv1\n  type: kv-v1\n  path: eng/apikey/google\n  refreshAfter: 60s\n  destination:\n    create: true\n    name: static-secret1\n"})}),"\n",(0,s.jsx)(t.h5,{id:"kv-version-2-secret-example",children:"KV version 2 secret example"}),"\n",(0,s.jsxs)(t.p,{children:["Set the KV secrets engine (",(0,s.jsx)(t.code,{children:"kvv2"}),") mount path with the ",(0,s.jsx)(t.code,{children:"spec.mount"})," parameter of\nyour ",(0,s.jsx)(t.code,{children:"VaultStaticSecret"})," custom resource. For more advanced KV secrets engine\nversion 2 configuration options, consult the\n",(0,s.jsx)(t.a,{href:"/docs/secrets/kv/kv-v2#setup",children:"KV Secrets Engine - Version 2 - Setup"}),"\nguide."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, to send requests to ",(0,s.jsx)(t.code,{children:"http://127.0.0.1:8200/v1/kvv2/eng/apikey/google"}),"\nto retrieve secrets:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultStaticSecret\nmetadata:\n  namespace: vso-example\n  name: vault-static-secret-v2\nspec:\n  vaultAuthRef: vault-auth\n  mount: kvv2\n  type: kv-v2\n  path: eng/apikey/google\n  version: 2\n  refreshAfter: 60s\n  destination:\n    create: true\n    name: static-secret2\n"})}),"\n",(0,s.jsx)(t.h3,{id:"vaultpkisecret-custom-resource",children:"VaultPKISecret custom resource"}),"\n",(0,s.jsxs)(t.p,{children:["Provides the configuration necessary for the Operator to synchronize a single Vault ",(0,s.jsx)(t.em,{children:"PKI"})," Secret to a single Kubernetes Secret.",(0,s.jsx)("br",{}),"\nSupported secrets engines: ",(0,s.jsx)(t.a,{href:"/docs/secrets/pki",children:"pki"})]}),"\n",(0,s.jsxs)(t.p,{children:["The PKI secrets engine's mount path is specified under ",(0,s.jsx)(t.code,{children:"spec.mount"})," of ",(0,s.jsx)(t.code,{children:"VaultPKISecret"})," custom resource. Please consult ",(0,s.jsx)(t.a,{href:"/docs/secrets/pki/setup",children:"PKI Secrets Engine - Setup and Usage"})," for configuring PKI secrets engine. The following results in a request to ",(0,s.jsx)(t.code,{children:"http://127.0.0.1:8200/v1/pki/issue/default"})," to generate TLS certificates."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultPKISecret\nmetadata:\n  namespace: vso-example\n  name: vault-pki\nspec:\n  vaultAuthRef: vault-auth\n  mount: pki\n  role: default\n  commonName: example.com\n  format: pem\n  expiryOffset: 1s\n  ttl: 60s\n  namespace: tenant-1\n  destination:\n    create: true\n    name: pki1\n"})}),"\n",(0,s.jsx)(t.h3,{id:"vaultdynamicsecret-custom-resource",children:"VaultDynamicSecret custom resource"}),"\n",(0,s.jsxs)(t.p,{children:["Provides the configuration necessary for the Operator to synchronize a single Vault ",(0,s.jsx)(t.em,{children:"dynamic"})," Secret to a single Kubernetes Secret.",(0,s.jsx)("br",{}),"\nSupported secrets engines ",(0,s.jsx)(t.em,{children:"non-exhaustive"}),": ",(0,s.jsx)(t.a,{href:"/docs/secrets/databases",children:"databases"}),", ",(0,s.jsx)(t.a,{href:"/docs/secrets/aws",children:"aws"}),",\n",(0,s.jsx)(t.a,{href:"/docs/secrets/azure",children:"azure"}),", ",(0,s.jsx)(t.a,{href:"/docs/secrets/gcp",children:"gcp"}),", ..."]}),"\n",(0,s.jsx)(t.h5,{id:"database-secret-example",children:"Database secret example"}),"\n",(0,s.jsxs)(t.p,{children:["Set the database secret engine mount path (",(0,s.jsx)(t.code,{children:"db"}),") with the ",(0,s.jsx)(t.code,{children:"spec.mount"})," of your\n",(0,s.jsx)(t.code,{children:"VaultDynamicSecret"})," custom resource. For more advanced database secrets engine\nconfiguration options, consult the\n",(0,s.jsx)(t.a,{href:"/docs/secrets/databases#setup",children:"Database Secrets Engine - Setup"})," guide."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, to send requests to\n",(0,s.jsx)(t.code,{children:"http://127.0.0.1:8200/v1/db/creds/my-postgresql-role"})," to generate a new\ncredential:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultDynamicSecret\nmetadata:\n  namespace: vso-example\n  name: vault-dynamic-secret-db\nspec:\n  vaultAuthRef: vault-auth\n  mount: db\n  path: creds/my-postgresql-role\n  destination:\n    create: true\n    name: dynamic-db\n"})}),"\n",(0,s.jsx)(t.h5,{id:"aws-secret-example",children:"AWS secret example"}),"\n",(0,s.jsxs)(t.p,{children:["Set the AWS secrets engine mount path (",(0,s.jsx)(t.code,{children:"aws"}),") with the ",(0,s.jsx)(t.code,{children:"spec.mount"})," parameter of\nyour ",(0,s.jsx)(t.code,{children:"VaultDynamicSecret"})," custom resource. For more advanced AWS secrets engine\nconfiguration options, consult the\n",(0,s.jsx)(t.a,{href:"/docs/secrets/aws#setup",children:"AWS Secrets Engine - Setup"})," guide."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, to send requests to ",(0,s.jsx)(t.code,{children:"http://127.0.0.1:8200/v1/aws/creds/my-iam-role"}),"\nto generate a new IAM credential:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultDynamicSecret\nmetadata:\n  namespace: vso-example\n  name: vault-dynamic-secret-aws-iam\nspec:\n  vaultAuthRef: vault-auth\n  mount: aws\n  path: creds/my-iam-role\n  destination:\n    create: true\n    name: dynamic-aws-iam\n"})}),"\n",(0,s.jsxs)(t.p,{children:["To send requests to ",(0,s.jsx)(t.code,{children:"http://127.0.0.1:8200/v1/aws/sts/my-sts-role"})," to generate a new STS credential:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultDynamicSecret\nmetadata:\n  namespace: vso-example\n  name: vault-dynamic-secret-aws-sts\nspec:\n  vaultAuthRef: vault-auth\n  mount: aws\n  path: sts/my-sts-role\n  destination:\n    create: true\n    name: dynamic-aws-sts\n"})}),"\n",(0,s.jsx)(t.h5,{id:"hcp-vault-secrets-example",children:"HCP Vault Secrets Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: secrets.hashicorp.com/v1beta1\nkind: VaultDynamicSecret\nmetadata:\n  namespace: vso-example\n  name: vault-dynamic-secret-aws-iam-role\nspec:\n  vaultAuthRef: vault-auth\n  mount: aws\n  path: creds/my-iam-role\n  destination:\n    create: true\n    name: dynamic-aws-iam-role\n"})}),"\n",(0,s.jsxs)(t.p,{children:["For more details on any of the custom resources mentioned here, please see the\n",(0,s.jsx)(t.a,{href:"/docs/platform/k8s/vso/api-reference",children:"api-reference"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"tutorial",children:"Tutorial"}),"\n",(0,s.jsxs)(t.p,{children:["Refer to the ",(0,s.jsx)(t.a,{href:"/tutorials/kubernetes/vault-secrets-operator",children:"Vault Secrets Operator on\nKubernetes"})," tutorial to\nlearn the end-to-end workflow using the Vault Secrets Operator."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(96540);const r={},a=s.createContext(r);function c(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);