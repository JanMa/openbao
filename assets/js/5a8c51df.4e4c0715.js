"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6402],{36146:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=i(74848),s=i(28453);const r={sidebar_label:"Glossary",description:"OpenBao Glossary."},a="Glossary",o={id:"glossary",title:"Glossary",description:"OpenBao Glossary.",source:"@site/content/docs/glossary.mdx",sourceDirName:".",slug:"/glossary",permalink:"/openbao/docs/glossary",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/glossary.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Glossary",description:"OpenBao Glossary."},sidebar:"docs",previous:{title:"FAQ",permalink:"/openbao/docs/auth/login-mfa/faq"}},l={},c=[{value:"Audit device",id:"audit-device",level:3},{value:"Auth method",id:"auth-method",level:3},{value:"Barrier",id:"barrier",level:3},{value:"Client token",id:"client-token",level:3},{value:"Plugin",id:"plugin",level:3},{value:"Built-in plugin",id:"built-in-plugin",level:4},{value:"External plugin",id:"external-plugin",level:4},{value:"External multiplexed plugin",id:"external-multiplexed-plugin",level:4},{value:"Secret",id:"secret",level:3},{value:"Secrets engine",id:"secrets-engine",level:3},{value:"Server",id:"server",level:3},{value:"Storage backend",id:"storage-backend",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"glossary",children:"Glossary"}),"\n",(0,t.jsx)(n.p,{children:"This page collects brief definitions of some of the technical terms used in the\ndocumentation for OpenBao."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#audit-device",children:"Audit Device"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#auth-method",children:"Auth Method"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#barrier",children:"Barrier"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#client-token",children:"Client Token"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#plugin",children:"Plugin"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#secret",children:"Secret"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#secrets-engine",children:"Secrets Engine"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#server",children:"Server"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#storage-backend",children:"Storage Backend"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"audit-device",children:"Audit device"}),"\n",(0,t.jsx)(n.p,{children:"An audit device is responsible for managing audit logs.\nEvery request to OpenBao and response from OpenBao goes through the configured\naudit devices. This provides a simple way to integrate OpenBao with multiple\naudit logging destinations of different types."}),"\n",(0,t.jsx)(n.h3,{id:"auth-method",children:"Auth method"}),"\n",(0,t.jsxs)(n.p,{children:["An auth method is used to authenticate users or applications\nwhich are connecting to OpenBao. Once authenticated, the auth method returns the\nlist of applicable policies which should be applied. OpenBao takes an\nauthenticated user and returns a client token that can be used for future\nrequests. As an example, the ",(0,t.jsx)(n.code,{children:"userpass"})," auth method uses a username and\npassword to authenticate the user. Alternatively, the ",(0,t.jsx)(n.code,{children:"github"})," auth method\nallows users to authenticate via GitHub."]}),"\n",(0,t.jsx)(n.h3,{id:"barrier",children:"Barrier"}),"\n",(0,t.jsx)(n.p,{children:'Almost everything OpenBao writes to storage is encrypted using the keyring, which is protected by the seal. We refer to this practice as "the barrier". There are a few exceptions to the rule, for example, the seal configuration is stored in an unencrypted file since it\'s needed to unseal the barrier, and the keyring is encrypted using the root key, while the root key is encrypted using the seal.'}),"\n",(0,t.jsx)(n.h3,{id:"client-token",children:"Client token"}),"\n",(0,t.jsx)(n.p,{children:'A client token (aka "OpenBao Token") is conceptually\nsimilar to a session cookie on a web site. Once a user authenticates, OpenBao\nreturns a client token which is used for future requests. The token is used by\nOpenBao to verify the identity of the client and to enforce the applicable ACL\npolicies. This token is passed via HTTP headers.'}),"\n",(0,t.jsx)(n.h3,{id:"plugin",children:"Plugin"}),"\n",(0,t.jsxs)(n.p,{children:["Plugins are a feature of OpenBao that can be enabled, disabled, and customized to\nsome degree. All OpenBao ",(0,t.jsx)(n.a,{href:"/docs/auth",children:"auth methods"})," and ",(0,t.jsx)(n.a,{href:"/docs/secrets",children:"secrets engines"}),"\nare considered plugins."]}),"\n",(0,t.jsx)(n.h4,{id:"built-in-plugin",children:"Built-in plugin"}),"\n",(0,t.jsx)(n.p,{children:"Built-in plugins are shipped with OpenBao, often for commonly used\nimplementations, and require no additional operator intervention to run.\nBuilt-in plugins are just like any other backend code inside OpenBao."}),"\n",(0,t.jsx)(n.h4,{id:"external-plugin",children:"External plugin"}),"\n",(0,t.jsx)(n.p,{children:"External plugins are not shipped with OpenBao and require additional operator\nintervention to run. OpenBao's external plugins are completely separate,\nstandalone applications that OpenBao executes and communicates with over RPC.\nEach time an OpenBao secret engine or auth method is mounted, a new process is\nspawned."}),"\n",(0,t.jsx)(n.h4,{id:"external-multiplexed-plugin",children:"External multiplexed plugin"}),"\n",(0,t.jsxs)(n.p,{children:["An external plugin may make use of ",(0,t.jsx)(n.a,{href:"/docs/plugins/plugin-architecture#plugin-multiplexing",children:"plugin multiplexing"}),".\nA multiplexed plugin allows a single plugin process to be used for multiple\nmounts of the same type."]}),"\n",(0,t.jsx)(n.h3,{id:"secret",children:"Secret"}),"\n",(0,t.jsx)(n.p,{children:"A secret is the term for anything returned by OpenBao which\ncontains confidential or cryptographic material. Not everything returned by\nOpenBao is a secret, for example system configuration, status information, or\npolicies are not considered secrets. Dynamic secrets always have an associated lease, and static secrets do not.\nThis means clients cannot assume that the dynamic secret contents can be used\nindefinitely. OpenBao will revoke a dynamic secret at the end of the lease, and an\noperator may intervene to revoke the Dynamic Secret before the lease is over. This\ncontract between OpenBao and its clients is critical, as it allows for changes\nin keys and policies without manual intervention."}),"\n",(0,t.jsx)(n.h3,{id:"secrets-engine",children:"Secrets engine"}),"\n",(0,t.jsx)(n.p,{children:'A secrets engine is responsible for managing secrets.\nSimple secrets engines, such as the "kv" secrets engine, return the same\nsecret when queried. Some secrets engines support using policies to\ndynamically generate a secret each time they are queried. This allows for\nunique secrets to be used which allows OpenBao to do fine-grained revocation and\npolicy updates. As an example, a MySQL secrets engine could be configured with\na "web" policy. When the "web" secret is read, a new MySQL user/password pair\nwill be generated with a limited set of privileges for the web server.'}),"\n",(0,t.jsx)(n.h3,{id:"server",children:"Server"}),"\n",(0,t.jsx)(n.p,{children:"OpenBao depends on a long-running instance which operates as a\nserver. The OpenBao server provides an API which clients interact with and\nmanages the interaction between all the secrets engines, ACL enforcement, and\nsecret lease revocation. Having a server based architecture decouples clients\nfrom the security keys and policies, enables centralized audit logging, and\nsimplifies administration for operators."}),"\n",(0,t.jsx)(n.h3,{id:"storage-backend",children:"Storage backend"}),"\n",(0,t.jsxs)(n.p,{children:["A storage backend is responsible for durable storage of\n",(0,t.jsx)(n.em,{children:"encrypted"})," data. Backends are not trusted by OpenBao and are only expected to\nprovide durability. The storage backend is configured when starting the OpenBao\nserver."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);