"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7032],{54311:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var l=s(74848),t=s(28453);const r={sidebar_label:"LDAP",description:"This is the API documentation for the OpenBao LDAP auth method."},i="LDAP auth method (API)",d={id:"auth/ldap",title:"LDAP auth method (API)",description:"This is the API documentation for the OpenBao LDAP auth method.",source:"@site/content/api-docs/auth/ldap.mdx",sourceDirName:"auth",slug:"/auth/ldap",permalink:"/openbao/api-docs/auth/ldap",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/api-docs/auth/ldap.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"LDAP",description:"This is the API documentation for the OpenBao LDAP auth method."},sidebar:"api",previous:{title:"Kubernetes auth method (API)",permalink:"/openbao/api-docs/auth/kubernetes"},next:{title:"RADIUS",permalink:"/openbao/api-docs/auth/radius"}},a={},c=[{value:"Configure LDAP",id:"configure-ldap",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Sample request",id:"sample-request",level:3},{value:"Sample payload",id:"sample-payload",level:3},{value:"Read LDAP configuration",id:"read-ldap-configuration",level:2},{value:"Sample request",id:"sample-request-1",level:3},{value:"Sample response",id:"sample-response",level:3},{value:"List LDAP groups",id:"list-ldap-groups",level:2},{value:"Sample request",id:"sample-request-2",level:3},{value:"Sample response",id:"sample-response-1",level:3},{value:"Read LDAP group",id:"read-ldap-group",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Sample request",id:"sample-request-3",level:3},{value:"Sample response",id:"sample-response-2",level:3},{value:"Create/Update LDAP group",id:"createupdate-ldap-group",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Sample payload",id:"sample-payload-1",level:3},{value:"Sample request",id:"sample-request-4",level:3},{value:"Delete LDAP group",id:"delete-ldap-group",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Sample request",id:"sample-request-5",level:3},{value:"List LDAP users",id:"list-ldap-users",level:2},{value:"Sample request",id:"sample-request-6",level:3},{value:"Sample response",id:"sample-response-3",level:3},{value:"Read LDAP user",id:"read-ldap-user",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"Sample request",id:"sample-request-7",level:3},{value:"Sample response",id:"sample-response-4",level:3},{value:"Create/Update LDAP user",id:"createupdate-ldap-user",level:2},{value:"Parameters",id:"parameters-5",level:3},{value:"Sample payload",id:"sample-payload-2",level:3},{value:"Sample request",id:"sample-request-8",level:3},{value:"Delete LDAP user",id:"delete-ldap-user",level:2},{value:"Parameters",id:"parameters-6",level:3},{value:"Sample request",id:"sample-request-9",level:3},{value:"Login with LDAP user",id:"login-with-ldap-user",level:2},{value:"Parameters",id:"parameters-7",level:3},{value:"Sample payload",id:"sample-payload-3",level:3},{value:"Sample request",id:"sample-request-10",level:3},{value:"Sample response",id:"sample-response-5",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"ldap-auth-method-api",children:"LDAP auth method (API)"}),"\n",(0,l.jsxs)(n.p,{children:["~> ",(0,l.jsx)(n.strong,{children:"Note"}),": This engine can use external X.509 certificates as part of TLS or signature validation.\nVerifying signatures against X.509 certificates that use SHA-1 is deprecated and is no longer\nusable without a workaround. See the\n",(0,l.jsx)(n.a,{href:"/docs/deprecation/faq#q-what-is-the-impact-of-removing-support-for-x-509-certificates-with-signatures-that-use-sha-1",children:"deprecation FAQ"}),"\nfor more information."]}),"\n",(0,l.jsxs)(n.p,{children:["This is the API documentation for the OpenBao LDAP auth method. For\ngeneral information about the usage and operation of the LDAP method, please\nsee the ",(0,l.jsx)(n.a,{href:"/docs/auth/ldap",children:"OpenBao LDAP method documentation"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["This documentation assumes the LDAP method is mounted at the ",(0,l.jsx)(n.code,{children:"/auth/ldap"}),"\npath in OpenBao. Since it is possible to enable auth methods at any location,\nplease update your API calls accordingly."]}),"\n",(0,l.jsx)(n.h2,{id:"configure-ldap",children:"Configure LDAP"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint configures the LDAP auth method."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"POST"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/config"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"url"})," ",(0,l.jsx)(n.code,{children:"(string: ldap://127.0.0.1)"})," \u2013 The LDAP server to connect to. Examples:\n",(0,l.jsx)(n.code,{children:"ldap://ldap.myorg.com"}),", ",(0,l.jsx)(n.code,{children:"ldaps://ldap.myorg.com:636"}),". Multiple URLs can be\nspecified with commas, e.g. ",(0,l.jsx)(n.code,{children:"ldap://ldap.myorg.com,ldap://ldap2.myorg.com"}),";\nthese will be tried in-order."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"case_sensitive_names"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," \u2013 If set, user and group names\nassigned to policies within the backend will be case sensitive. Otherwise,\nnames will be normalized to lower case. Case will still be preserved when\nsending the username to the LDAP server at login time; this is only for\nmatching local user/group definitions."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"connection_timeout"})," ",(0,l.jsx)(n.code,{children:'(integer: 30 or string: "30s")'})," - Timeout, in seconds,\nwhen attempting to connect to the LDAP server before trying the next URL in\nthe configuration."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"request_timeout"})," ",(0,l.jsx)(n.code,{children:'(integer: 90 or string: "90s")'})," - Timeout, in seconds, for\nthe connection when making requests against the server before returning back\nan error."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"starttls"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," \u2013 If true, issues a ",(0,l.jsx)(n.code,{children:"StartTLS"})," command after\nestablishing an unencrypted connection."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tls_min_version"})," ",(0,l.jsx)(n.code,{children:"(string: tls12)"})," \u2013 Minimum TLS version to use. Accepted\nvalues are ",(0,l.jsx)(n.code,{children:"tls10"}),", ",(0,l.jsx)(n.code,{children:"tls11"}),", ",(0,l.jsx)(n.code,{children:"tls12"})," or ",(0,l.jsx)(n.code,{children:"tls13"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tls_max_version"})," ",(0,l.jsx)(n.code,{children:"(string: tls12)"})," \u2013 Maximum TLS version to use. Accepted\nvalues are ",(0,l.jsx)(n.code,{children:"tls10"}),", ",(0,l.jsx)(n.code,{children:"tls11"}),", ",(0,l.jsx)(n.code,{children:"tls12"})," or ",(0,l.jsx)(n.code,{children:"tls13"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"insecure_tls"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," \u2013 If true, skips LDAP server SSL certificate\nverification - insecure, use with caution!"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"certificate"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 CA certificate to use when verifying LDAP server\ncertificate, must be x509 PEM encoded."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"client_tls_cert"})," ",(0,l.jsx)(n.code,{children:'(string "")'})," - Client certificate to provide to the LDAP\nserver, must be x509 PEM encoded (optional)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"client_tls_key"})," ",(0,l.jsx)(n.code,{children:'(string "")'})," - Client certificate key to provide to the LDAP\nserver, must be x509 PEM encoded (optional)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"binddn"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Distinguished name of object to bind when performing\nuser search. Example: ",(0,l.jsx)(n.code,{children:"cn=openbao,ou=Users,dc=example,dc=com"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"bindpass"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Password to use along with ",(0,l.jsx)(n.code,{children:"binddn"})," when performing\nuser search."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"userdn"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Base DN under which to perform user search. Example:\n",(0,l.jsx)(n.code,{children:"ou=Users,dc=example,dc=com"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"userattr"})," ",(0,l.jsx)(n.code,{children:'(string: "cn")'})," \u2013 Attribute on user attribute object matching the\nusername passed when authenticating. Examples: ",(0,l.jsx)(n.code,{children:"sAMAccountName"}),", ",(0,l.jsx)(n.code,{children:"cn"}),", ",(0,l.jsx)(n.code,{children:"uid"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"discoverdn"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," \u2013 Use anonymous bind to discover the bind DN of a\nuser."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"deny_null_bind"})," ",(0,l.jsx)(n.code,{children:"(bool: true)"})," \u2013 This option prevents users from bypassing\nauthentication when providing an empty password."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"upndomain"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 The userPrincipalDomain used to construct the UPN\nstring for the authenticating user. The constructed UPN will appear as\n",(0,l.jsx)(n.code,{children:"[username]@UPNDomain"}),". Example: ",(0,l.jsx)(n.code,{children:"example.com"}),", which will cause openbao to bind\nas ",(0,l.jsx)(n.code,{children:"username@example.com"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"userfilter"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 An optional LDAP user search filter.\nThe template can access the following context variables: UserAttr, Username.\nThe default is ",(0,l.jsx)(n.code,{children:"({{.UserAttr}}={{.Username}})"}),", or ",(0,l.jsx)(n.code,{children:"({{.UserAttr}}={{.Username@.upndomain}})"}),"\nif ",(0,l.jsx)(n.code,{children:"upndomain"})," is set."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"anonymous_group_search"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," - Use anonymous binds when performing\nLDAP group searches (note: even when ",(0,l.jsx)(n.code,{children:"true"}),", the initial credentials will still\nbe used for the initial connection test)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"groupfilter"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Go template used when constructing the group\nmembership query. The template can access the following context variables:\n[",(0,l.jsx)(n.code,{children:"UserDN"}),", ",(0,l.jsx)(n.code,{children:"Username"}),"]. The default is\n",(0,l.jsx)(n.code,{children:"(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"}),",\nwhich is compatible with several common directory schemas. To support\nnested group resolution for Active Directory, instead use the following\nquery: ",(0,l.jsx)(n.code,{children:"(&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}}))"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"groupdn"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 LDAP search base to use for group membership\nsearch. This can be the root containing either groups or users. Example:\n",(0,l.jsx)(n.code,{children:"ou=Groups,dc=example,dc=com"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"groupattr"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 LDAP attribute to follow on objects returned by\n",(0,l.jsx)(n.code,{children:"groupfilter"})," in order to enumerate user group membership. Examples: for\ngroupfilter queries returning ",(0,l.jsx)(n.em,{children:"group"})," objects, use: ",(0,l.jsx)(n.code,{children:"cn"}),". For queries\nreturning ",(0,l.jsx)(n.em,{children:"user"})," objects, use: ",(0,l.jsx)(n.code,{children:"memberOf"}),". The default is ",(0,l.jsx)(n.code,{children:"cn"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"username_as_alias"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," - If set to true, forces the auth method\nto use the username passed by the user as the alias name."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"dereference_aliases"})," ",(0,l.jsx)(n.code,{children:"(string: never)"})," - When aliases should be dereferenced\non search operations. Accepted values are 'never', 'finding', 'searching',\n'always'. Defaults to 'never'."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"max_page_size"})," ",(0,l.jsx)(n.code,{children:"(int: 0)"})," - If set to a value greater than 0, the LDAP\nbackend will use the LDAP server's paged search control to request pages of\nup to the given size. This can be used to avoid hitting the LDAP server's\nmaximum result size limit. Otherwise, the LDAP backend will not use the\npaged search control."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"use_token_groups"})," ",(0,l.jsx)(n.code,{children:"(bool: true)"})," - (Optional) Use the Active Directory tokenGroups\nconstructed attribute of the user to find the group memberships."]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_ttl"})," ",(0,l.jsx)(n.code,{children:'(integer: 0 or string: "")'})," - The incremental lifetime for\ngenerated tokens. This current value of this will be referenced at renewal\ntime."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_max_ttl"})," ",(0,l.jsx)(n.code,{children:'(integer: 0 or string: "")'})," - The maximum lifetime for\ngenerated tokens. This current value of this will be referenced at renewal\ntime."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_policies"})," ",(0,l.jsx)(n.code,{children:'(array: [] or comma-delimited string: "")'})," - List of\ntoken policies to encode onto generated tokens. Depending on the auth method, this\nlist may be supplemented by user/group/other values."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"policies"})," ",(0,l.jsx)(n.code,{children:'(array: [] or comma-delimited string: "")'})," - DEPRECATED: Please\nuse the ",(0,l.jsx)(n.code,{children:"token_policies"})," parameter instead. List of token policies to encode\nonto generated tokens. Depending on the auth method, this list may be\nsupplemented by user/group/other values."]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_bound_cidrs"})," ",(0,l.jsx)(n.code,{children:'(array: [] or comma-delimited string: "")'})," - List of\nCIDR blocks; if set, specifies blocks of IP addresses which can authenticate\nsuccessfully, and ties the resulting token to these blocks as well."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_explicit_max_ttl"})," ",(0,l.jsx)(n.code,{children:'(integer: 0 or string: "")'})," - If set, will encode\nan ",(0,l.jsx)(n.a,{href:"/docs/concepts/tokens#token-time-to-live-periodic-tokens-and-explicit-max-ttls",children:"explicit max\nTTL"}),"\nonto the token. This is a hard cap even if ",(0,l.jsx)(n.code,{children:"token_ttl"})," and ",(0,l.jsx)(n.code,{children:"token_max_ttl"}),"\nwould otherwise allow a renewal."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_no_default_policy"})," ",(0,l.jsx)(n.code,{children:"(bool: false)"})," - If set, the ",(0,l.jsx)(n.code,{children:"default"})," policy will\nnot be set on generated tokens; otherwise it will be added to the policies set\nin ",(0,l.jsx)(n.code,{children:"token_policies"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_num_uses"})," ",(0,l.jsx)(n.code,{children:"(integer: 0)"})," - The maximum number of times a generated\ntoken may be used (within its lifetime); 0 means unlimited.\nIf you require the token to have the ability to create child tokens,\nyou will need to set this value to 0."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_period"})," ",(0,l.jsx)(n.code,{children:'(integer: 0 or string: "")'})," - The maximum allowed ",(0,l.jsx)(n.a,{href:"/docs/concepts/tokens#token-time-to-live-periodic-tokens-and-explicit-max-ttls",children:"period"})," value when a periodic token is requested from this role."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"token_type"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," - The type of token that should be generated. Can\nbe ",(0,l.jsx)(n.code,{children:"service"}),", ",(0,l.jsx)(n.code,{children:"batch"}),", or ",(0,l.jsx)(n.code,{children:"default"})," to use the mount's tuned default (which\nunless changed will be ",(0,l.jsx)(n.code,{children:"service"})," tokens). For token store roles, there are two\nadditional possibilities: ",(0,l.jsx)(n.code,{children:"default-service"})," and ",(0,l.jsx)(n.code,{children:"default-batch"})," which specify\nthe type to return unless the client requests a different type at generation\ntime."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["~> When specifying a ",(0,l.jsx)(n.code,{children:"userfilter"}),", either the templated value ",(0,l.jsx)(n.code,{children:"{{.UserAttr}}"})," or\nthe literal value that matches ",(0,l.jsx)(n.code,{children:"userattr"})," should be present in the filter to\nensure that the search returns a unique result that takes ",(0,l.jsx)(n.code,{children:"userattr"})," into\nconsideration for entity alias mapping purposes and avoid possible collisions on login."]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/auth/ldap/config\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-payload",children:"Sample payload"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "binddn": "cn=openbao,ou=Users,dc=example,dc=com",\n  "deny_null_bind": true,\n  "discoverdn": false,\n  "groupattr": "cn",\n  "groupdn": "ou=Groups,dc=example,dc=com",\n  "groupfilter": "(\\u0026(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}}))",\n  "insecure_tls": false,\n  "starttls": false,\n  "tls_max_version": "tls12",\n  "tls_min_version": "tls12",\n  "url": "ldaps://ldap.myorg.com:636",\n  "username_as_alias": false,\n  "userattr": "samaccountname",\n  "userdn": "ou=Users,dc=example,dc=com",\n  "max_page_size": 1000\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"read-ldap-configuration",children:"Read LDAP configuration"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint retrieves the LDAP configuration for the auth method."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"GET"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/config"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-1",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    http://127.0.0.1:8200/v1/auth/ldap/config\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-response",children:"Sample response"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "auth": null,\n  "warnings": null,\n  "wrap_info": null,\n  "data": {\n    "binddn": "cn=openbao,ou=Users,dc=example,dc=com",\n    "bindpass": "",\n    "certificate": "",\n    "deny_null_bind": true,\n    "discoverdn": false,\n    "groupattr": "cn",\n    "groupdn": "ou=Groups,dc=example,dc=com",\n    "groupfilter": "(\\u0026(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}}))",\n    "insecure_tls": false,\n    "starttls": false,\n    "tls_max_version": "tls12",\n    "tls_min_version": "tls12",\n    "upndomain": "",\n    "url": "ldaps://ldap.myorg.com:636",\n    "username_as_alias": false,\n    "userattr": "samaccountname",\n    "userdn": "ou=Users,dc=example,dc=com"\n  },\n  "lease_duration": 0,\n  "renewable": false,\n  "lease_id": ""\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"list-ldap-groups",children:"List LDAP groups"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint returns a list of existing groups in the method."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"LIST"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/groups"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-2",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request LIST \\\n    http://127.0.0.1:8200/v1/auth/ldap/groups\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-response-1",children:"Sample response"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "auth": null,\n  "warnings": null,\n  "wrap_info": null,\n  "data": {\n    "keys": ["scientists", "engineers"]\n  },\n  "lease_duration": 0,\n  "renewable": false,\n  "lease_id": ""\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"read-ldap-group",children:"Read LDAP group"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint returns the policies associated with a LDAP group."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"GET"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/groups/:name"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The name of the LDAP group"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-3",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    http://127.0.0.1:8200/v1/auth/ldap/groups/admins\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-response-2",children:"Sample response"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "policies": [\n      "admin",\n      "default"\n    ]\n  },\n  "renewable": false,\n  "lease_id": ""\n  "lease_duration": 0,\n  "warnings": null\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"createupdate-ldap-group",children:"Create/Update LDAP group"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint creates or updates LDAP group policies."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"POST"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/groups/:name"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The name of the LDAP group"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"policies"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Comma-separated list of policies associated to the\ngroup."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-payload-1",children:"Sample payload"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "policies": "admin,default"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-4",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/auth/ldap/groups/admins\n'})}),"\n",(0,l.jsx)(n.h2,{id:"delete-ldap-group",children:"Delete LDAP group"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint deletes the LDAP group and policy association."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"DELETE"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/groups/:name"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The name of the LDAP group"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-5",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request DELETE \\\n    http://127.0.0.1:8200/v1/auth/ldap/groups/admins\n'})}),"\n",(0,l.jsx)(n.h2,{id:"list-ldap-users",children:"List LDAP users"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint returns a list of existing users in the method."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"LIST"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/users"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-6",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request LIST \\\n    http://127.0.0.1:8200/v1/auth/ldap/users\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-response-3",children:"Sample response"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "auth": null,\n  "warnings": null,\n  "wrap_info": null,\n  "data": {\n    "keys": ["mitchellh", "armon"]\n  },\n  "lease_duration": 0,\n  "renewable": false,\n  "lease_id": ""\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"read-ldap-user",children:"Read LDAP user"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint returns the policies associated with a LDAP user."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"GET"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/users/:username"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"username"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The username of the LDAP user"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-7",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    http://127.0.0.1:8200/v1/auth/ldap/users/mitchellh\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-response-4",children:"Sample response"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "policies": [\n      "admin",\n      "default"\n    ],\n    "groups": ""\n  },\n  "renewable": false,\n  "lease_id": ""\n  "lease_duration": 0,\n  "warnings": null\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"createupdate-ldap-user",children:"Create/Update LDAP user"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint creates or updates LDAP users policies and group associations."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"POST"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/users/:username"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-5",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"username"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The username of the LDAP user"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"policies"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Comma-separated list of policies associated to the\nuser."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"groups"})," ",(0,l.jsx)(n.code,{children:'(string: "")'})," \u2013 Comma-separated list of groups associated to the\nuser."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-payload-2",children:"Sample payload"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "policies": "admin,default"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-8",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/auth/ldap/users/mitchellh\n'})}),"\n",(0,l.jsx)(n.h2,{id:"delete-ldap-user",children:"Delete LDAP user"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint deletes the LDAP user and policy association."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"DELETE"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/users/:username"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-6",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"username"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The username of the LDAP user"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-9",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request DELETE \\\n    http://127.0.0.1:8200/v1/auth/ldap/users/mitchellh\n'})}),"\n",(0,l.jsx)(n.h2,{id:"login-with-ldap-user",children:"Login with LDAP user"}),"\n",(0,l.jsx)(n.p,{children:"This endpoint allows you to log in with LDAP credentials"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Method"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"POST"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"/auth/ldap/login/:username"})})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"parameters-7",children:"Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"username"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The username of the LDAP user"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"password"})," ",(0,l.jsx)(n.code,{children:"(string: <required>)"})," \u2013 The password for the LDAP user"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sample-payload-3",children:"Sample payload"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "password": "MyPassword1"\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sample-request-10",children:"Sample request"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell-session",children:"$ curl \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/auth/ldap/login/mitchellh\n"})}),"\n",(0,l.jsx)(n.h3,{id:"sample-response-5",children:"Sample response"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "lease_id": "",\n  "renewable": false,\n  "lease_duration": 0,\n  "data": null,\n  "auth": {\n    "client_token": "c4f280f6-fdb2-18eb-89d3-589e2e834cdb",\n    "policies": ["admins", "default"],\n    "metadata": {\n      "username": "mitchellh"\n    },\n    "lease_duration": 0,\n    "renewable": false\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var l=s(96540);const t={},r=l.createContext(t);function i(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);