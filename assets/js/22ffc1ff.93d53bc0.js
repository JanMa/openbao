"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5931],{28599:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(74848),o=t(28453);const a={sidebar_label:"Overview",description:"OpenBao Agent and OpenBao Proxy's Auto-Auth functionality allows easy and automatic\nauthentication to OpenBao in a variety of environments."},s="OpenBao Agent and OpenBao Proxy Auto-Auth",r={id:"agent-and-proxy/autoauth/index",title:"OpenBao Agent and OpenBao Proxy Auto-Auth",description:"OpenBao Agent and OpenBao Proxy's Auto-Auth functionality allows easy and automatic\nauthentication to OpenBao in a variety of environments.",source:"@site/content/docs/agent-and-proxy/autoauth/index.mdx",sourceDirName:"agent-and-proxy/autoauth",slug:"/agent-and-proxy/autoauth/",permalink:"/openbao/docs/agent-and-proxy/autoauth/",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/docs/agent-and-proxy/autoauth/index.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Overview",description:"OpenBao Agent and OpenBao Proxy's Auto-Auth functionality allows easy and automatic\nauthentication to OpenBao in a variety of environments."},sidebar:"docs",previous:{title:"OpenBao agent and OpenBao proxy",permalink:"/openbao/docs/agent-and-proxy/"},next:{title:"Overview",permalink:"/openbao/docs/agent-and-proxy/autoauth/methods/"}},c={},l=[{value:"Functionality",id:"functionality",level:2},{value:"Advanced functionality",id:"advanced-functionality",level:2},{value:"Response-Wrapping tokens",id:"response-wrapping-tokens",level:3},{value:"Encrypting tokens",id:"encrypting-tokens",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Configuration (Method)",id:"configuration-method",level:3},{value:"Configuration (Sinks)",id:"configuration-sinks",level:3},{value:"Auto auth examples",id:"auto-auth-examples",level:3},{value:"Sinks (HCL format)",id:"sinks-hcl-format",level:4},{value:"Sinks (JSON format)",id:"sinks-json-format",level:4}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"openbao-agent-and-openbao-proxy-auto-auth",children:"OpenBao Agent and OpenBao Proxy Auto-Auth"}),"\n",(0,i.jsx)(n.p,{children:"The Auto-Auth functionality of OpenBao Agent and OpenBao Proxy allow for\neasy authentication in a wide variety of environments."}),"\n",(0,i.jsx)(n.h2,{id:"functionality",children:"Functionality"}),"\n",(0,i.jsx)(n.p,{children:"Auto-Auth consists of two parts: a Method, which is the authentication method\nthat should be used in the current environment; and any number of Sinks, which\nare locations where the agent should write a token any time the current token\nvalue has changed."}),"\n",(0,i.jsx)(n.p,{children:"When OpenBao Agent or OpenBao Proxy are started with Auto-Auth enabled, it will attempt to acquire a\nOpenBao token using the configured Method. On failure, it will exponentially back\noff and then retry. On success, unless the auth method is configured to wrap\nthe tokens, it will keep the resulting token renewed until renewal is no longer\nallowed or fails, at which point it will attempt to reauthenticate."}),"\n",(0,i.jsx)(n.p,{children:"Every time an authentication is successful, the token is written to the\nconfigured Sinks, subject to their configuration."}),"\n",(0,i.jsx)(n.h2,{id:"advanced-functionality",children:"Advanced functionality"}),"\n",(0,i.jsxs)(n.p,{children:["Sinks support some advanced features, including the ability for the written\nvalues to be encrypted or\n",(0,i.jsx)(n.a,{href:"/docs/concepts/response-wrapping",children:"response-wrapped"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Both mechanisms can be used concurrently; in this case, the value will be\nresponse-wrapped, then encrypted."}),"\n",(0,i.jsx)(n.h3,{id:"response-wrapping-tokens",children:"Response-Wrapping tokens"}),"\n",(0,i.jsx)(n.p,{children:"There are two ways that tokens can be response-wrapped:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["By the auth method. This allows the end client to introspect the\n",(0,i.jsx)(n.code,{children:"creation_path"})," of the token, helping prevent Man-In-The-Middle (MITM)\nattacks. However, because auto-auth cannot then unwrap the token and rewrap\nit without modifying the ",(0,i.jsx)(n.code,{children:"creation_path"}),", we are not able to renew the\ntoken; it is up to the end client to renew the token. Agent and Proxy both\nstay daemonized in this mode since some auth methods allow for reauthentication\non certain events."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["By any of the token sinks. Because more than one sink can be configured, the\ntoken must be wrapped after it is fetched, rather than wrapped by OpenBao as\nit's being returned. As a result, the ",(0,i.jsx)(n.code,{children:"creation_path"})," will always be\n",(0,i.jsx)(n.code,{children:"sys/wrapping/wrap"}),", and validation of this field cannot be used as\nprotection against MITM attacks. However, this mode allows auto-auth to keep\nthe token renewed for the end client and automatically reauthenticate when\nit expires."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"encrypting-tokens",children:"Encrypting tokens"}),"\n",(0,i.jsx)(n.p,{children:"~> Support for encrypted tokens is experimental; if input/output formats\nchange, we will make every effort to provide backwards compatibility."}),"\n",(0,i.jsx)(n.p,{children:"Tokens can be encrypted, using a Diffie-Hellman exchange to generate an\nephemeral key. In this mechanism, the client receiving the token writes a\ngenerated public key to a file. The sink responsible for writing the token to\nthat client looks for this public key and uses it to compute a shared secret\nkey, which is then used to encrypt the token via AES-GCM. The nonce, encrypted\npayload, and the sink's public key are then written to the output file, where\nthe client can compute the shared secret and decrypt the token value."}),"\n",(0,i.jsx)(n.p,{children:"~> NOTE: Token encryption is not a protection against MITM attacks! The purpose\nof this feature is for forward-secrecy and coverage against bare token values\nbeing persisted. A MITM that can write to the sink's output and/or client\npublic-key input files could attack this exchange. Using TLS to protect the\ntransit of tokens is highly recommended."}),"\n",(0,i.jsx)(n.p,{children:"To help mitigate MITM attacks, additional authenticated data (AAD) can be\nprovided to Agent and Proxy. This data is written as part of the AES-GCM tag and must\nmatch on both Agent and Proxy and the client. This of course means that protecting\nthis AAD becomes important, but it provides another layer for an attacker to\nhave to overcome. For instance, if the attacker has access to the file system\nwhere the token is being written, but not to read configuration or read\nenvironment variables, this AAD can be generated and passed to Agent or Proxy and\nthe client in ways that would be difficult for the attacker to find."}),"\n",(0,i.jsx)(n.p,{children:"When using AAD, it is always a good idea for this to be as fresh as possible;\ngenerate a value and pass it to your client and Agent or Proxy on startup. Additionally,\nAgent and Proxy a Trust On First Use model; after it finds a generated public key,\nit will reuse that public key instead of looking for new values that have been\nwritten."}),"\n",(0,i.jsxs)(n.p,{children:["If writing a client that uses this feature, it will likely be helpful to look\nat the\n",(0,i.jsx)(n.a,{href:"https://github.com/openbao/openbao/blob/main/helper/dhutil/dhutil.go",children:"dhutil"}),"\nlibrary. This shows the expected format of the public key input and envelope\noutput formats."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The top level ",(0,i.jsx)(n.code,{children:"auto_auth"})," block has two configuration entries:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"method"})," ",(0,i.jsx)(n.code,{children:"(object: required)"})," - Configuration for the method"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sinks"})," ",(0,i.jsx)(n.code,{children:"(array of objects: optional)"})," - Configuration for the sinks"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configuration-method",children:"Configuration (Method)"}),"\n",(0,i.jsxs)(n.p,{children:["~> Auto-auth does not support using tokens with a limited number of uses. Auto-auth\ndoes not track the number of uses remaining, and may allow the token to\nexpire before attempting to renew it. For example, if using AppRole auto-auth,\nyou must use 0 (meaning unlimited) as the value for\n",(0,i.jsx)(n.a,{href:"/api-docs/auth/approle#token_num_uses",children:(0,i.jsx)(n.code,{children:"token_num_uses"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["These are common configuration values that live within the ",(0,i.jsx)(n.code,{children:"method"})," block:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"type"})," ",(0,i.jsx)(n.code,{children:"(string: required)"})," - The type of the method to use, e.g. ",(0,i.jsx)(n.code,{children:"jwt"}),",\n",(0,i.jsx)(n.code,{children:"ldap"}),", ",(0,i.jsx)(n.code,{children:"cert"}),", etc. ",(0,i.jsx)(n.em,{children:"Note"}),": when using HCL this can be used as the key for\nthe block, e.g. ",(0,i.jsx)(n.code,{children:'method "jwt" {...}'}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"mount_path"})," ",(0,i.jsx)(n.code,{children:"(string: optional)"})," - The mount path of the method. If not\nspecified, defaults to a value of ",(0,i.jsx)(n.code,{children:"auth/<method type>"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"namespace"})," ",(0,i.jsx)(n.code,{children:"(string: optional)"})," - Namespace in which the mount lives.\nThe order of precedence is: this setting lowest, followed by the\nenvironment variable ",(0,i.jsx)(n.code,{children:"VAULT_NAMESPACE"}),", and then the highest precedence\ncommand-line option ",(0,i.jsx)(n.code,{children:"-namespace"}),".\nIf none of these are specified, defaults to the root namespace.\nNote that because sink response wrapping and templating are also based\non the client created by auto-auth, they use the same namespace."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"wrap_ttl"})," ",(0,i.jsx)(n.code,{children:"(string or integer: optional)"})," - If specified, the written token\nwill be response-wrapped by auto-auth. This is more secure than wrapping by\nsinks, but does not allow the auto-auth to keep the token renewed or\nautomatically reauthenticate when it expires. Rather than a simple string,\nthe written value will be a JSON-encoded\n",(0,i.jsx)(n.a,{href:"https://godoc.org/github.com/openbao/openbao/api#SecretWrapInfo",children:"SecretWrapInfo"}),"\nstructure. Uses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"min_backoff"})," ",(0,i.jsx)(n.code,{children:'(string or integer: "1s")'})," - The minimum backoff time auto-auth\nwill delay before retrying after a failed auth attempt. The backoff will start\nat the configured value and double (with some randomness) after successive\nfailures, capped by ",(0,i.jsx)(n.code,{children:"max_backoff."})," If Agent templating is being used, this\nvalue is also used as the min backoff time for the templating server.\nUses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"max_backoff"})," ",(0,i.jsx)(n.code,{children:'(string or integer: "5m")'})," - The maximum time Agent will delay\nbefore retrying after a failed auth attempt. The backoff will start at\n",(0,i.jsx)(n.code,{children:"min_backoff"})," and double (with some randomness) after successive failures,\ncapped by ",(0,i.jsx)(n.code,{children:"max_backoff."})," If Agent templating is being used, this value is also\nused as the max backoff time for the templating server. ",(0,i.jsx)(n.code,{children:"max_backoff"})," is the\nduration between retries, and ",(0,i.jsx)(n.strong,{children:"not"})," the duration that retries will be\nperformed before giving up. Uses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"exit_on_err"})," ",(0,i.jsx)(n.code,{children:"(bool: false)"})," - When set to true, OpenBao Agent and OpenBao Proxy\nwill exit if any errors occur during authentication. This configurable only affects login\nattempts for new tokens (either initial or expired tokens) and will not exit for errors on\nvalid token renewals."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"config"})," ",(0,i.jsx)(n.code,{children:"(object: required)"})," - Configuration of the method itself. See the\nsidebar for information about each method."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configuration-sinks",children:"Configuration (Sinks)"}),"\n",(0,i.jsx)(n.p,{children:"These configuration values are common to all Sinks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"type"})," ",(0,i.jsx)(n.code,{children:"(string: required)"})," - The type of the method to use, e.g. ",(0,i.jsx)(n.code,{children:"file"}),".\n",(0,i.jsx)(n.em,{children:"Note"}),": when using HCL this can be used as the key for the block, e.g. ",(0,i.jsx)(n.code,{children:'sink "file" {...}'}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"wrap_ttl"})," ",(0,i.jsx)(n.code,{children:"(string or integer: optional)"})," - If specified, the written token\nwill be response-wrapped by the sink. This is less secure than wrapping by\nthe method, but allows auto-auth to keep the token renewed and automatically\nreauthenticate when it expires. Rather than a simple string, the written\nvalue will be a JSON-encoded\n",(0,i.jsx)(n.a,{href:"https://godoc.org/github.com/openbao/openbao/api#SecretWrapInfo",children:"SecretWrapInfo"}),"\nstructure. Uses ",(0,i.jsx)(n.a,{href:"/docs/concepts/duration-format",children:"duration format strings"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dh_type"})," ",(0,i.jsx)(n.code,{children:"(string: optional)"})," - If specified, the type of Diffie-Hellman exchange to\nperform, meaning, which ciphers and/or curves. Currently only ",(0,i.jsx)(n.code,{children:"curve25519"})," is\nsupported."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dh_path"})," ",(0,i.jsx)(n.code,{children:"(string: required if dh_type is set)"})," - The path from which the\nauto-auth should read the client's initial parameters (e.g. curve25519 public\nkey)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"derive_key"})," ",(0,i.jsx)(n.code,{children:"(bool: false)"})," - If specified, the final encryption key is\ncalculated by using HKDF-SHA256 to derive a key from the calculated shared\nsecret and the two public keys for enhanced security. This is recommended\nif backward compatibility isn't a concern."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"aad"})," ",(0,i.jsx)(n.code,{children:"(string: optional)"})," - If specified, additional authenticated data to\nuse with the AES-GCM encryption of the token. Can be any string, including\nserialized data."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"aad_env_var"})," ",(0,i.jsx)(n.code,{children:"(string: optional)"})," - If specified, AAD will be read from the\ngiven environment variable rather than a value in the configuration file."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"config"})," ",(0,i.jsx)(n.code,{children:"(object: required)"})," - Configuration of the sink itself. See the\nsidebar for information about each sink."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"auto-auth-examples",children:"Auto auth examples"}),"\n",(0,i.jsx)(n.p,{children:"Auto-Auth configuration objects take two separate forms when specified in HCL\nand JSON. The following examples are meant to clarify the differences between\nthe two formats."}),"\n",(0,i.jsx)(n.h4,{id:"sinks-hcl-format",children:"Sinks (HCL format)"}),"\n",(0,i.jsxs)(n.p,{children:["The HCL format may define any number of sink objects with an optional wrapping\n",(0,i.jsx)(n.code,{children:"sinks {...}"})," object."]}),"\n",(0,i.jsxs)(n.p,{children:["~> Note: The ",(0,i.jsx)(n.a,{href:"#sinks-json-format",children:"corresponding JSON format"})," ",(0,i.jsx)(n.em,{children:"must"})," specify a\n",(0,i.jsx)(n.code,{children:'"sinks" : [...]'})," array to encapsulate all ",(0,i.jsx)(n.code,{children:"sink"})," JSON objects."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'// Other OpenBao Agent or OpenBao Proxy configuration blocks\n// ...\n\nauto_auth {\n  method {\n    type = "approle"\n\n    config = {\n      role_id_file_path = "/etc/openbao/roleid"\n      secret_id_file_path = "/etc/openbao/secretid"\n    }\n  }\n\n  sinks {\n    sink {\n      type = "file"\n\n      config = {\n        path = "/tmp/file-foo"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The following valid HCL omits the wrapping ",(0,i.jsx)(n.code,{children:"sinks"})," object while specifying\nmultiple sinks."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'// Other OpenBao Agent or OpenBao Proxy configuration blocks\n// ...\n\nauto_auth {\n  method {\n    type = "approle"\n\n    config = {\n      role_id_file_path = "/etc/openbao/roleid"\n      secret_id_file_path = "/etc/openbao/secretid"\n    }\n  }\n\n  sink {\n    type = "file"\n\n    config = {\n      path = "/tmp/file-foo"\n    }\n  }\n\n  sink {\n    type = "file"\n\n    config = {\n      path = "/tmp/file-bar"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"sinks-json-format",children:"Sinks (JSON format)"}),"\n",(0,i.jsxs)(n.p,{children:["The following JSON configuration illustrates the need for a ",(0,i.jsx)(n.code,{children:"sinks: [...]"})," array\nwrapping any number of ",(0,i.jsx)(n.code,{children:"sink"})," objects."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'{\n  "auto_auth" : {\n    "method" : [\n      {\n        type = "approle"\n\n        config = {\n          role_id_file_path = "/etc/openbao/roleid"\n          secret_id_file_path = "/etc/openbao/secretid"\n        }\n      }\n    ],\n    "sinks" : [\n      {\n        "sink" : {\n          type = "file"\n\n          config = {\n            path = "/tmp/file-foo"\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Multiple sinks are defined by appending more ",(0,i.jsx)(n.code,{children:"sink"})," objects within the ",(0,i.jsx)(n.code,{children:"sinks"}),"\narray:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'{\n  "auto_auth" : {\n    "method" : [\n      {\n        type = "approle"\n\n        config = {\n          role_id_file_path = "/etc/openbao/roleid"\n          secret_id_file_path = "/etc/openbao/secretid"\n        }\n      }\n    ],\n    "sinks" : [\n      {\n        "sink" : {\n          type = "file"\n\n          config = {\n            path = "/tmp/file-foo"\n          }\n        }\n      },\n      {\n        "sink" : {\n          type = "file"\n\n          config = {\n            path = "/tmp/file-bar"\n          }\n        }\n      }\n    ]\n  }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(96540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);