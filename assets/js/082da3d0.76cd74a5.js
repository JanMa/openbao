"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1401],{76873:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=n(74848),r=n(28453);const a={sidebar_label:"PostgreSQL",description:"The PostgreSQL plugin for OpenBao's database secrets engine generates database credentials to access PostgreSQL servers."},i="PostgreSQL database plugin HTTP API",o={id:"secret/databases/postgresql",title:"PostgreSQL database plugin HTTP API",description:"The PostgreSQL plugin for OpenBao's database secrets engine generates database credentials to access PostgreSQL servers.",source:"@site/content/api-docs/secret/databases/postgresql.mdx",sourceDirName:"secret/databases",slug:"/secret/databases/postgresql",permalink:"/openbao/api-docs/secret/databases/postgresql",draft:!1,unlisted:!1,editUrl:"https://github.com/openbao/openbao/tree/main/website/content/api-docs/secret/databases/postgresql.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"PostgreSQL",description:"The PostgreSQL plugin for OpenBao's database secrets engine generates database credentials to access PostgreSQL servers."},sidebar:"api",previous:{title:"MySQL/MariaDB",permalink:"/openbao/api-docs/secret/databases/mysql-maria"},next:{title:"Overview",permalink:"/openbao/api-docs/secret/identity/"}},d={},l=[{value:"Configure connection",id:"configure-connection",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Sample payload with URI-format connection string",id:"sample-payload-with-uri-format-connection-string",level:3},{value:"Sample payload with Keyword/Value-format connection string",id:"sample-payload-with-keywordvalue-format-connection-string",level:3},{value:"Sample request",id:"sample-request",level:3},{value:"Connection strings with multiple hosts",id:"connection-strings-with-multiple-hosts",level:3},{value:"URI-format Multi-Host string:",id:"uri-format-multi-host-string",level:4},{value:"Keyword/Value-format Multi-Host string:",id:"keywordvalue-format-multi-host-string",level:4},{value:"Statements",id:"statements",level:2},{value:"Parameters",id:"parameters-1",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"postgresql-database-plugin-http-api",children:"PostgreSQL database plugin HTTP API"}),"\n",(0,t.jsx)(s.p,{children:"The PostgreSQL database plugin is one of the supported plugins for the database\nsecrets engine. This plugin generates database credentials dynamically based on\nconfigured roles for the PostgreSQL database."}),"\n",(0,t.jsx)(s.h2,{id:"configure-connection",children:"Configure connection"}),"\n",(0,t.jsxs)(s.p,{children:["In addition to the parameters defined by the ",(0,t.jsx)(s.a,{href:"/api-docs/secret/databases#configure-connection",children:"Database\nBackend"}),", this plugin\nhas a number of parameters to further configure a connection."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Method"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Path"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"POST"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.code,{children:"/database/config/:name"})})]})})]}),"\n",(0,t.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"connection_url"})," ",(0,t.jsx)(s.code,{children:"(string: <required>)"})," - Specifies the PostgreSQL DSN. This field\ncan be templated and supports passing the username and password\nparameters in the following format ",(0,t.jsx)(s.code,{children:"{{field_name}}"}),". Certificate authentication\ncan be used by setting ",(0,t.jsx)(s.code,{children:"?sslmode="})," to be any of the applicable values as outlined in\nthe ",(0,t.jsx)(s.a,{href:"https://www.postgresql.org/docs/11/libpq-ssl.html#LIBPQ-SSL-PROTECTION",children:"Postgres SQL documentation"}),"\nand giving the SSL credentials in the ",(0,t.jsx)(s.code,{children:"sslrootcert"}),", ",(0,t.jsx)(s.code,{children:"sslcert"})," and ",(0,t.jsx)(s.code,{children:"sslkey"})," credentials.\nA templated connection URL is required when using root credential rotation. This field\nsupports both format string types, URI and keyword/value. Both formats support multiple\nhost connection strings.\nDue to how ",(0,t.jsx)(s.code,{children:"pgx"})," works, parameters such as ",(0,t.jsx)(s.code,{children:"sslrootcert"}),", ",(0,t.jsx)(s.code,{children:"sslcert"}),", ",(0,t.jsx)(s.code,{children:"sslkey"})," are treated as paths\non the OpenBao server."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"max_open_connections"})," ",(0,t.jsx)(s.code,{children:"(int: 4)"})," - Specifies the maximum number of open\nconnections to the database."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"max_idle_connections"})," ",(0,t.jsx)(s.code,{children:"(int: 0)"})," - Specifies the maximum number of idle\nconnections to the database. A zero uses the value of ",(0,t.jsx)(s.code,{children:"max_open_connections"}),"\nand a negative value disables idle connections. If larger than\n",(0,t.jsx)(s.code,{children:"max_open_connections"})," it will be reduced to be equal."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"max_connection_lifetime"})," ",(0,t.jsx)(s.code,{children:'(string: "0s")'})," - Specifies the maximum amount of\ntime a connection may be reused. If <= ",(0,t.jsx)(s.code,{children:"0s"}),", connections are reused forever."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"username"})," ",(0,t.jsx)(s.code,{children:'(string: "")'})," - The root credential username used in the connection URL."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"password"})," ",(0,t.jsx)(s.code,{children:'(string: "")'})," - The root credential password used in the connection URL."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"username_template"})," ",(0,t.jsx)(s.code,{children:"(string)"})," - ",(0,t.jsx)(s.a,{href:"/docs/concepts/username-templating",children:"Template"})," describing how\ndynamic usernames are generated."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"disable_escaping"})," ",(0,t.jsx)(s.code,{children:"(boolean: false)"})," - Turns off the escaping of special characters inside of the username\nand password fields. See the ",(0,t.jsx)(s.a,{href:"/docs/secrets/databases#disable-character-escaping",children:"databases secrets engine docs"}),"\nfor more information. Defaults to ",(0,t.jsx)(s.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"password_authentication"})," ",(0,t.jsx)(s.code,{children:'(string: "password")'}),' - When set to "scram-sha-256", passwords will be hashed by OpenBao and stored as-is by PostgreSQL.\nUsing "scram-sha-256" requires a minimum version of PostgreSQL 10. Available options are "scram-sha-256" and "password". The default is "password".\nWhen set to "password", passwords will be sent to PostgresSQL in plaintext format and may appear in PostgreSQL logs as-is.\nFor more information, please refer to the ',(0,t.jsx)(s.a,{href:"https://www.postgresql.org/docs/current/sql-createrole.html#password",children:"PostgreSQL documentation"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"Default Username Template"})}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'{{ printf "v-%s-%s-%s-%s" (.DisplayName | truncate 8) (.RoleName | truncate 8) (random 20) (unix_time) | truncate 63 }}\n'})}),(0,t.jsxs)(n,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"Example Usernames:"})}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Example"}),(0,t.jsx)(s.th,{})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DisplayName"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"token"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"RoleName"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"myrolename"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Username"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"v-token-myrolena-jNFRlKsZZMxJEx60o66i-1614294836"})})]})]})]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Example"}),(0,t.jsx)(s.th,{})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DisplayName"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"amuchlonger_dispname"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"RoleName"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"role-name-with-dashes"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Username"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"v-amuchlon-role-nam-LUHU9xqm6YNisikA3iCQ-1614294836"})})]})]})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"sample-payload-with-uri-format-connection-string",children:"Sample payload with URI-format connection string"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "plugin_name": "postgresql-database-plugin",\n  "allowed_roles": "readonly",\n  "connection_url": "postgresql://{{username}}:{{password}}@localhost:5432/postgres",\n  "max_open_connections": 5,\n  "max_connection_lifetime": "5s",\n  "username": "username",\n  "password": "password"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"sample-payload-with-keywordvalue-format-connection-string",children:"Sample payload with Keyword/Value-format connection string"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "plugin_name": "postgresql-database-plugin",\n  "allowed_roles": "readonly",\n  "connection_url": "host=localhost port=5432 user={{username}} password={{password}}",\n  "max_open_connections": 5,\n  "max_connection_lifetime": "5s",\n  "username": "username",\n  "password": "password"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"sample-request",children:"Sample request"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell-session",children:'$ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/database/config/postgresql\n'})}),"\n",(0,t.jsx)(s.h3,{id:"connection-strings-with-multiple-hosts",children:"Connection strings with multiple hosts"}),"\n",(0,t.jsxs)(s.p,{children:["Postgres supports multiple hosts in the connection string. An example use-case for this might be having\nPostgres set up with Replication Manager. However, there are some formatting rules to consider when using\nthis feature. Please refer to the ",(0,t.jsx)(s.a,{href:"https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING",children:'"Specifying Multiple Hosts" section of the\nofficial Postgres documentation'}),"\nfor more information. Below are two small examples."]}),"\n",(0,t.jsx)(s.h4,{id:"uri-format-multi-host-string",children:"URI-format Multi-Host string:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "connection_url": "postgresql://{{username}}:{{password}}@hostone:5432,hosttwo:5432,hostthree:9999/postgres"\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"keywordvalue-format-multi-host-string",children:"Keyword/Value-format Multi-Host string:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "connection_url": "host=hostone,hosttwo,hostthree port=5432,5432,9999 user={{username}} password={{password}} dbname=postgres"\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"statements",children:"Statements"}),"\n",(0,t.jsxs)(s.p,{children:["Statements are configured during role creation and are used by the plugin to\ndetermine what is sent to the database on user creation, renewing, and\nrevocation. For more information on configuring roles see the ",(0,t.jsx)(s.a,{href:"/api-docs/secret/databases#create-role",children:"Role\nAPI"})," in the database secrets engine docs."]}),"\n",(0,t.jsx)(s.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(s.p,{children:"The following are the statements used by this plugin. If not mentioned in this\nlist the plugin does not support that statement type."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"creation_statements"})," ",(0,t.jsx)(s.code,{children:"(list: <required>)"})," \u2013 Specifies the database\nstatements executed to create and configure a user. Must be a\nsemicolon-separated string, a base64-encoded semicolon-separated string, a\nserialized JSON string array, or a base64-encoded serialized JSON string\narray. The ",(0,t.jsx)(s.code,{children:"{{name}}"}),", ",(0,t.jsx)(s.code,{children:"{{password}}"})," and ",(0,t.jsx)(s.code,{children:"{{expiration}}"})," values will be\nsubstituted. The generated password will be a random alphanumeric 20 character\nstring."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"revocation_statements"})," ",(0,t.jsx)(s.code,{children:"(list: [])"})," \u2013 Specifies the database statements to\nbe executed to revoke a user. Must be a semicolon-separated string, a\nbase64-encoded semicolon-separated string, a serialized JSON string array, or\na base64-encoded serialized JSON string array. The ",(0,t.jsx)(s.code,{children:"{{name}}"})," value will be\nsubstituted. If not provided defaults to a generic drop user statement."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"rollback_statements"})," ",(0,t.jsx)(s.code,{children:"(list: [])"})," \u2013 Specifies the database statements to be\nexecuted rollback a create operation in the event of an error. Not every\nplugin type will support this functionality. Must be a semicolon-separated\nstring, a base64-encoded semicolon-separated string, a serialized JSON string\narray, or a base64-encoded serialized JSON string array. The ",(0,t.jsx)(s.code,{children:"{{name}}"})," value\nwill be substituted."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"renew_statements"})," ",(0,t.jsx)(s.code,{children:"(list: [])"})," \u2013 Specifies the database statements to be\nexecuted to renew a user. Not every plugin type will support this\nfunctionality. Must be a semicolon-separated string, a base64-encoded\nsemicolon-separated string, a serialized JSON string array, or a\nbase64-encoded serialized JSON string array. The ",(0,t.jsx)(s.code,{children:"{{name}}"})," and\n",(0,t.jsx)(s.code,{children:"{{expiration}}"})," values will be substituted."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"rotation_statements"})," ",(0,t.jsx)(s.code,{children:"(list: [])"})," \u2013 Specifies the database statements to be\nexecuted to rotate the password for a given username. Must be a\nsemicolon-separated string, a base64-encoded semicolon-separated string, a\nserialized JSON string array, or a base64-encoded serialized JSON string\narray. The ",(0,t.jsx)(s.code,{children:"{{name}}"})," and ",(0,t.jsx)(s.code,{children:"{{password}}"})," values will be substituted. The\ngenerated password will be a random alphanumeric 20 character string."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(96540);const r={},a=t.createContext(r);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);